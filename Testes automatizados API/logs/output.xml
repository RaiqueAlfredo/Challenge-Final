<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3 (Python 3.13.4 on win32)" generated="2025-07-01T17:20:49.325154" rpa="false" schemaversion="5">
<suite id="s1" name="Theaters Tests" source="C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\tests\theaters_tests.robot">
<test id="s1-t1" name="THEATERS-BE-006: Criar cinema com payload inválido" line="17">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${auth_token_admin}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token_admin}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-01T17:20:49.941668" elapsed="0.000326"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-01T17:20:49.942415" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-01T17:20:49.942112" elapsed="0.000493"/>
</kw>
<status status="PASS" start="2025-07-01T17:20:49.941154" elapsed="0.001503"/>
</kw>
<kw name="Login usuário admin" owner="common">
<kw name="Payload login usuário admin" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-01T17:20:49.943678" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-01T17:20:49.943932" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-01T17:20:49.943542" elapsed="0.000417"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-01T17:20:49.944255" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_email_dup': {'email': 'user@example.com', 'pass...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-01T17:20:49.944064" elapsed="0.000212"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-01T17:20:49.944314" elapsed="0.000035"/>
</return>
<msg time="2025-07-01T17:20:49.944438" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_email_dup': {'email': 'user@example.com', 'pass...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-01T17:20:49.943337" elapsed="0.001118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-01T17:20:49.944858" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<var>${dados_login_admin}</var>
<arg>${json["admin_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-01T17:20:49.944532" elapsed="0.000345"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-01T17:20:49.945082" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_admin}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-01T17:20:49.944962" elapsed="0.000147"/>
</kw>
<status status="PASS" start="2025-07-01T17:20:49.943091" elapsed="0.002055"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-01T17:20:50.027483" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '57'} 
 body=b'{"email": "admin@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-01T17:20:50.027576" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-SmplCPTM8M8baEg/T11deIZsDkk"', 'Date': 'Tue, 01 Jul 2025 20:20:50 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"6862ef38839c6cf2b35c727d","name":"Admin User","email":"admin@example.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjJlZjM4ODM5YzZjZjJiMzVjNzI3ZCIsImlhdCI6MTc1MTQwMTI1MCwiZXhwIjoxNzUxNDg3NjUwfQ.4f1nWEgFylv5w128R0IZ3XU6sjHZXoDFqaLmLC5hMW0"}} 
 </msg>
<msg time="2025-07-01T17:20:50.027676" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-01T17:20:49.945652" elapsed="0.082046"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.028217" level="INFO">Response: {'success': True, 'data': {'_id': '6862ef38839c6cf2b35c727d', 'name': 'Admin User', 'email': 'admin@example.com', 'role': 'admin', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjJlZjM4ODM5YzZjZjJiMzVjNzI3ZCIsImlhdCI6MTc1MTQwMTI1MCwiZXhwIjoxNzUxNDg3NjUwfQ.4f1nWEgFylv5w128R0IZ3XU6sjHZXoDFqaLmLC5hMW0'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-01T17:20:50.027837" elapsed="0.000415"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.028447" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-01T17:20:50.028336" elapsed="0.000138"/>
</kw>
<arg>${dados_login_admin}</arg>
<status status="PASS" start="2025-07-01T17:20:49.945255" elapsed="0.083257"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-01T17:20:50.028784" elapsed="0.000257"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.029343" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-01T17:20:50.029119" elapsed="0.000253"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.029685" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjJlZjM4ODM5YzZjZjJiMzVjNzI3ZCIsImlhdCI6MTc1MTQwMTI1MCwiZXhwIjoxNzUxNDg3NjUwfQ.4f1nWEgFylv5w128R0IZ3XU6sjHZXoDFqaLmLC5hMW0</msg>
<var>${token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-01T17:20:50.029446" elapsed="0.000365"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.030272" level="INFO">${auth_token_user} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjJlZjM4ODM5YzZjZjJiMzVjNzI3ZCIsImlhdCI6MTc1MTQwMTI1MCwiZXhwIjoxNzUxNDg3NjUwfQ.4f1nWEgFylv5w128R0IZ3XU6sjHZXoDFqaLmLC5hMW0</msg>
<arg>${auth_token_user}</arg>
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-01T17:20:50.029898" elapsed="0.000403"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.030612" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-01T17:20:50.030375" elapsed="0.000269"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.030786" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjJlZjM4ODM5YzZjZjJiMzVjNzI3ZCIsImlhdCI6MTc1MTQwMTI1MCwiZXhwIjoxNzUxNDg3NjUwfQ.4f1nWEgFylv5w128R0IZ3XU6sjHZXoDFqaLmLC5hMW0</msg>
<arg>token: ${token}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-01T17:20:50.030715" elapsed="0.000098"/>
</kw>
<status status="PASS" start="2025-07-01T17:20:50.028622" elapsed="0.002225"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-01T17:20:50.031113" elapsed="0.000476"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.031738" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-01T17:20:50.031666" elapsed="0.000097"/>
</kw>
<status status="PASS" start="2025-07-01T17:20:50.030939" elapsed="0.000857"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.032103" level="INFO">${auth_token_admin} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjJlZjM4ODM5YzZjZjJiMzVjNzI3ZCIsImlhdCI6MTc1MTQwMTI1MCwiZXhwIjoxNzUxNDg3NjUwfQ.4f1nWEgFylv5w128R0IZ3XU6sjHZXoDFqaLmLC5hMW0</msg>
<var>${auth_token_admin}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-01T17:20:50.031860" elapsed="0.000261"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.032309" level="INFO">${auth_token_admin} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjJlZjM4ODM5YzZjZjJiMzVjNzI3ZCIsImlhdCI6MTc1MTQwMTI1MCwiZXhwIjoxNzUxNDg3NjUwfQ.4f1nWEgFylv5w128R0IZ3XU6sjHZXoDFqaLmLC5hMW0</msg>
<arg>${auth_token_admin}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-01T17:20:50.032198" elapsed="0.000135"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token_admin}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-01T17:20:50.032891" elapsed="0.000112"/>
</kw>
<arg>'${auth_token_admin}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token_admin}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-01T17:20:50.032581" elapsed="0.000457"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-01T17:20:50.033256" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjJlZjM4ODM5YzZjZjJiMzVjNzI3ZCIsImlhdCI6MTc1MTQwMTI1MCwiZXhwIjoxNzUxNDg3NjUwfQ.4f1nWEgFylv5w128R0IZ3XU6sjHZXoDFqaLmLC5hMW0'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-01T17:20:50.033110" elapsed="0.000242"/>
</kw>
<status status="PASS" start="2025-07-01T17:20:50.032419" elapsed="0.000971"/>
</kw>
<status status="PASS" start="2025-07-01T17:20:49.942877" elapsed="0.090539"/>
</kw>
<kw name="Payload criar cinema com dados inválidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-01T17:20:50.034090" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json&lt;/a&gt;'.</msg>
<msg time="2025-07-01T17:20:50.034315" level="INFO">${arquivo} = {
    "theater_valido": {
        "name": "Theaters Valido",
        "capacity": 100,
        "type": "3D"
    },
    "theater_invalido": {
        "name": "",
        "capacity": 0,
        "type": "...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-01T17:20:50.033993" elapsed="0.000344"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.034584" level="INFO">${data} = {'theater_valido': {'name': 'Theaters Valido', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-01T17:20:50.034419" elapsed="0.000184"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-01T17:20:50.034641" elapsed="0.000033"/>
</return>
<msg time="2025-07-01T17:20:50.034754" level="INFO">${json} = {'theater_valido': {'name': 'Theaters Valido', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${json}</var>
<arg>json_theater.json</arg>
<status status="PASS" start="2025-07-01T17:20:50.033826" elapsed="0.000945"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.035098" level="INFO">${dados_theater_inv} = {'name': '', 'capacity': 0, 'type': 'type invalido'}</msg>
<var>${dados_theater_inv}</var>
<arg>${json["theater_invalido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-01T17:20:50.034844" elapsed="0.000271"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.035286" level="INFO">${dados_theater_inv} = {'name': '', 'capacity': 0, 'type': 'type invalido'}</msg>
<arg>${dados_theater_inv}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-01T17:20:50.035190" elapsed="0.000120"/>
</kw>
<status status="PASS" start="2025-07-01T17:20:50.033618" elapsed="0.001791"/>
</kw>
<kw name="POST endpoint /theaters com dados inválidos" owner="theaters_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-01T17:20:50.060574" level="INFO">POST Request : url=http://localhost:5000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjJlZjM4ODM5YzZjZjJiMzVjNzI3ZCIsImlhdCI6MTc1MTQwMTI1MCwiZXhwIjoxNzUxNDg3NjUwfQ.4f1nWEgFylv5w128R0IZ3XU6sjHZXoDFqaLmLC5hMW0', 'Content-Length': '52'} 
 body=b'{"name": "", "capacity": 0, "type": "type invalido"}' 
 </msg>
<msg time="2025-07-01T17:20:50.060632" level="INFO">POST Response : url=http://localhost:5000/api/v1/theaters 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '201', 'ETag': 'W/"c9-V/aD8PtpkhlSEhHhNVt5r25aXNU"', 'Date': 'Tue, 01 Jul 2025 20:20:50 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"name":"Theater name is required","capacity":"Capacity must be at least 1","type":"`type invalido` is not a valid enum value for path `type`."}} 
 </msg>
<msg time="2025-07-01T17:20:50.060715" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/theaters</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-01T17:20:50.035925" elapsed="0.024809"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.061168" level="INFO">Response: {'success': False, 'message': 'Validation failed', 'errors': {'name': 'Theater name is required', 'capacity': 'Capacity must be at least 1', 'type': '`type invalido` is not a valid enum value for path `type`.'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-01T17:20:50.060844" elapsed="0.000355"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.061392" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-01T17:20:50.061284" elapsed="0.000135"/>
</kw>
<status status="PASS" start="2025-07-01T17:20:50.035637" elapsed="0.025820"/>
</kw>
<kw name="Validar se retorna mensagem de erro informando os dados inválidos" owner="theaters_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-01T17:20:50.061838" elapsed="0.000297"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["message"]}</arg>
<arg>Validation failed</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-01T17:20:50.062219" elapsed="0.000265"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.062826" level="INFO">Length is 3.</msg>
<arg>${resp.json()["errors"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-01T17:20:50.062561" elapsed="0.000295"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.063183" level="INFO">success: False</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-01T17:20:50.062936" elapsed="0.000275"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.063520" level="INFO">message: Validation failed</msg>
<arg>message: ${resp.json()["message"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-01T17:20:50.063286" elapsed="0.000262"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.063854" level="INFO">errors: {'name': 'Theater name is required', 'capacity': 'Capacity must be at least 1', 'type': '`type invalido` is not a valid enum value for path `type`.'}</msg>
<arg>errors: ${resp.json()["errors"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-01T17:20:50.063621" elapsed="0.000261"/>
</kw>
<status status="PASS" start="2025-07-01T17:20:50.061649" elapsed="0.002269"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-01T17:20:50.064249" elapsed="0.000583"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.064983" level="INFO">Status Code: 400</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-01T17:20:50.064910" elapsed="0.000099"/>
</kw>
<status status="PASS" start="2025-07-01T17:20:50.064059" elapsed="0.000984"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-01T17:20:50.065477" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-01T17:20:50.065437" elapsed="0.000151"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-01T17:20:50.065808" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-01T17:20:50.065695" elapsed="0.000156"/>
</kw>
<status status="PASS" start="2025-07-01T17:20:50.065250" elapsed="0.000660"/>
</kw>
<tag>criar_cinema_invalido</tag>
<status status="PASS" start="2025-07-01T17:20:49.940486" elapsed="0.125537"/>
</test>
<doc>Cenários de testes candidatos à automação para o módulo de "Theaters"</doc>
<status status="PASS" start="2025-07-01T17:20:49.326342" elapsed="0.740117"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">criar_cinema_invalido</stat>
</tag>
<suite>
<stat name="Theaters Tests" id="s1" pass="1" fail="0" skip="0">Theaters Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
