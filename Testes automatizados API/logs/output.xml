<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3 (Python 3.13.4 on win32)" generated="2025-07-02T00:01:34.077353" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\tests">
<suite id="s1-s1" name="Authentication Tests" source="C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\tests\authentication_tests.robot">
<test id="s1-s1-t1" name="AUTH-BE-002: Login de usuário" line="10">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:34.717003" elapsed="0.000348"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:34.717672" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:34.717469" elapsed="0.000361"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.716429" elapsed="0.001458"/>
</kw>
<kw name="Payload login usuário comum" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:34.718637" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:34.718861" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:34.718520" elapsed="0.000365"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.719171" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:34.718972" elapsed="0.000219"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:34.719230" elapsed="0.000035"/>
</return>
<msg time="2025-07-02T00:01:34.719360" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:34.718342" elapsed="0.001036"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.719736" level="INFO">${dados_login_user} = {'email': 'user@example.com', 'password': 'password123'}</msg>
<var>${dados_login_user}</var>
<arg>${json["user_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:34.719459" elapsed="0.000296"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.719952" level="INFO">${dados_login_user} = {'email': 'user@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:34.719841" elapsed="0.000138"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.718095" elapsed="0.001919"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:34.802687" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '56'} 
 body=b'{"email": "user@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:34.802792" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-OYxcbuH+m50OCexkf2RZJ99GV/8"', 'Date': 'Wed, 02 Jul 2025 03:01:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3b0","name":"Regular User","email":"user@example.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NCwiZXhwIjoxNzUxNTExNjk0fQ.0K_ODvq3OkrN_q8SCPVJ3VuCTxb9tw4AkhnAjNvcRz8"}} 
 </msg>
<msg time="2025-07-02T00:01:34.802901" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:34.720424" elapsed="0.082501"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.803476" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3b0', 'name': 'Regular User', 'email': 'user@example.com', 'role': 'user', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NCwiZXhwIjoxNzUxNTExNjk0fQ.0K_ODvq3OkrN_q8SCPVJ3VuCTxb9tw4AkhnAjNvcRz8'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.803081" elapsed="0.000437"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.803768" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:34.803634" elapsed="0.000167"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.720177" elapsed="0.083674"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:34.804318" elapsed="0.000337"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.805071" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:34.804783" elapsed="0.000321"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.805437" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.805191" elapsed="0.000387"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.805903" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NCwiZXhwIjoxNzUxNTExNjk0fQ.0K_ODvq3OkrN_q8SCPVJ3VuCTxb9tw4AkhnAjNvcRz8</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.805662" elapsed="0.000271"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.804088" elapsed="0.001884"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:34.806362" elapsed="0.000676"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.807200" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.807122" elapsed="0.000105"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.806141" elapsed="0.001122"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:34.807818" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:34.807768" elapsed="0.000104"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.808004" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.807949" elapsed="0.000083"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.807519" elapsed="0.000549"/>
</kw>
<doc>Teste realizado com os dados de login recomendado para testar a API em "Sample Users" no README do repositório "cinema-challenge-back"</doc>
<tag>login_válido</tag>
<status status="PASS" start="2025-07-02T00:01:34.715494" elapsed="0.092647"/>
</test>
<test id="s1-s1-t2" name="AUTH-BE-006: Registro com e-mail já existente" line="17">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:34.808944" elapsed="0.000268"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:34.809464" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:34.809301" elapsed="0.000268"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.808780" elapsed="0.000831"/>
</kw>
<kw name="Payload registro com email duplicado" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:34.810287" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:34.810527" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:34.810182" elapsed="0.000368"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.810814" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:34.810637" elapsed="0.000197"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:34.810871" elapsed="0.000035"/>
</return>
<msg time="2025-07-02T00:01:34.810992" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:34.810035" elapsed="0.000974"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.811332" level="INFO">${dados_regis_dup} = {'email': 'user@example.com', 'password': 'qatest321'}</msg>
<var>${dados_regis_dup}</var>
<arg>${json["user_email_dup"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:34.811083" elapsed="0.000266"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.811527" level="INFO">${dados_regis_dup} = {'email': 'user@example.com', 'password': 'qatest321'}</msg>
<arg>${dados_regis_dup}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:34.811430" elapsed="0.000121"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.809865" elapsed="0.001719"/>
</kw>
<kw name="POST endpoint /auth/register" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:34.835643" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/register 
 path_url=/api/v1/auth/register 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "user@example.com", "password": "qatest321"}' 
 </msg>
<msg time="2025-07-02T00:01:34.835701" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/register 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '49', 'ETag': 'W/"31-WKEMg8zALB1Ko0WjUHi/6RBGHVc"', 'Date': 'Wed, 02 Jul 2025 03:01:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"User already exists"} 
 </msg>
<msg time="2025-07-02T00:01:34.835912" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/register</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:34.812194" elapsed="0.023743"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.836431" level="INFO">Response: {'success': False, 'message': 'User already exists'}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.836134" elapsed="0.000327"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.836646" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:34.836546" elapsed="0.000126"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.811948" elapsed="0.024761"/>
</kw>
<kw name="Validar se retorna mensagem informando que já existe usuário com esse email" owner="authentication_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:34.837079" elapsed="0.000295"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["message"]}</arg>
<arg>User already exists</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:34.837463" elapsed="0.000259"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.838035" level="INFO">success: False</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.837804" elapsed="0.000260"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.838365" level="INFO">message: User already exists</msg>
<arg>message: ${resp.json()["message"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.838139" elapsed="0.000254"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.836900" elapsed="0.001530"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:34.838830" elapsed="0.000463"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.839443" level="INFO">Status Code: 400</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.839372" elapsed="0.000098"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.838609" elapsed="0.000895"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:34.839895" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:34.839852" elapsed="0.000083"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.840054" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.840004" elapsed="0.000076"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.839675" elapsed="0.000437"/>
</kw>
<doc>Para realizar este teste tentei registrar um usuário usando o email recomendado para testar a API em "Sample Users" no README do repositório "cinema-challenge-back"</doc>
<tag>registro_email_dup</tag>
<status status="PASS" start="2025-07-02T00:01:34.808381" elapsed="0.031792"/>
</test>
<test id="s1-s1-t3" name="AUTH-BE-007: Login com credenciais inválidas" line="24">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:34.840795" elapsed="0.000270"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:34.841310" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:34.841153" elapsed="0.000247"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.840641" elapsed="0.000800"/>
</kw>
<kw name="Payload login com credenciais inválidas" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:34.841995" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:34.842221" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:34.841896" elapsed="0.000347"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.842504" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:34.842328" elapsed="0.000195"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:34.842559" elapsed="0.000024"/>
</return>
<msg time="2025-07-02T00:01:34.842666" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:34.841725" elapsed="0.000957"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.843015" level="INFO">${dados_login_inv} = {'email': 'invalidEmail.com', 'password': ''}</msg>
<var>${dados_login_inv}</var>
<arg>${json["user_login_inv"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:34.842759" elapsed="0.000276"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.843221" level="INFO">${dados_login_inv} = {'email': 'invalidEmail.com', 'password': ''}</msg>
<arg>${dados_login_inv}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:34.843116" elapsed="0.000131"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.841572" elapsed="0.001708"/>
</kw>
<kw name="POST endpoint /auth/login com credenciais inválidas" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:34.866309" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '45'} 
 body=b'{"email": "invalidEmail.com", "password": ""}' 
 </msg>
<msg time="2025-07-02T00:01:34.866377" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '55', 'ETag': 'W/"37-5uDpJTljPBecOPs/j7OXFdPRcmQ"', 'Date': 'Wed, 02 Jul 2025 03:01:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Invalid email or password"} 
 </msg>
<msg time="2025-07-02T00:01:34.866488" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:34.843845" elapsed="0.022667"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.867059" level="INFO">Response: {'success': False, 'message': 'Invalid email or password'}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.866665" elapsed="0.000428"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.867329" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:34.867188" elapsed="0.000171"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.843537" elapsed="0.023864"/>
</kw>
<kw name="Validar se retorna mensagem informando que as credenciais são inválidas" owner="authentication_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:34.867875" elapsed="0.000325"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["message"]}</arg>
<arg>Invalid email or password</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:34.868287" elapsed="0.000296"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.868927" level="INFO">success: False</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.868674" elapsed="0.000284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.869272" level="INFO">message: Invalid email or password</msg>
<arg>message: ${resp.json()["message"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.869036" elapsed="0.000271"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.867642" elapsed="0.001703"/>
</kw>
<kw name="Validar Status Code &quot;401&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:34.869687" elapsed="0.000479"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.870322" level="INFO">Status Code: 401</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.870248" elapsed="0.000101"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.869509" elapsed="0.000876"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:34.870775" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:34.870733" elapsed="0.000082"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.870935" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:34.870886" elapsed="0.000076"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.870563" elapsed="0.000433"/>
</kw>
<tag>login_inválido</tag>
<status status="PASS" start="2025-07-02T00:01:34.840393" elapsed="0.030662"/>
</test>
<doc>Cenários de testes candidatos à automação para o módulo de "Authentication"</doc>
<status status="PASS" start="2025-07-02T00:01:34.100487" elapsed="0.771003"/>
</suite>
<suite id="s1-s2" name="Movie Tests" source="C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\tests\movie_tests.robot">
<test id="s1-s2-t1" name="MOVIE-BE-002: Visualizar detalhes do filme" line="10">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:34.879814" elapsed="0.000340"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:34.880478" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:34.880266" elapsed="0.000344"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.879618" elapsed="0.001049"/>
</kw>
<kw name="Reset movie from database" owner="common">
<kw name="Payload criar filme com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:34.881571" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_movie.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_movie.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:34.881814" level="INFO">${arquivo} = {
    "movie_valido": {
        "title": "Filme Para Teste",
        "synopsis": "Sinopse do Filme",
        "director": "Testador de Filme",
        "genres": [
            "Science Fiction"
        ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:34.881448" elapsed="0.000389"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.882112" level="INFO">${data} = {'movie_valido': {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmeP...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:34.881926" elapsed="0.000281"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:34.882248" elapsed="0.000026"/>
</return>
<msg time="2025-07-02T00:01:34.882365" level="INFO">${json} = {'movie_valido': {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmeP...</msg>
<var>${json}</var>
<arg>json_movie.json</arg>
<status status="PASS" start="2025-07-02T00:01:34.881260" elapsed="0.001123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.882723" level="INFO">${dados_movie_valido} = {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmePoster.png', 'rele...</msg>
<var>${dados_movie_valido}</var>
<arg>${json["movie_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:34.882462" elapsed="0.000280"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.882934" level="INFO">${dados_movie_valido} = {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmePoster.png', 'rele...</msg>
<arg>${dados_movie_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:34.882824" elapsed="0.000136"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.881071" elapsed="0.001923"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:34.883157" level="INFO">${movie_title} = Filme Para Teste</msg>
<var>${movie_title}</var>
<arg>${dados_movie_valido}[title]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:34.883061" elapsed="0.000112"/>
</kw>
<kw name="Remove movie from database" owner="database">
<msg time="2025-07-02T00:01:35.070241" level="INFO">Found movie with ID: 6864a03fad3d902b83838914 and title: Filme Para Teste
Removed 1 movie(s) with title: Filme Para Teste</msg>
<arg>${movie_title}</arg>
<status status="PASS" start="2025-07-02T00:01:34.883244" elapsed="0.187077"/>
</kw>
<kw name="Inserir filme no banco e pegar ID" owner="common">
<kw name="Insert movie from database" owner="database">
<msg time="2025-07-02T00:01:35.099153" level="INFO">Movie inserted with ID: 6864a10ff75602e326ad6200</msg>
<msg time="2025-07-02T00:01:35.099266" level="INFO">${movie_id} = 6864a10ff75602e326ad6200</msg>
<var>${movie_id}</var>
<arg>${movie_data}</arg>
<status status="PASS" start="2025-07-02T00:01:35.070842" elapsed="0.028448"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.099619" level="INFO">${movie_id} = 6864a10ff75602e326ad6200</msg>
<arg>${movie_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.099452" elapsed="0.000201"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.099849" level="INFO">Movie inserted with ID: 6864a10ff75602e326ad6200</msg>
<arg>Movie inserted with ID: ${movie_id}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.099748" elapsed="0.000138"/>
</kw>
<return>
<value>${movie_id}</value>
<status status="PASS" start="2025-07-02T00:01:35.099927" elapsed="0.000037"/>
</return>
<msg time="2025-07-02T00:01:35.100071" level="INFO">${movie_id} = 6864a10ff75602e326ad6200</msg>
<var>${movie_id}</var>
<arg>${dados_movie_valido}</arg>
<status status="PASS" start="2025-07-02T00:01:35.070538" elapsed="0.029554"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.100305" level="INFO">${movie_id} = 6864a10ff75602e326ad6200</msg>
<arg>${movie_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.100191" elapsed="0.000146"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.100540" level="INFO">${movie_title} = Filme Para Teste</msg>
<arg>${movie_title}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.100429" elapsed="0.000141"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:34.880866" elapsed="0.219745"/>
</kw>
<kw name="Login usuário comum" owner="common">
<kw name="Payload login usuário comum" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:35.101692" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:35.101985" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:35.101570" elapsed="0.000445"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.102368" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:35.102124" elapsed="0.000268"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:35.102434" elapsed="0.000021"/>
</return>
<msg time="2025-07-02T00:01:35.102538" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:35.101360" elapsed="0.001195"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.102941" level="INFO">${dados_login_user} = {'email': 'user@example.com', 'password': 'password123'}</msg>
<var>${dados_login_user}</var>
<arg>${json["user_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.102632" elapsed="0.000328"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.103150" level="INFO">${dados_login_user} = {'email': 'user@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.103042" elapsed="0.000134"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.101148" elapsed="0.002063"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.183303" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '56'} 
 body=b'{"email": "user@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:35.183362" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-yUOGRR0L0cNIe7sMVPWULhLc24c"', 'Date': 'Wed, 02 Jul 2025 03:01:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3b0","name":"Regular User","email":"user@example.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.IMT4fm2ofRnywTV9UwX3j0J0hrfaasX1oV2hxAISETM"}} 
 </msg>
<msg time="2025-07-02T00:01:35.183539" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:35.103561" elapsed="0.080003"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.184069" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3b0', 'name': 'Regular User', 'email': 'user@example.com', 'role': 'user', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.IMT4fm2ofRnywTV9UwX3j0J0hrfaasX1oV2hxAISETM'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.183694" elapsed="0.000415"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.184382" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.184250" elapsed="0.000165"/>
</kw>
<arg>${dados_login_user}</arg>
<status status="PASS" start="2025-07-02T00:01:35.103302" elapsed="0.081157"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.184771" elapsed="0.000257"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.185337" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:35.185107" elapsed="0.000259"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.185677" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.185440" elapsed="0.000265"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.186002" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.IMT4fm2ofRnywTV9UwX3j0J0hrfaasX1oV2hxAISETM</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.185778" elapsed="0.000251"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.184585" elapsed="0.001479"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.186342" elapsed="0.000469"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.186958" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.186888" elapsed="0.000096"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.186155" elapsed="0.000862"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.187334" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.IMT4fm2ofRnywTV9UwX3j0J0hrfaasX1oV2hxAISETM</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.187085" elapsed="0.000267"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.187546" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.IMT4fm2ofRnywTV9UwX3j0J0hrfaasX1oV2hxAISETM</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:35.187432" elapsed="0.000139"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:35.188156" elapsed="0.000109"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.187837" elapsed="0.000461"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.188524" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.IMT4fm2ofRnywTV9UwX3j0J0hrfaasX1oV2hxAISETM'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:35.188371" elapsed="0.000247"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.187660" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.100911" elapsed="0.087773"/>
</kw>
<kw name="GET endpoint /movies/id-movie" owner="movies_keywords">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.232745" level="INFO">GET Request : url=http://localhost:5000/api/v1/movies/6864a10ff75602e326ad6200 
 path_url=/api/v1/movies/6864a10ff75602e326ad6200 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.IMT4fm2ofRnywTV9UwX3j0J0hrfaasX1oV2hxAISETM'} 
 body=None 
 </msg>
<msg time="2025-07-02T00:01:35.232845" level="INFO">GET Response : url=http://localhost:5000/api/v1/movies/6864a10ff75602e326ad6200 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '364', 'ETag': 'W/"16c-6JU5FFfxv6tTbOAlOx7Xd7tU8l8"', 'Date': 'Wed, 02 Jul 2025 03:01:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"6864a10ff75602e326ad6200","title":"Filme Para Teste","synopsis":"Sinopse do Filme","director":"Testador de Filme","genres":["Science Fiction"],"duration":200,"classification":"R","poster":"FilmePoster.png","releaseDate":"2025-06-30T00:00:00.000Z","createdAt":"2025-07-02T03:01:35.210Z","sessions":[],"id":"6864a10ff75602e326ad6200"}} 
 </msg>
<msg time="2025-07-02T00:01:35.232929" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/movies/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:35.189154" elapsed="0.043797"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.233426" level="INFO">Response: {'success': True, 'data': {'_id': '6864a10ff75602e326ad6200', 'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmePoster.png', 'releaseDate': '2025-06-30T00:00:00.000Z', 'createdAt': '2025-07-02T03:01:35.210Z', 'sessions': [], 'id': '6864a10ff75602e326ad6200'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.233062" elapsed="0.000402"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.233687" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.233567" elapsed="0.000152"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.188891" elapsed="0.044864"/>
</kw>
<kw name="Validar se o filme foi detalhado corretamente" owner="movies_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:35.234313" elapsed="0.000377"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["data"]["_id"]}</arg>
<arg>${id}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:35.234782" elapsed="0.000293"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["data"]["title"]}</arg>
<arg>${title}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:35.235159" elapsed="0.000277"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.235759" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.235517" elapsed="0.000271"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.236094" level="INFO">_id: 6864a10ff75602e326ad6200</msg>
<arg>_id: ${resp.json()["data"]["_id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.235862" elapsed="0.000260"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.236422" level="INFO">title: Filme Para Teste</msg>
<arg>title: ${resp.json()["data"]["title"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.236193" elapsed="0.000256"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.234017" elapsed="0.002468"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.236898" elapsed="0.000614"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.237695" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.237612" elapsed="0.000112"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.236663" elapsed="0.001096"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.238185" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:35.238144" elapsed="0.000088"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.238352" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.238301" elapsed="0.000078"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.237954" elapsed="0.000458"/>
</kw>
<tag>ver_detalhes_filme</tag>
<status status="PASS" start="2025-07-02T00:01:34.879267" elapsed="0.359210"/>
</test>
<test id="s1-s2-t2" name="MOVIE-BE-006: Criar filme com dados inválidos" line="17">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:35.239417" elapsed="0.000129"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.239094" elapsed="0.000490"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.239862" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.IMT4fm2ofRnywTV9UwX3j0J0hrfaasX1oV2hxAISETM'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:35.239667" elapsed="0.000307"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.238948" elapsed="0.001077"/>
</kw>
<kw name="Login usuário admin" owner="common">
<kw name="Payload login usuário admin" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:35.240784" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:35.241025" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:35.240670" elapsed="0.000403"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.241333" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:35.241162" elapsed="0.000191"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:35.241389" elapsed="0.000025"/>
</return>
<msg time="2025-07-02T00:01:35.241496" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:35.240469" elapsed="0.001046"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.241844" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<var>${dados_login_admin}</var>
<arg>${json["admin_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.241590" elapsed="0.000272"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.242050" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_admin}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.241941" elapsed="0.000135"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.240326" elapsed="0.001784"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.320969" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.IMT4fm2ofRnywTV9UwX3j0J0hrfaasX1oV2hxAISETM', 'Content-Length': '57'} 
 body=b'{"email": "admin@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:35.321034" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-8Q3qNUrAueAYd4NJxZjFqCqlzn4"', 'Date': 'Wed, 02 Jul 2025 03:01:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3af","name":"Admin User","email":"admin@example.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo"}} 
 </msg>
<msg time="2025-07-02T00:01:35.321123" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:35.242394" elapsed="0.078751"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.321639" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3af', 'name': 'Admin User', 'email': 'admin@example.com', 'role': 'admin', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.321275" elapsed="0.000402"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.321912" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.321783" elapsed="0.000155"/>
</kw>
<arg>${dados_login_admin}</arg>
<status status="PASS" start="2025-07-02T00:01:35.242198" elapsed="0.079779"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.322243" elapsed="0.000253"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.322802" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:35.322576" elapsed="0.000255"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.323135" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.322905" elapsed="0.000258"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.323453" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.323235" elapsed="0.000259"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.322080" elapsed="0.001460"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.323804" elapsed="0.000538"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.324495" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.324419" elapsed="0.000105"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.323637" elapsed="0.000921"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.324875" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.324626" elapsed="0.000267"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.325084" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:35.324971" elapsed="0.000175"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:35.325715" elapsed="0.000111"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.325396" elapsed="0.000466"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.326082" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:35.325936" elapsed="0.000238"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.325239" elapsed="0.000976"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.240173" elapsed="0.086069"/>
</kw>
<kw name="Payload criar filme com dados inválidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:35.330326" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_movie.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_movie.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:35.330573" level="INFO">${arquivo} = {
    "movie_valido": {
        "title": "Filme Para Teste",
        "synopsis": "Sinopse do Filme",
        "director": "Testador de Filme",
        "genres": [
            "Science Fiction"
        ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:35.330218" elapsed="0.000378"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.330867" level="INFO">${data} = {'movie_valido': {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmeP...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:35.330682" elapsed="0.000206"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:35.330924" elapsed="0.000023"/>
</return>
<msg time="2025-07-02T00:01:35.331032" level="INFO">${json} = {'movie_valido': {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmeP...</msg>
<var>${json}</var>
<arg>json_movie.json</arg>
<status status="PASS" start="2025-07-02T00:01:35.326652" elapsed="0.004397"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.331389" level="INFO">${dados_movie_inv} = {'title': '', 'synopsis': 'Filme Inválido', 'director': '', 'genres': ['Invalid Genre'], 'duration': 0, 'classification': '', 'poster': 'invalidPoster', 'releaseDate': '2025-06-30'}</msg>
<var>${dados_movie_inv}</var>
<arg>${json["movie_inv"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.331123" elapsed="0.000285"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.331594" level="INFO">${dados_movie_inv} = {'title': '', 'synopsis': 'Filme Inválido', 'director': '', 'genres': ['Invalid Genre'], 'duration': 0, 'classification': '', 'poster': 'invalidPoster', 'releaseDate': '2025-06-30'}</msg>
<arg>${dados_movie_inv}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.331491" elapsed="0.000130"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.326451" elapsed="0.005203"/>
</kw>
<kw name="POST endpoint /movies com dados inválidos" owner="movies_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.356786" level="INFO">POST Request : url=http://localhost:5000/api/v1/movies 
 path_url=/api/v1/movies 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo', 'Content-Length': '186'} 
 body=b'{"title": "", "synopsis": "Filme Inv\\u00e1lido", "director": "", "genres": ["Invalid Genre"], "duration": 0, "classification": "", "poster": "invalidPoster", "releaseDate": "2025-06-30"}' 
 </msg>
<msg time="2025-07-02T00:01:35.356839" level="INFO">POST Response : url=http://localhost:5000/api/v1/movies 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '170', 'ETag': 'W/"aa-xJdwVBQdk1hqVWLIdq6hF9+kr5E"', 'Date': 'Wed, 02 Jul 2025 03:01:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"title":"Title is required","director":"Director is required","classification":"Age classification is required"}} 
 </msg>
<msg time="2025-07-02T00:01:35.356913" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/movies</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:35.332107" elapsed="0.024826"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.357344" level="INFO">Response: {'success': False, 'message': 'Validation failed', 'errors': {'title': 'Title is required', 'director': 'Director is required', 'classification': 'Age classification is required'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.357038" elapsed="0.000339"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.357568" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.357466" elapsed="0.000129"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.331850" elapsed="0.025782"/>
</kw>
<kw name="Validar se retorna mensagem informando que os dados são inválidos para criar o filme" owner="movies_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:35.358038" elapsed="0.000301"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["message"]}</arg>
<arg>Validation failed</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:35.358424" elapsed="0.000257"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.358982" level="INFO">Length is 3.</msg>
<arg>${resp.json()["errors"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:35.358760" elapsed="0.000250"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.359314" level="INFO">success: False</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.359082" elapsed="0.000277"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.359701" level="INFO">message: Validation failed</msg>
<arg>message: ${resp.json()["message"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.359444" elapsed="0.000287"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.360051" level="INFO">errors: {'title': 'Title is required', 'director': 'Director is required', 'classification': 'Age classification is required'}</msg>
<arg>errors: ${resp.json()["errors"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.359808" elapsed="0.000273"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.357816" elapsed="0.002303"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.360459" elapsed="0.000482"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.361097" level="INFO">Status Code: 400</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.361023" elapsed="0.000101"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.360262" elapsed="0.000896"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.361585" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:35.361543" elapsed="0.000086"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.361751" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.361701" elapsed="0.000077"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.361360" elapsed="0.000451"/>
</kw>
<tag>criar_movie_inv</tag>
<status status="PASS" start="2025-07-02T00:01:35.238693" elapsed="0.123182"/>
</test>
<doc>Cenários de testes candidatos à automação para o módulo de "Movies"</doc>
<status status="PASS" start="2025-07-02T00:01:34.871955" elapsed="0.490229"/>
</suite>
<suite id="s1-s3" name="Reservations Tests" source="C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\tests\reservations_tests.robot">
<test id="s1-s3-t1" name="RESERVATIONS-BE-004: Criar nova reserva" line="10">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:35.372599" elapsed="0.000120"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.372235" elapsed="0.000523"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.372994" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:35.372838" elapsed="0.000254"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.372044" elapsed="0.001089"/>
</kw>
<kw name="Reset session from database" owner="common">
<kw name="Payload criar filme com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:35.373876" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_movie.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_movie.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:35.374080" level="INFO">${arquivo} = {
    "movie_valido": {
        "title": "Filme Para Teste",
        "synopsis": "Sinopse do Filme",
        "director": "Testador de Filme",
        "genres": [
            "Science Fiction"
        ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:35.373783" elapsed="0.000319"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.374366" level="INFO">${data} = {'movie_valido': {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmeP...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:35.374186" elapsed="0.000199"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:35.374420" elapsed="0.000024"/>
</return>
<msg time="2025-07-02T00:01:35.374528" level="INFO">${json} = {'movie_valido': {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmeP...</msg>
<var>${json}</var>
<arg>json_movie.json</arg>
<status status="PASS" start="2025-07-02T00:01:35.373636" elapsed="0.000908"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.374875" level="INFO">${dados_movie_valido} = {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmePoster.png', 'rele...</msg>
<var>${dados_movie_valido}</var>
<arg>${json["movie_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.374620" elapsed="0.000273"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.375116" level="INFO">${dados_movie_valido} = {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmePoster.png', 'rele...</msg>
<arg>${dados_movie_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.375005" elapsed="0.000137"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.373485" elapsed="0.001691"/>
</kw>
<kw name="Payload criar cinema com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:35.375657" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:35.375844" level="INFO">${arquivo} = {
    "theater_valido": {
        "name": "Theater Teste",
        "capacity": 100,
        "type": "3D"
    },
    "theater_invalido": {
        "name": "",
        "capacity": 0,
        "type": "ty...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:35.375569" elapsed="0.000296"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.376103" level="INFO">${data} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:35.375948" elapsed="0.000174"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:35.376155" elapsed="0.000018"/>
</return>
<msg time="2025-07-02T00:01:35.376247" level="INFO">${json} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${json}</var>
<arg>json_theater.json</arg>
<status status="PASS" start="2025-07-02T00:01:35.375420" elapsed="0.000843"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.376592" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<var>${dados_theater_valido}</var>
<arg>${json["theater_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.376339" elapsed="0.000270"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.376799" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<arg>${dados_theater_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.376692" elapsed="0.000132"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.375261" elapsed="0.001597"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.377020" level="INFO">${movie_title} = Filme Para Teste</msg>
<var>${movie_title}</var>
<arg>${dados_movie_valido}[title]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.376927" elapsed="0.000108"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.377192" level="INFO">${theater_name} = Theater Teste</msg>
<var>${theater_name}</var>
<arg>${dados_theater_valido}[name]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.377106" elapsed="0.000101"/>
</kw>
<kw name="Remove sessions by movie title and theater name" owner="database">
<msg time="2025-07-02T00:01:35.437126" level="INFO">Found movie "Filme Para Teste" with ID: 6864a10ff75602e326ad6200
Found theater "Theater Teste" with ID: 6864a03f472fdde84ba2fb2e
Removed 0 session(s) for this movie/theater combination</msg>
<arg>${movie_title}</arg>
<arg>${theater_name}</arg>
<status status="PASS" start="2025-07-02T00:01:35.377277" elapsed="0.059905"/>
</kw>
<kw name="Reset movie from database" owner="common">
<kw name="Payload criar filme com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:35.438109" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_movie.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_movie.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:35.438345" level="INFO">${arquivo} = {
    "movie_valido": {
        "title": "Filme Para Teste",
        "synopsis": "Sinopse do Filme",
        "director": "Testador de Filme",
        "genres": [
            "Science Fiction"
        ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:35.437987" elapsed="0.000381"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.438650" level="INFO">${data} = {'movie_valido': {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmeP...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:35.438455" elapsed="0.000215"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:35.438706" elapsed="0.000023"/>
</return>
<msg time="2025-07-02T00:01:35.438814" level="INFO">${json} = {'movie_valido': {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmeP...</msg>
<var>${json}</var>
<arg>json_movie.json</arg>
<status status="PASS" start="2025-07-02T00:01:35.437774" elapsed="0.001057"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.439193" level="INFO">${dados_movie_valido} = {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmePoster.png', 'rele...</msg>
<var>${dados_movie_valido}</var>
<arg>${json["movie_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.438909" elapsed="0.000304"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.439421" level="INFO">${dados_movie_valido} = {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmePoster.png', 'rele...</msg>
<arg>${dados_movie_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.439296" elapsed="0.000187"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.437567" elapsed="0.001955"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.439692" level="INFO">${movie_title} = Filme Para Teste</msg>
<var>${movie_title}</var>
<arg>${dados_movie_valido}[title]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.439594" elapsed="0.000114"/>
</kw>
<kw name="Remove movie from database" owner="database">
<msg time="2025-07-02T00:01:35.485765" level="INFO">Found movie with ID: 6864a10ff75602e326ad6200 and title: Filme Para Teste
Removed 1 movie(s) with title: Filme Para Teste</msg>
<arg>${movie_title}</arg>
<status status="PASS" start="2025-07-02T00:01:35.439782" elapsed="0.046029"/>
</kw>
<kw name="Inserir filme no banco e pegar ID" owner="common">
<kw name="Insert movie from database" owner="database">
<msg time="2025-07-02T00:01:35.510329" level="INFO">Movie inserted with ID: 6864a10ff75602e326ad6201</msg>
<msg time="2025-07-02T00:01:35.510430" level="INFO">${movie_id} = 6864a10ff75602e326ad6201</msg>
<var>${movie_id}</var>
<arg>${movie_data}</arg>
<status status="PASS" start="2025-07-02T00:01:35.486201" elapsed="0.024253"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.510770" level="INFO">${movie_id} = 6864a10ff75602e326ad6201</msg>
<arg>${movie_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.510601" elapsed="0.000203"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.510998" level="INFO">Movie inserted with ID: 6864a10ff75602e326ad6201</msg>
<arg>Movie inserted with ID: ${movie_id}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.510898" elapsed="0.000133"/>
</kw>
<return>
<value>${movie_id}</value>
<status status="PASS" start="2025-07-02T00:01:35.511069" elapsed="0.000033"/>
</return>
<msg time="2025-07-02T00:01:35.511200" level="INFO">${movie_id} = 6864a10ff75602e326ad6201</msg>
<var>${movie_id}</var>
<arg>${dados_movie_valido}</arg>
<status status="PASS" start="2025-07-02T00:01:35.485949" elapsed="0.025269"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.511406" level="INFO">${movie_id} = 6864a10ff75602e326ad6201</msg>
<arg>${movie_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.511310" elapsed="0.000121"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.511598" level="INFO">${movie_title} = Filme Para Teste</msg>
<arg>${movie_title}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.511505" elapsed="0.000116"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.437335" elapsed="0.074323"/>
</kw>
<kw name="Reset theater from database" owner="common">
<kw name="Payload criar cinema com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:35.512844" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:35.513114" level="INFO">${arquivo} = {
    "theater_valido": {
        "name": "Theater Teste",
        "capacity": 100,
        "type": "3D"
    },
    "theater_invalido": {
        "name": "",
        "capacity": 0,
        "type": "ty...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:35.512739" elapsed="0.000397"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.513405" level="INFO">${data} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:35.513223" elapsed="0.000201"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:35.513457" elapsed="0.000018"/>
</return>
<msg time="2025-07-02T00:01:35.513551" level="INFO">${json} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${json}</var>
<arg>json_theater.json</arg>
<status status="PASS" start="2025-07-02T00:01:35.512559" elapsed="0.001009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.513929" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<var>${dados_theater_valido}</var>
<arg>${json["theater_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.513645" elapsed="0.000303"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.514151" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<arg>${dados_theater_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.514029" elapsed="0.000147"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.512374" elapsed="0.001836"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.514371" level="INFO">${theater_name} = Theater Teste</msg>
<var>${theater_name}</var>
<arg>${dados_theater_valido}[name]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.514278" elapsed="0.000109"/>
</kw>
<kw name="Remove theater from database" owner="database">
<msg time="2025-07-02T00:01:35.560078" level="INFO">Found theater with ID: 6864a03f472fdde84ba2fb2e and name: Theater Teste
Removed 1 theater(s) with name: Theater Teste</msg>
<arg>${theater_name}</arg>
<status status="PASS" start="2025-07-02T00:01:35.514457" elapsed="0.045678"/>
</kw>
<kw name="Criar novo theater" owner="common">
<kw name="Login usuário admin" owner="common">
<kw name="Payload login usuário admin" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:35.561203" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:35.561451" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:35.561093" elapsed="0.000381"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.561838" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:35.561649" elapsed="0.000209"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:35.561893" elapsed="0.000025"/>
</return>
<msg time="2025-07-02T00:01:35.562002" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:35.560895" elapsed="0.001124"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.562388" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<var>${dados_login_admin}</var>
<arg>${json["admin_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.562097" elapsed="0.000309"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.562625" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_admin}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.562490" elapsed="0.000161"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.560711" elapsed="0.001975"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.642738" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo', 'Content-Length': '57'} 
 body=b'{"email": "admin@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:35.642794" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-8Q3qNUrAueAYd4NJxZjFqCqlzn4"', 'Date': 'Wed, 02 Jul 2025 03:01:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3af","name":"Admin User","email":"admin@example.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo"}} 
 </msg>
<msg time="2025-07-02T00:01:35.642879" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:35.562997" elapsed="0.079904"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.643400" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3af', 'name': 'Admin User', 'email': 'admin@example.com', 'role': 'admin', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.643027" elapsed="0.000413"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.643697" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.643545" elapsed="0.000185"/>
</kw>
<arg>${dados_login_admin}</arg>
<status status="PASS" start="2025-07-02T00:01:35.562776" elapsed="0.081000"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.644130" elapsed="0.000318"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.644770" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:35.644535" elapsed="0.000264"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.645132" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.644874" elapsed="0.000288"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.645469" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.645237" elapsed="0.000269"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.643898" elapsed="0.001643"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.645836" elapsed="0.000490"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.646475" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.646403" elapsed="0.000098"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.645639" elapsed="0.000894"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.646853" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.646600" elapsed="0.000273"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.647086" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:35.646955" elapsed="0.000157"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:35.647754" elapsed="0.000109"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.647428" elapsed="0.000470"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.648121" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:35.647972" elapsed="0.000243"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.647240" elapsed="0.001016"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.560527" elapsed="0.087758"/>
</kw>
<kw name="Payload criar cinema com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:35.648841" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:35.649058" level="INFO">${arquivo} = {
    "theater_valido": {
        "name": "Theater Teste",
        "capacity": 100,
        "type": "3D"
    },
    "theater_invalido": {
        "name": "",
        "capacity": 0,
        "type": "ty...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:35.648748" elapsed="0.000335"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.649327" level="INFO">${data} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:35.649169" elapsed="0.000177"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:35.649381" elapsed="0.000023"/>
</return>
<msg time="2025-07-02T00:01:35.649479" level="INFO">${json} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${json}</var>
<arg>json_theater.json</arg>
<status status="PASS" start="2025-07-02T00:01:35.648567" elapsed="0.000927"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.649831" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<var>${dados_theater_valido}</var>
<arg>${json["theater_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.649569" elapsed="0.000279"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.650043" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<arg>${dados_theater_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.649925" elapsed="0.000142"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.648370" elapsed="0.001732"/>
</kw>
<kw name="POST endpoint /theaters" owner="theaters_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.699352" level="INFO">POST Request : url=http://localhost:5000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo', 'Content-Length': '56'} 
 body=b'{"name": "Theater Teste", "capacity": 100, "type": "3D"}' 
 </msg>
<msg time="2025-07-02T00:01:35.699410" level="INFO">POST Response : url=http://localhost:5000/api/v1/theaters 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '226', 'ETag': 'W/"e2-/ishNP569kV8QXsduaZDZgSHztM"', 'Date': 'Wed, 02 Jul 2025 03:01:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"name":"Theater Teste","capacity":100,"type":"3D","_id":"6864a10f472fdde84ba2fb51","createdAt":"2025-07-02T03:01:35.673Z","updatedAt":"2025-07-02T03:01:35.673Z","__v":0,"id":"6864a10f472fdde84ba2fb51"}} 
 </msg>
<msg time="2025-07-02T00:01:35.699498" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/theaters</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:35.650391" elapsed="0.049129"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.699956" level="INFO">Response: {'success': True, 'data': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D', '_id': '6864a10f472fdde84ba2fb51', 'createdAt': '2025-07-02T03:01:35.673Z', 'updatedAt': '2025-07-02T03:01:35.673Z', '__v': 0, 'id': '6864a10f472fdde84ba2fb51'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.699650" elapsed="0.000337"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.700189" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.700072" elapsed="0.000143"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.650186" elapsed="0.050065"/>
</kw>
<kw name="Validar se o cinema foi criado corretamente" owner="theaters_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:35.700550" elapsed="0.000289"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.701168" level="INFO">Length is 8.</msg>
<arg>${resp.json()["data"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:35.700920" elapsed="0.000277"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.701554" level="INFO">Length is 24.</msg>
<arg>${resp.json()["data"]["_id"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:35.701306" elapsed="0.000278"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.701911" level="INFO">${theater_id} = 6864a10f472fdde84ba2fb51</msg>
<var>${theater_id}</var>
<arg>${resp.json()["data"]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.701661" elapsed="0.000268"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.702121" level="INFO">${theater_id} = 6864a10f472fdde84ba2fb51</msg>
<arg>${theater_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.702008" elapsed="0.000138"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.702460" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.702218" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.702812" level="INFO">data: {'name': 'Theater Teste', 'capacity': 100, 'type': '3D', '_id': '6864a10f472fdde84ba2fb51', 'createdAt': '2025-07-02T03:01:35.673Z', 'updatedAt': '2025-07-02T03:01:35.673Z', '__v': 0, 'id': '6864a10f472fdde84ba2fb51'}</msg>
<arg>data: ${resp.json()["data"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.702565" elapsed="0.000276"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.700357" elapsed="0.002519"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.703166" elapsed="0.000492"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.703809" level="INFO">Status Code: 201</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.703738" elapsed="0.000096"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.702966" elapsed="0.000901"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.560286" elapsed="0.143608"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.511754" elapsed="0.192167"/>
</kw>
<kw name="Criar nova session" owner="common">
<kw name="Login usuário admin" owner="common">
<kw name="Payload login usuário admin" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:35.704878" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:35.705079" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:35.704786" elapsed="0.000320"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.705358" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:35.705190" elapsed="0.000187"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:35.705411" elapsed="0.000023"/>
</return>
<msg time="2025-07-02T00:01:35.705514" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:35.704596" elapsed="0.000935"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.705880" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<var>${dados_login_admin}</var>
<arg>${json["admin_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.705608" elapsed="0.000289"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.706089" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_admin}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.705974" elapsed="0.000140"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.704399" elapsed="0.001747"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.785054" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo', 'Content-Length': '57'} 
 body=b'{"email": "admin@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:35.785110" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-8Q3qNUrAueAYd4NJxZjFqCqlzn4"', 'Date': 'Wed, 02 Jul 2025 03:01:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3af","name":"Admin User","email":"admin@example.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo"}} 
 </msg>
<msg time="2025-07-02T00:01:35.785191" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:35.706455" elapsed="0.078757"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.785692" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3af', 'name': 'Admin User', 'email': 'admin@example.com', 'role': 'admin', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.785332" elapsed="0.000431"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.785974" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.785855" elapsed="0.000146"/>
</kw>
<arg>${dados_login_admin}</arg>
<status status="PASS" start="2025-07-02T00:01:35.706230" elapsed="0.079808"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.786331" elapsed="0.000262"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.786910" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:35.786671" elapsed="0.000268"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.787262" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.787018" elapsed="0.000273"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.787959" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.787364" elapsed="0.000626"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.786137" elapsed="0.001890"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.788324" elapsed="0.000498"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.788977" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.788905" elapsed="0.000098"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.788119" elapsed="0.000917"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.789363" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.789104" elapsed="0.000277"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.789584" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:35.789461" elapsed="0.000148"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:35.790204" elapsed="0.000107"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.789886" elapsed="0.000460"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.790565" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:35.790421" elapsed="0.000233"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.789698" elapsed="0.000995"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.704214" elapsed="0.086504"/>
</kw>
<kw name="Payload criar sessão com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:35.791340" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_session.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_session.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:35.791551" level="INFO">${arquivo} = {
    "session_valido": {
        "movie": "{{movie_id}}",
        "theater": "{{theater_id}}",
        "datetime": "2025-07-01T03:49:48.809Z",
        "fullPrice": 30,
        "halfPrice": 15
    },
...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:35.791248" elapsed="0.000325"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.791833" level="INFO">${data} = {'session_valido': {'movie': '{{movie_id}}', 'theater': '{{theater_id}}', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15}, 'session_invalido': {'datetime': 'data-inválida', '...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:35.791662" elapsed="0.000190"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:35.791886" elapsed="0.000023"/>
</return>
<msg time="2025-07-02T00:01:35.791985" level="INFO">${json} = {'session_valido': {'movie': '{{movie_id}}', 'theater': '{{theater_id}}', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15}, 'session_invalido': {'datetime': 'data-inválida', '...</msg>
<var>${json}</var>
<arg>json_session.json</arg>
<status status="PASS" start="2025-07-02T00:01:35.791061" elapsed="0.000941"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.792347" level="INFO">${dados_session_valido} = {'movie': '{{movie_id}}', 'theater': '{{theater_id}}', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15}</msg>
<var>${dados_session_valido}</var>
<arg>${json["session_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.792076" elapsed="0.000289"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${dados_session_valido}</arg>
<arg>movie=${filme_id}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:35.792468" elapsed="0.000103"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${dados_session_valido}</arg>
<arg>theater=${cinema_id}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:35.792643" elapsed="0.000094"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.792943" level="INFO">${dados_session_valido} = {'movie': '6864a10ff75602e326ad6201', 'theater': '6864a10f472fdde84ba2fb51', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15}</msg>
<arg>${dados_session_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.792812" elapsed="0.000157"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.790808" elapsed="0.002201"/>
</kw>
<kw name="POST endpoint /sessions" owner="sessions_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.890516" level="INFO">POST Request : url=http://localhost:5000/api/v1/sessions 
 path_url=/api/v1/sessions 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo', 'Content-Length': '150'} 
 body=b'{"movie": "6864a10ff75602e326ad6201", "theater": "6864a10f472fdde84ba2fb51", "datetime": "2025-07-01T03:49:48.809Z", "fullPrice": 30, "halfPrice": 15}' 
 </msg>
<msg time="2025-07-02T00:01:35.890578" level="INFO">POST Response : url=http://localhost:5000/api/v1/sessions 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '4754', 'ETag': 'W/"1292-l2XllfKnUl59GaNeQ42tfLX8uQQ"', 'Date': 'Wed, 02 Jul 2025 03:01:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"movie":"6864a10ff75602e326ad6201","theater":"6864a10f472fdde84ba2fb51","datetime":"2025-07-01T03:49:48.809Z","fullPrice":30,"halfPrice":15,"seats":[{"row":"A","number":1,"status":"available"},{"row":"A","number":2,"status":"available"},{"row":"A","number":3,"status":"available"},{"row":"A","number":4,"status":"available"},{"row":"A","number":5,"status":"available"},{"row":"A","number":6,"status":"available"},{"row":"A","number":7,"status":"available"},{"row":"A","number":8,"status":"available"},{"row":"A","number":9,"status":"available"},{"row":"A","number":10,"status":"available"},{"row":"A","number":11,"status":"available"},{"row":"A","number":12,"status":"available"},{"row":"A","number":13,"status":"available"},{"row":"B","number":1,"status":"available"},{"row":"B","number":2,"status":"available"},{"row":"B","number":3,"status":"available"},{"row":"B","number":4,"status":"available"},{"row":"B","number":5,"status":"available"},{"row":"B","number":6,"status":"available"},{"row":"B","number":7,"status":"available"},{"row":"B","number":8,"status":"available"},{"row":"B","number":9,"status":"available"},{"row":"B","number":10,"status":"available"},{"row":"B","number":11,"status":"available"},{"row":"B","number":12,"status":"available"},{"row":"B","number":13,"status":"available"},{"row":"C","number":1,"status":"available"},{"row":"C","number":2,"status":"available"},{"row":"C","number":3,"status":"available"},{"row":"C","number":4,"status":"available"},{"row":"C","number":5,"status":"available"},{"row":"C","number":6,"status":"available"},{"row":"C","number":7,"status":"available"},{"row":"C","number":8,"status":"available"},{"row":"C","number":9,"status":"available"},{"row":"C","number":10,"status":"available"},{"row":"C","number":11,"status":"available"},{"row":"C","number":12,"status":"available"},{"row":"C","number":13,"status":"available"},{"row":"D","number":1,"status":"available"},{"row":"D","number":2,"status":"available"},{"row":"D","number":3,"status":"available"},{"row":"D","number":4,"status":"available"},{"row":"D","number":5,"status":"available"},{"row":"D","number":6,"status":"available"},{"row":"D","number":7,"status":"available"},{"row":"D","number":8,"status":"available"},{"row":"D","number":9,"status":"available"},{"row":"D","number":10,"status":"available"},{"row":"D","number":11,"status":"available"},{"row":"D","number":12,"status":"available"},{"row":"D","number":13,"status":"available"},{"row":"E","number":1,"status":"available"},{"row":"E","number":2,"status":"available"},{"row":"E","number":3,"status":"available"},{"row":"E","number":4,"status":"available"},{"row":"E","number":5,"status":"available"},{"row":"E","number":6,"status":"available"},{"row":"E","number":7,"status":"available"},{"row":"E","number":8,"status":"available"},{"row":"E","number":9,"status":"available"},{"row":"E","number":10,"status":"available"},{"row":"E","number":11,"status":"available"},{"row":"E","number":12,"status":"available"},{"row":"E","number":13,"status":"available"},{"row":"F","number":1,"status":"available"},{"row":"F","number":2,"status":"available"},{"row":"F","number":3,"status":"available"},{"row":"F","number":4,"status":"available"},{"row":"F","number":5,"status":"available"},{"row":"F","number":6,"status":"available"},{"row":"F","number":7,"status":"available"},{"row":"F","number":8,"status":"available"},{"row":"F","number":9,"status":"available"},{"row":"F","number":10,"status":"available"},{"row":"F","number":11,"status":"available"},{"row":"F","number":12,"status":"available"},{"row":"F","number":13,"status":"available"},{"row":"G","number":1,"status":"available"},{"row":"G","number":2,"status":"available"},{"row":"G","number":3,"status":"available"},{"row":"G","number":4,"status":"available"},{"row":"G","number":5,"status":"available"},{"row":"G","number":6,"status":"available"},{"row":"G","number":7,"status":"available"},{"row":"G","number":8,"status":"available"},{"row":"G","number":9,"status":"available"},{"row":"G","number":10,"status":"available"},{"row":"G","number":11,"status":"available"},{"row":"G","number":12,"status":"available"},{"row":"G","number":13,"status":"available"},{"row":"H","number":1,"status":"available"},{"row":"H","number":2,"status":"available"},{"row":"H","number":3,"status":"available"},{"row":"H","number":4,"status":"available"},{"row":"H","number":5,"status":"available"},{"row":"H","number":6,"status":"available"},{"row":"H","number":7,"status":"available"},{"row":"H","number":8,"status":"available"},{"row":"H","number":9,"status":"available"}],"_id":"6864a10f472fdde84ba2fb57","createdAt":"2025-07-02T03:01:35.857Z","updatedAt":"2025-07-02T03:01:35.857Z","__v":0,"id":"6864a10f472fdde84ba2fb57"}} 
 </msg>
<msg time="2025-07-02T00:01:35.890686" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/sessions</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:35.793313" elapsed="0.097392"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.891267" level="INFO">Response: {'success': True, 'data': {'movie': '6864a10ff75602e326ad6201', 'theater': '6864a10f472fdde84ba2fb51', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15, 'seats': [{'row': 'A', 'number': 1, 'status': 'available'}, {'row': 'A', 'number': 2, 'status': 'available'}, {'row': 'A', 'number': 3, 'status': 'available'}, {'row': 'A', 'number': 4, 'status': 'available'}, {'row': 'A', 'number': 5, 'status': 'available'}, {'row': 'A', 'number': 6, 'status': 'available'}, {'row': 'A', 'number': 7, 'status': 'available'}, {'row': 'A', 'number': 8, 'status': 'available'}, {'row': 'A', 'number': 9, 'status': 'available'}, {'row': 'A', 'number': 10, 'status': 'available'}, {'row': 'A', 'number': 11, 'status': 'available'}, {'row': 'A', 'number': 12, 'status': 'available'}, {'row': 'A', 'number': 13, 'status': 'available'}, {'row': 'B', 'number': 1, 'status': 'available'}, {'row': 'B', 'number': 2, 'status': 'available'}, {'row': 'B', 'number': 3, 'status': 'available'}, {'row': 'B', 'number': 4, 'status': 'available'}, {'row': 'B', 'number': 5, 'status': 'available'}, {'row': 'B', 'number': 6, 'status': 'available'}, {'row': 'B', 'number': 7, 'status': 'available'}, {'row': 'B', 'number': 8, 'status': 'available'}, {'row': 'B', 'number': 9, 'status': 'available'}, {'row': 'B', 'number': 10, 'status': 'available'}, {'row': 'B', 'number': 11, 'status': 'available'}, {'row': 'B', 'number': 12, 'status': 'available'}, {'row': 'B', 'number': 13, 'status': 'available'}, {'row': 'C', 'number': 1, 'status': 'available'}, {'row': 'C', 'number': 2, 'status': 'available'}, {'row': 'C', 'number': 3, 'status': 'available'}, {'row': 'C', 'number': 4, 'status': 'available'}, {'row': 'C', 'number': 5, 'status': 'available'}, {'row': 'C', 'number': 6, 'status': 'available'}, {'row': 'C', 'number': 7, 'status': 'available'}, {'row': 'C', 'number': 8, 'status': 'available'}, {'row': 'C', 'number': 9, 'status': 'available'}, {'row': 'C', 'number': 10, 'status': 'available'}, {'row': 'C', 'number': 11, 'status': 'available'}, {'row': 'C', 'number': 12, 'status': 'available'}, {'row': 'C', 'number': 13, 'status': 'available'}, {'row': 'D', 'number': 1, 'status': 'available'}, {'row': 'D', 'number': 2, 'status': 'available'}, {'row': 'D', 'number': 3, 'status': 'available'}, {'row': 'D', 'number': 4, 'status': 'available'}, {'row': 'D', 'number': 5, 'status': 'available'}, {'row': 'D', 'number': 6, 'status': 'available'}, {'row': 'D', 'number': 7, 'status': 'available'}, {'row': 'D', 'number': 8, 'status': 'available'}, {'row': 'D', 'number': 9, 'status': 'available'}, {'row': 'D', 'number': 10, 'status': 'available'}, {'row': 'D', 'number': 11, 'status': 'available'}, {'row': 'D', 'number': 12, 'status': 'available'}, {'row': 'D', 'number': 13, 'status': 'available'}, {'row': 'E', 'number': 1, 'status': 'available'}, {'row': 'E', 'number': 2, 'status': 'available'}, {'row': 'E', 'number': 3, 'status': 'available'}, {'row': 'E', 'number': 4, 'status': 'available'}, {'row': 'E', 'number': 5, 'status': 'available'}, {'row': 'E', 'number': 6, 'status': 'available'}, {'row': 'E', 'number': 7, 'status': 'available'}, {'row': 'E', 'number': 8, 'status': 'available'}, {'row': 'E', 'number': 9, 'status': 'available'}, {'row': 'E', 'number': 10, 'status': 'available'}, {'row': 'E', 'number': 11, 'status': 'available'}, {'row': 'E', 'number': 12, 'status': 'available'}, {'row': 'E', 'number': 13, 'status': 'available'}, {'row': 'F', 'number': 1, 'status': 'available'}, {'row': 'F', 'number': 2, 'status': 'available'}, {'row': 'F', 'number': 3, 'status': 'available'}, {'row': 'F', 'number': 4, 'status': 'available'}, {'row': 'F', 'number': 5, 'status': 'available'}, {'row': 'F', 'number': 6, 'status': 'available'}, {'row': 'F', 'number': 7, 'status': 'available'}, {'row': 'F', 'number': 8, 'status': 'available'}, {'row': 'F', 'number': 9, 'status': 'available'}, {'row': 'F', 'number': 10, 'status': 'available'}, {'row': 'F', 'number': 11, 'status': 'available'}, {'row': 'F', 'number': 12, 'status': 'available'}, {'row': 'F', 'number': 13, 'status': 'available'}, {'row': 'G', 'number': 1, 'status': 'available'}, {'row': 'G', 'number': 2, 'status': 'available'}, {'row': 'G', 'number': 3, 'status': 'available'}, {'row': 'G', 'number': 4, 'status': 'available'}, {'row': 'G', 'number': 5, 'status': 'available'}, {'row': 'G', 'number': 6, 'status': 'available'}, {'row': 'G', 'number': 7, 'status': 'available'}, {'row': 'G', 'number': 8, 'status': 'available'}, {'row': 'G', 'number': 9, 'status': 'available'}, {'row': 'G', 'number': 10, 'status': 'available'}, {'row': 'G', 'number': 11, 'status': 'available'}, {'row': 'G', 'number': 12, 'status': 'available'}, {'row': 'G', 'number': 13, 'status': 'available'}, {'row': 'H', 'number': 1, 'status': 'available'}, {'row': 'H', 'number': 2, 'status': 'available'}, {'row': 'H', 'number': 3, 'status': 'available'}, {'row': 'H', 'number': 4, 'status': 'available'}, {'row': 'H', 'number': 5, 'status': 'available'}, {'row': 'H', 'number': 6, 'status': 'available'}, {'row': 'H', 'number': 7, 'status': 'available'}, {'row': 'H', 'number': 8, 'status': 'available'}, {'row': 'H', 'number': 9, 'status': 'available'}], '_id': '6864a10f472fdde84ba2fb57', 'createdAt': '2025-07-02T03:01:35.857Z', 'updatedAt': '2025-07-02T03:01:35.857Z', '__v': 0, 'id': '6864a10f472fdde84ba2fb57'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.890833" elapsed="0.000523"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.891563" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.891447" elapsed="0.000143"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.793094" elapsed="0.098534"/>
</kw>
<kw name="Validar se criou uma nova sessão corretamente" owner="sessions_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:35.891967" elapsed="0.000350"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.892701" level="INFO">Length is 11.</msg>
<arg>${resp.json()["data"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:35.892401" elapsed="0.000333"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.893084" level="INFO">Length is 24.</msg>
<arg>${resp.json()["data"]["movie"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:35.892811" elapsed="0.000302"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.893450" level="INFO">Length is 24.</msg>
<arg>${resp.json()["data"]["theater"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:35.893185" elapsed="0.000294"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.893819" level="INFO">Length is 24.</msg>
<arg>${resp.json()["data"]["_id"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:35.893550" elapsed="0.000297"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.894207" level="INFO">${session_id} = 6864a10f472fdde84ba2fb57</msg>
<var>${session_id}</var>
<arg>${resp.json()["data"]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.893921" elapsed="0.000304"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.894407" level="INFO">${session_id} = 6864a10f472fdde84ba2fb57</msg>
<arg>${session_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.894303" elapsed="0.000129"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.894793" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.894500" elapsed="0.000322"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.895251" level="INFO">data: {'movie': '6864a10ff75602e326ad6201', 'theater': '6864a10f472fdde84ba2fb51', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15, 'seats': [{'row': 'A', 'number': 1, 'status': 'available'}, {'row': 'A', 'number': 2, 'status': 'available'}, {'row': 'A', 'number': 3, 'status': 'available'}, {'row': 'A', 'number': 4, 'status': 'available'}, {'row': 'A', 'number': 5, 'status': 'available'}, {'row': 'A', 'number': 6, 'status': 'available'}, {'row': 'A', 'number': 7, 'status': 'available'}, {'row': 'A', 'number': 8, 'status': 'available'}, {'row': 'A', 'number': 9, 'status': 'available'}, {'row': 'A', 'number': 10, 'status': 'available'}, {'row': 'A', 'number': 11, 'status': 'available'}, {'row': 'A', 'number': 12, 'status': 'available'}, {'row': 'A', 'number': 13, 'status': 'available'}, {'row': 'B', 'number': 1, 'status': 'available'}, {'row': 'B', 'number': 2, 'status': 'available'}, {'row': 'B', 'number': 3, 'status': 'available'}, {'row': 'B', 'number': 4, 'status': 'available'}, {'row': 'B', 'number': 5, 'status': 'available'}, {'row': 'B', 'number': 6, 'status': 'available'}, {'row': 'B', 'number': 7, 'status': 'available'}, {'row': 'B', 'number': 8, 'status': 'available'}, {'row': 'B', 'number': 9, 'status': 'available'}, {'row': 'B', 'number': 10, 'status': 'available'}, {'row': 'B', 'number': 11, 'status': 'available'}, {'row': 'B', 'number': 12, 'status': 'available'}, {'row': 'B', 'number': 13, 'status': 'available'}, {'row': 'C', 'number': 1, 'status': 'available'}, {'row': 'C', 'number': 2, 'status': 'available'}, {'row': 'C', 'number': 3, 'status': 'available'}, {'row': 'C', 'number': 4, 'status': 'available'}, {'row': 'C', 'number': 5, 'status': 'available'}, {'row': 'C', 'number': 6, 'status': 'available'}, {'row': 'C', 'number': 7, 'status': 'available'}, {'row': 'C', 'number': 8, 'status': 'available'}, {'row': 'C', 'number': 9, 'status': 'available'}, {'row': 'C', 'number': 10, 'status': 'available'}, {'row': 'C', 'number': 11, 'status': 'available'}, {'row': 'C', 'number': 12, 'status': 'available'}, {'row': 'C', 'number': 13, 'status': 'available'}, {'row': 'D', 'number': 1, 'status': 'available'}, {'row': 'D', 'number': 2, 'status': 'available'}, {'row': 'D', 'number': 3, 'status': 'available'}, {'row': 'D', 'number': 4, 'status': 'available'}, {'row': 'D', 'number': 5, 'status': 'available'}, {'row': 'D', 'number': 6, 'status': 'available'}, {'row': 'D', 'number': 7, 'status': 'available'}, {'row': 'D', 'number': 8, 'status': 'available'}, {'row': 'D', 'number': 9, 'status': 'available'}, {'row': 'D', 'number': 10, 'status': 'available'}, {'row': 'D', 'number': 11, 'status': 'available'}, {'row': 'D', 'number': 12, 'status': 'available'}, {'row': 'D', 'number': 13, 'status': 'available'}, {'row': 'E', 'number': 1, 'status': 'available'}, {'row': 'E', 'number': 2, 'status': 'available'}, {'row': 'E', 'number': 3, 'status': 'available'}, {'row': 'E', 'number': 4, 'status': 'available'}, {'row': 'E', 'number': 5, 'status': 'available'}, {'row': 'E', 'number': 6, 'status': 'available'}, {'row': 'E', 'number': 7, 'status': 'available'}, {'row': 'E', 'number': 8, 'status': 'available'}, {'row': 'E', 'number': 9, 'status': 'available'}, {'row': 'E', 'number': 10, 'status': 'available'}, {'row': 'E', 'number': 11, 'status': 'available'}, {'row': 'E', 'number': 12, 'status': 'available'}, {'row': 'E', 'number': 13, 'status': 'available'}, {'row': 'F', 'number': 1, 'status': 'available'}, {'row': 'F', 'number': 2, 'status': 'available'}, {'row': 'F', 'number': 3, 'status': 'available'}, {'row': 'F', 'number': 4, 'status': 'available'}, {'row': 'F', 'number': 5, 'status': 'available'}, {'row': 'F', 'number': 6, 'status': 'available'}, {'row': 'F', 'number': 7, 'status': 'available'}, {'row': 'F', 'number': 8, 'status': 'available'}, {'row': 'F', 'number': 9, 'status': 'available'}, {'row': 'F', 'number': 10, 'status': 'available'}, {'row': 'F', 'number': 11, 'status': 'available'}, {'row': 'F', 'number': 12, 'status': 'available'}, {'row': 'F', 'number': 13, 'status': 'available'}, {'row': 'G', 'number': 1, 'status': 'available'}, {'row': 'G', 'number': 2, 'status': 'available'}, {'row': 'G', 'number': 3, 'status': 'available'}, {'row': 'G', 'number': 4, 'status': 'available'}, {'row': 'G', 'number': 5, 'status': 'available'}, {'row': 'G', 'number': 6, 'status': 'available'}, {'row': 'G', 'number': 7, 'status': 'available'}, {'row': 'G', 'number': 8, 'status': 'available'}, {'row': 'G', 'number': 9, 'status': 'available'}, {'row': 'G', 'number': 10, 'status': 'available'}, {'row': 'G', 'number': 11, 'status': 'available'}, {'row': 'G', 'number': 12, 'status': 'available'}, {'row': 'G', 'number': 13, 'status': 'available'}, {'row': 'H', 'number': 1, 'status': 'available'}, {'row': 'H', 'number': 2, 'status': 'available'}, {'row': 'H', 'number': 3, 'status': 'available'}, {'row': 'H', 'number': 4, 'status': 'available'}, {'row': 'H', 'number': 5, 'status': 'available'}, {'row': 'H', 'number': 6, 'status': 'available'}, {'row': 'H', 'number': 7, 'status': 'available'}, {'row': 'H', 'number': 8, 'status': 'available'}, {'row': 'H', 'number': 9, 'status': 'available'}], '_id': '6864a10f472fdde84ba2fb57', 'createdAt': '2025-07-02T03:01:35.857Z', 'updatedAt': '2025-07-02T03:01:35.857Z', '__v': 0, 'id': '6864a10f472fdde84ba2fb57'}</msg>
<arg>data: ${resp.json()["data"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.894895" elapsed="0.000425"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.895685" level="INFO">_id session: 6864a10f472fdde84ba2fb57</msg>
<arg>_id session: ${resp.json()["data"]["_id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.895394" elapsed="0.000319"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.891755" elapsed="0.003994"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.896056" elapsed="0.000502"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.896707" level="INFO">Status Code: 201</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.896635" elapsed="0.000098"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.895838" elapsed="0.000928"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.704007" elapsed="0.192785"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.373307" elapsed="0.523511"/>
</kw>
<kw name="Deixar os assentos da sessão disponível para o teste" owner="common">
<kw name="Login usuário admin" owner="common">
<kw name="Payload login usuário admin" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:35.898231" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:35.898486" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:35.898131" elapsed="0.000377"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.898773" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:35.898595" elapsed="0.000197"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:35.898829" elapsed="0.000024"/>
</return>
<msg time="2025-07-02T00:01:35.898935" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:35.897916" elapsed="0.001037"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.899308" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<var>${dados_login_admin}</var>
<arg>${json["admin_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.899029" elapsed="0.000297"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.899514" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_admin}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.899404" elapsed="0.000135"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.897675" elapsed="0.001896"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.978650" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo', 'Content-Length': '57'} 
 body=b'{"email": "admin@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:35.978709" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-8Q3qNUrAueAYd4NJxZjFqCqlzn4"', 'Date': 'Wed, 02 Jul 2025 03:01:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3af","name":"Admin User","email":"admin@example.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo"}} 
 </msg>
<msg time="2025-07-02T00:01:35.978795" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:35.899895" elapsed="0.078923"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.979360" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3af', 'name': 'Admin User', 'email': 'admin@example.com', 'role': 'admin', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.978939" elapsed="0.000465"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.979650" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:35.979514" elapsed="0.000168"/>
</kw>
<arg>${dados_login_admin}</arg>
<status status="PASS" start="2025-07-02T00:01:35.899659" elapsed="0.080068"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.980099" elapsed="0.000274"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.980696" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:35.980453" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.981100" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.980835" elapsed="0.000295"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.981445" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.981206" elapsed="0.000268"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.979847" elapsed="0.001662"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.981818" elapsed="0.000509"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.982478" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:35.982406" elapsed="0.000098"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.981601" elapsed="0.000939"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.982864" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:35.982607" elapsed="0.000276"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:35.983086" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:35.982965" elapsed="0.000147"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:35.983733" elapsed="0.000109"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:35.983400" elapsed="0.000477"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:35.984100" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:35.983951" elapsed="0.000242"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.983200" elapsed="0.001067"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.897402" elapsed="0.086893"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.079952" level="INFO">PUT Request : url=http://localhost:5000/api/v1/sessions/6864a10f472fdde84ba2fb57/reset-seats 
 path_url=/api/v1/sessions/6864a10f472fdde84ba2fb57/reset-seats 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-07-02T00:01:36.080022" level="INFO">PUT Response : url=http://localhost:5000/api/v1/sessions/6864a10f472fdde84ba2fb57/reset-seats 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '4802', 'ETag': 'W/"12c2-5mX6dURLHaqpILhBdYth8lgEdL4"', 'Date': 'Wed, 02 Jul 2025 03:01:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"message":"All seats reset to available status","data":{"_id":"6864a10f472fdde84ba2fb57","movie":"6864a10ff75602e326ad6201","theater":"6864a10f472fdde84ba2fb51","datetime":"2025-07-01T03:49:48.809Z","fullPrice":30,"halfPrice":15,"seats":[{"row":"A","number":1,"status":"available"},{"row":"A","number":2,"status":"available"},{"row":"A","number":3,"status":"available"},{"row":"A","number":4,"status":"available"},{"row":"A","number":5,"status":"available"},{"row":"A","number":6,"status":"available"},{"row":"A","number":7,"status":"available"},{"row":"A","number":8,"status":"available"},{"row":"A","number":9,"status":"available"},{"row":"A","number":10,"status":"available"},{"row":"A","number":11,"status":"available"},{"row":"A","number":12,"status":"available"},{"row":"A","number":13,"status":"available"},{"row":"B","number":1,"status":"available"},{"row":"B","number":2,"status":"available"},{"row":"B","number":3,"status":"available"},{"row":"B","number":4,"status":"available"},{"row":"B","number":5,"status":"available"},{"row":"B","number":6,"status":"available"},{"row":"B","number":7,"status":"available"},{"row":"B","number":8,"status":"available"},{"row":"B","number":9,"status":"available"},{"row":"B","number":10,"status":"available"},{"row":"B","number":11,"status":"available"},{"row":"B","number":12,"status":"available"},{"row":"B","number":13,"status":"available"},{"row":"C","number":1,"status":"available"},{"row":"C","number":2,"status":"available"},{"row":"C","number":3,"status":"available"},{"row":"C","number":4,"status":"available"},{"row":"C","number":5,"status":"available"},{"row":"C","number":6,"status":"available"},{"row":"C","number":7,"status":"available"},{"row":"C","number":8,"status":"available"},{"row":"C","number":9,"status":"available"},{"row":"C","number":10,"status":"available"},{"row":"C","number":11,"status":"available"},{"row":"C","number":12,"status":"available"},{"row":"C","number":13,"status":"available"},{"row":"D","number":1,"status":"available"},{"row":"D","number":2,"status":"available"},{"row":"D","number":3,"status":"available"},{"row":"D","number":4,"status":"available"},{"row":"D","number":5,"status":"available"},{"row":"D","number":6,"status":"available"},{"row":"D","number":7,"status":"available"},{"row":"D","number":8,"status":"available"},{"row":"D","number":9,"status":"available"},{"row":"D","number":10,"status":"available"},{"row":"D","number":11,"status":"available"},{"row":"D","number":12,"status":"available"},{"row":"D","number":13,"status":"available"},{"row":"E","number":1,"status":"available"},{"row":"E","number":2,"status":"available"},{"row":"E","number":3,"status":"available"},{"row":"E","number":4,"status":"available"},{"row":"E","number":5,"status":"available"},{"row":"E","number":6,"status":"available"},{"row":"E","number":7,"status":"available"},{"row":"E","number":8,"status":"available"},{"row":"E","number":9,"status":"available"},{"row":"E","number":10,"status":"available"},{"row":"E","number":11,"status":"available"},{"row":"E","number":12,"status":"available"},{"row":"E","number":13,"status":"available"},{"row":"F","number":1,"status":"available"},{"row":"F","number":2,"status":"available"},{"row":"F","number":3,"status":"available"},{"row":"F","number":4,"status":"available"},{"row":"F","number":5,"status":"available"},{"row":"F","number":6,"status":"available"},{"row":"F","number":7,"status":"available"},{"row":"F","number":8,"status":"available"},{"row":"F","number":9,"status":"available"},{"row":"F","number":10,"status":"available"},{"row":"F","number":11,"status":"available"},{"row":"F","number":12,"status":"available"},{"row":"F","number":13,"status":"available"},{"row":"G","number":1,"status":"available"},{"row":"G","number":2,"status":"available"},{"row":"G","number":3,"status":"available"},{"row":"G","number":4,"status":"available"},{"row":"G","number":5,"status":"available"},{"row":"G","number":6,"status":"available"},{"row":"G","number":7,"status":"available"},{"row":"G","number":8,"status":"available"},{"row":"G","number":9,"status":"available"},{"row":"G","number":10,"status":"available"},{"row":"G","number":11,"status":"available"},{"row":"G","number":12,"status":"available"},{"row":"G","number":13,"status":"available"},{"row":"H","number":1,"status":"available"},{"row":"H","number":2,"status":"available"},{"row":"H","number":3,"status":"available"},{"row":"H","number":4,"status":"available"},{"row":"H","number":5,"status":"available"},{"row":"H","number":6,"status":"available"},{"row":"H","number":7,"status":"available"},{"row":"H","number":8,"status":"available"},{"row":"H","number":9,"status":"available"}],"createdAt":"2025-07-02T03:01:35.857Z","updatedAt":"2025-07-02T03:01:35.857Z","__v":0,"id":"6864a10f472fdde84ba2fb57"}} 
 </msg>
<msg time="2025-07-02T00:01:36.080216" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/sessions/${sessão_id}/reset-seats</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:35.984364" elapsed="0.095884"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.081150" level="INFO">Response: {'success': True, 'message': 'All seats reset to available status', 'data': {'_id': '6864a10f472fdde84ba2fb57', 'movie': '6864a10ff75602e326ad6201', 'theater': '6864a10f472fdde84ba2fb51', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15, 'seats': [{'row': 'A', 'number': 1, 'status': 'available'}, {'row': 'A', 'number': 2, 'status': 'available'}, {'row': 'A', 'number': 3, 'status': 'available'}, {'row': 'A', 'number': 4, 'status': 'available'}, {'row': 'A', 'number': 5, 'status': 'available'}, {'row': 'A', 'number': 6, 'status': 'available'}, {'row': 'A', 'number': 7, 'status': 'available'}, {'row': 'A', 'number': 8, 'status': 'available'}, {'row': 'A', 'number': 9, 'status': 'available'}, {'row': 'A', 'number': 10, 'status': 'available'}, {'row': 'A', 'number': 11, 'status': 'available'}, {'row': 'A', 'number': 12, 'status': 'available'}, {'row': 'A', 'number': 13, 'status': 'available'}, {'row': 'B', 'number': 1, 'status': 'available'}, {'row': 'B', 'number': 2, 'status': 'available'}, {'row': 'B', 'number': 3, 'status': 'available'}, {'row': 'B', 'number': 4, 'status': 'available'}, {'row': 'B', 'number': 5, 'status': 'available'}, {'row': 'B', 'number': 6, 'status': 'available'}, {'row': 'B', 'number': 7, 'status': 'available'}, {'row': 'B', 'number': 8, 'status': 'available'}, {'row': 'B', 'number': 9, 'status': 'available'}, {'row': 'B', 'number': 10, 'status': 'available'}, {'row': 'B', 'number': 11, 'status': 'available'}, {'row': 'B', 'number': 12, 'status': 'available'}, {'row': 'B', 'number': 13, 'status': 'available'}, {'row': 'C', 'number': 1, 'status': 'available'}, {'row': 'C', 'number': 2, 'status': 'available'}, {'row': 'C', 'number': 3, 'status': 'available'}, {'row': 'C', 'number': 4, 'status': 'available'}, {'row': 'C', 'number': 5, 'status': 'available'}, {'row': 'C', 'number': 6, 'status': 'available'}, {'row': 'C', 'number': 7, 'status': 'available'}, {'row': 'C', 'number': 8, 'status': 'available'}, {'row': 'C', 'number': 9, 'status': 'available'}, {'row': 'C', 'number': 10, 'status': 'available'}, {'row': 'C', 'number': 11, 'status': 'available'}, {'row': 'C', 'number': 12, 'status': 'available'}, {'row': 'C', 'number': 13, 'status': 'available'}, {'row': 'D', 'number': 1, 'status': 'available'}, {'row': 'D', 'number': 2, 'status': 'available'}, {'row': 'D', 'number': 3, 'status': 'available'}, {'row': 'D', 'number': 4, 'status': 'available'}, {'row': 'D', 'number': 5, 'status': 'available'}, {'row': 'D', 'number': 6, 'status': 'available'}, {'row': 'D', 'number': 7, 'status': 'available'}, {'row': 'D', 'number': 8, 'status': 'available'}, {'row': 'D', 'number': 9, 'status': 'available'}, {'row': 'D', 'number': 10, 'status': 'available'}, {'row': 'D', 'number': 11, 'status': 'available'}, {'row': 'D', 'number': 12, 'status': 'available'}, {'row': 'D', 'number': 13, 'status': 'available'}, {'row': 'E', 'number': 1, 'status': 'available'}, {'row': 'E', 'number': 2, 'status': 'available'}, {'row': 'E', 'number': 3, 'status': 'available'}, {'row': 'E', 'number': 4, 'status': 'available'}, {'row': 'E', 'number': 5, 'status': 'available'}, {'row': 'E', 'number': 6, 'status': 'available'}, {'row': 'E', 'number': 7, 'status': 'available'}, {'row': 'E', 'number': 8, 'status': 'available'}, {'row': 'E', 'number': 9, 'status': 'available'}, {'row': 'E', 'number': 10, 'status': 'available'}, {'row': 'E', 'number': 11, 'status': 'available'}, {'row': 'E', 'number': 12, 'status': 'available'}, {'row': 'E', 'number': 13, 'status': 'available'}, {'row': 'F', 'number': 1, 'status': 'available'}, {'row': 'F', 'number': 2, 'status': 'available'}, {'row': 'F', 'number': 3, 'status': 'available'}, {'row': 'F', 'number': 4, 'status': 'available'}, {'row': 'F', 'number': 5, 'status': 'available'}, {'row': 'F', 'number': 6, 'status': 'available'}, {'row': 'F', 'number': 7, 'status': 'available'}, {'row': 'F', 'number': 8, 'status': 'available'}, {'row': 'F', 'number': 9, 'status': 'available'}, {'row': 'F', 'number': 10, 'status': 'available'}, {'row': 'F', 'number': 11, 'status': 'available'}, {'row': 'F', 'number': 12, 'status': 'available'}, {'row': 'F', 'number': 13, 'status': 'available'}, {'row': 'G', 'number': 1, 'status': 'available'}, {'row': 'G', 'number': 2, 'status': 'available'}, {'row': 'G', 'number': 3, 'status': 'available'}, {'row': 'G', 'number': 4, 'status': 'available'}, {'row': 'G', 'number': 5, 'status': 'available'}, {'row': 'G', 'number': 6, 'status': 'available'}, {'row': 'G', 'number': 7, 'status': 'available'}, {'row': 'G', 'number': 8, 'status': 'available'}, {'row': 'G', 'number': 9, 'status': 'available'}, {'row': 'G', 'number': 10, 'status': 'available'}, {'row': 'G', 'number': 11, 'status': 'available'}, {'row': 'G', 'number': 12, 'status': 'available'}, {'row': 'G', 'number': 13, 'status': 'available'}, {'row': 'H', 'number': 1, 'status': 'available'}, {'row': 'H', 'number': 2, 'status': 'available'}, {'row': 'H', 'number': 3, 'status': 'available'}, {'row': 'H', 'number': 4, 'status': 'available'}, {'row': 'H', 'number': 5, 'status': 'available'}, {'row': 'H', 'number': 6, 'status': 'available'}, {'row': 'H', 'number': 7, 'status': 'available'}, {'row': 'H', 'number': 8, 'status': 'available'}, {'row': 'H', 'number': 9, 'status': 'available'}], 'createdAt': '2025-07-02T03:01:35.857Z', 'updatedAt': '2025-07-02T03:01:35.857Z', '__v': 0, 'id': '6864a10f472fdde84ba2fb57'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.080446" elapsed="0.000789"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.081532" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.081375" elapsed="0.000199"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:35.897070" elapsed="0.184565"/>
</kw>
<kw name="Login usuário comum" owner="common">
<kw name="Payload login usuário comum" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:36.082859" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:36.083137" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:36.082751" elapsed="0.000408"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.083430" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:36.083249" elapsed="0.000201"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:36.083510" elapsed="0.000028"/>
</return>
<msg time="2025-07-02T00:01:36.083624" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:36.082529" elapsed="0.001112"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.084019" level="INFO">${dados_login_user} = {'email': 'user@example.com', 'password': 'password123'}</msg>
<var>${dados_login_user}</var>
<arg>${json["user_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.083719" elapsed="0.000318"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.084267" level="INFO">${dados_login_user} = {'email': 'user@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.084121" elapsed="0.000174"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.082231" elapsed="0.002099"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.164086" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NSwiZXhwIjoxNzUxNTExNjk1fQ.zEMLJ0H90MylZg5nvr9eBzh_crjny1C-oOmBKcNyuQo', 'Content-Length': '56'} 
 body=b'{"email": "user@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:36.164169" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-fq6aNp05NK8CF9BOa3CDWtkaExI"', 'Date': 'Wed, 02 Jul 2025 03:01:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3b0","name":"Regular User","email":"user@example.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk"}} 
 </msg>
<msg time="2025-07-02T00:01:36.164284" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:36.084691" elapsed="0.079616"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.164916" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3b0', 'name': 'Regular User', 'email': 'user@example.com', 'role': 'user', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.164476" elapsed="0.000480"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.165214" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.165064" elapsed="0.000183"/>
</kw>
<arg>${dados_login_user}</arg>
<status status="PASS" start="2025-07-02T00:01:36.084422" elapsed="0.080872"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.165656" elapsed="0.000271"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.166261" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:36.166006" elapsed="0.000284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.166615" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.166363" elapsed="0.000281"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.166949" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.166716" elapsed="0.000261"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.165428" elapsed="0.001584"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.167324" elapsed="0.000517"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.167992" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.167920" elapsed="0.000098"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.167102" elapsed="0.000949"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.168401" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.168120" elapsed="0.000307"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.168616" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:36.168506" elapsed="0.000134"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:36.169277" elapsed="0.000110"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.168936" elapsed="0.000485"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.169695" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:36.169543" elapsed="0.000246"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.168727" elapsed="0.001101"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.081898" elapsed="0.087956"/>
</kw>
<kw name="Payload criar reserva com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:36.170707" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_reservation.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_reservation.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:36.170976" level="INFO">${arquivo} = {
    "reserva_valido": {
        "session": "{{session_id}}",
        "seats": [{
            "row": "A",
            "number": 4,
            "type": "full"
        }],
        "paymentMethod": "cre...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:36.170606" elapsed="0.000392"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.171251" level="INFO">${data} = {'reserva_valido': {'session': '{{session_id}}', 'seats': [{'row': 'A', 'number': 4, 'type': 'full'}], 'paymentMethod': 'credit_card'}, 'reserva_invalido': {'session': 'id-inexistente', 'seats': [{'ro...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:36.171083" elapsed="0.000186"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:36.171305" elapsed="0.000026"/>
</return>
<msg time="2025-07-02T00:01:36.171409" level="INFO">${json} = {'reserva_valido': {'session': '{{session_id}}', 'seats': [{'row': 'A', 'number': 4, 'type': 'full'}], 'paymentMethod': 'credit_card'}, 'reserva_invalido': {'session': 'id-inexistente', 'seats': [{'ro...</msg>
<var>${json}</var>
<arg>json_reservation.json</arg>
<status status="PASS" start="2025-07-02T00:01:36.170380" elapsed="0.001046"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.171788" level="INFO">${dados_reserva_valido} = {'session': '{{session_id}}', 'seats': [{'row': 'A', 'number': 4, 'type': 'full'}], 'paymentMethod': 'credit_card'}</msg>
<var>${dados_reserva_valido}</var>
<arg>${json["reserva_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.171499" elapsed="0.000307"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${dados_reserva_valido}</arg>
<arg>session=${sessão_id}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:36.171881" elapsed="0.000101"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.172158" level="INFO">${dados_reserva_valido} = {'session': '6864a10f472fdde84ba2fb57', 'seats': [{'row': 'A', 'number': 4, 'type': 'full'}], 'paymentMethod': 'credit_card'}</msg>
<arg>${dados_reserva_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.172058" elapsed="0.000125"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.170081" elapsed="0.002135"/>
</kw>
<kw name="POST endpoint /reservations" owner="reservations_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.322648" level="INFO">POST Request : url=http://localhost:5000/api/v1/reservations 
 path_url=/api/v1/reservations 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk', 'Content-Length': '125'} 
 body=b'{"session": "6864a10f472fdde84ba2fb57", "seats": [{"row": "A", "number": 4, "type": "full"}], "paymentMethod": "credit_card"}' 
 </msg>
<msg time="2025-07-02T00:01:36.322724" level="INFO">POST Response : url=http://localhost:5000/api/v1/reservations 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '5258', 'ETag': 'W/"148a-w0GFxuzq8hEinbkwJ1BepbCWxsA"', 'Date': 'Wed, 02 Jul 2025 03:01:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"user":"686467c06671646cb11ac3b0","session":{"_id":"6864a10f472fdde84ba2fb57","movie":{"_id":"6864a10ff75602e326ad6201","title":"Filme Para Teste","poster":"FilmePoster.png","id":"6864a10ff75602e326ad6201"},"theater":{"_id":"6864a10f472fdde84ba2fb51","name":"Theater Teste","id":"6864a10f472fdde84ba2fb51"},"datetime":"2025-07-01T03:49:48.809Z","fullPrice":30,"halfPrice":15,"seats":[{"row":"A","number":1,"status":"available"},{"row":"A","number":2,"status":"available"},{"row":"A","number":3,"status":"available"},{"row":"A","number":4,"status":"occupied"},{"row":"A","number":5,"status":"available"},{"row":"A","number":6,"status":"available"},{"row":"A","number":7,"status":"available"},{"row":"A","number":8,"status":"available"},{"row":"A","number":9,"status":"available"},{"row":"A","number":10,"status":"available"},{"row":"A","number":11,"status":"available"},{"row":"A","number":12,"status":"available"},{"row":"A","number":13,"status":"available"},{"row":"B","number":1,"status":"available"},{"row":"B","number":2,"status":"available"},{"row":"B","number":3,"status":"available"},{"row":"B","number":4,"status":"available"},{"row":"B","number":5,"status":"available"},{"row":"B","number":6,"status":"available"},{"row":"B","number":7,"status":"available"},{"row":"B","number":8,"status":"available"},{"row":"B","number":9,"status":"available"},{"row":"B","number":10,"status":"available"},{"row":"B","number":11,"status":"available"},{"row":"B","number":12,"status":"available"},{"row":"B","number":13,"status":"available"},{"row":"C","number":1,"status":"available"},{"row":"C","number":2,"status":"available"},{"row":"C","number":3,"status":"available"},{"row":"C","number":4,"status":"available"},{"row":"C","number":5,"status":"available"},{"row":"C","number":6,"status":"available"},{"row":"C","number":7,"status":"available"},{"row":"C","number":8,"status":"available"},{"row":"C","number":9,"status":"available"},{"row":"C","number":10,"status":"available"},{"row":"C","number":11,"status":"available"},{"row":"C","number":12,"status":"available"},{"row":"C","number":13,"status":"available"},{"row":"D","number":1,"status":"available"},{"row":"D","number":2,"status":"available"},{"row":"D","number":3,"status":"available"},{"row":"D","number":4,"status":"available"},{"row":"D","number":5,"status":"available"},{"row":"D","number":6,"status":"available"},{"row":"D","number":7,"status":"available"},{"row":"D","number":8,"status":"available"},{"row":"D","number":9,"status":"available"},{"row":"D","number":10,"status":"available"},{"row":"D","number":11,"status":"available"},{"row":"D","number":12,"status":"available"},{"row":"D","number":13,"status":"available"},{"row":"E","number":1,"status":"available"},{"row":"E","number":2,"status":"available"},{"row":"E","number":3,"status":"available"},{"row":"E","number":4,"status":"available"},{"row":"E","number":5,"status":"available"},{"row":"E","number":6,"status":"available"},{"row":"E","number":7,"status":"available"},{"row":"E","number":8,"status":"available"},{"row":"E","number":9,"status":"available"},{"row":"E","number":10,"status":"available"},{"row":"E","number":11,"status":"available"},{"row":"E","number":12,"status":"available"},{"row":"E","number":13,"status":"available"},{"row":"F","number":1,"status":"available"},{"row":"F","number":2,"status":"available"},{"row":"F","number":3,"status":"available"},{"row":"F","number":4,"status":"available"},{"row":"F","number":5,"status":"available"},{"row":"F","number":6,"status":"available"},{"row":"F","number":7,"status":"available"},{"row":"F","number":8,"status":"available"},{"row":"F","number":9,"status":"available"},{"row":"F","number":10,"status":"available"},{"row":"F","number":11,"status":"available"},{"row":"F","number":12,"status":"available"},{"row":"F","number":13,"status":"available"},{"row":"G","number":1,"status":"available"},{"row":"G","number":2,"status":"available"},{"row":"G","number":3,"status":"available"},{"row":"G","number":4,"status":"available"},{"row":"G","number":5,"status":"available"},{"row":"G","number":6,"status":"available"},{"row":"G","number":7,"status":"available"},{"row":"G","number":8,"status":"available"},{"row":"G","number":9,"status":"available"},{"row":"G","number":10,"status":"available"},{"row":"G","number":11,"status":"available"},{"row":"G","number":12,"status":"available"},{"row":"G","number":13,"status":"available"},{"row":"H","number":1,"status":"available"},{"row":"H","number":2,"status":"available"},{"row":"H","number":3,"status":"available"},{"row":"H","number":4,"status":"available"},{"row":"H","number":5,"status":"available"},{"row":"H","number":6,"status":"available"},{"row":"H","number":7,"status":"available"},{"row":"H","number":8,"status":"available"},{"row":"H","number":9,"status":"available"}],"createdAt":"2025-07-02T03:01:35.857Z","updatedAt":"2025-07-02T03:01:36.247Z","__v":0,"id":"6864a10f472fdde84ba2fb57"},"seats":[{"row":"A","number":4,"type":"full"}],"totalPrice":30,"status":"confirmed","paymentStatus":"completed","paymentMethod":"credit_card","paymentDate":"2025-07-02T03:01:36.217Z","_id":"6864a110472fdde84ba2fb60","createdAt":"2025-07-02T03:01:36.217Z","updatedAt":"2025-07-02T03:01:36.217Z","__v":0}} 
 </msg>
<msg time="2025-07-02T00:01:36.322954" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/reservations</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:36.172704" elapsed="0.150271"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.323632" level="INFO">Response: {'success': True, 'data': {'user': '686467c06671646cb11ac3b0', 'session': {'_id': '6864a10f472fdde84ba2fb57', 'movie': {'_id': '6864a10ff75602e326ad6201', 'title': 'Filme Para Teste', 'poster': 'FilmePoster.png', 'id': '6864a10ff75602e326ad6201'}, 'theater': {'_id': '6864a10f472fdde84ba2fb51', 'name': 'Theater Teste', 'id': '6864a10f472fdde84ba2fb51'}, 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15, 'seats': [{'row': 'A', 'number': 1, 'status': 'available'}, {'row': 'A', 'number': 2, 'status': 'available'}, {'row': 'A', 'number': 3, 'status': 'available'}, {'row': 'A', 'number': 4, 'status': 'occupied'}, {'row': 'A', 'number': 5, 'status': 'available'}, {'row': 'A', 'number': 6, 'status': 'available'}, {'row': 'A', 'number': 7, 'status': 'available'}, {'row': 'A', 'number': 8, 'status': 'available'}, {'row': 'A', 'number': 9, 'status': 'available'}, {'row': 'A', 'number': 10, 'status': 'available'}, {'row': 'A', 'number': 11, 'status': 'available'}, {'row': 'A', 'number': 12, 'status': 'available'}, {'row': 'A', 'number': 13, 'status': 'available'}, {'row': 'B', 'number': 1, 'status': 'available'}, {'row': 'B', 'number': 2, 'status': 'available'}, {'row': 'B', 'number': 3, 'status': 'available'}, {'row': 'B', 'number': 4, 'status': 'available'}, {'row': 'B', 'number': 5, 'status': 'available'}, {'row': 'B', 'number': 6, 'status': 'available'}, {'row': 'B', 'number': 7, 'status': 'available'}, {'row': 'B', 'number': 8, 'status': 'available'}, {'row': 'B', 'number': 9, 'status': 'available'}, {'row': 'B', 'number': 10, 'status': 'available'}, {'row': 'B', 'number': 11, 'status': 'available'}, {'row': 'B', 'number': 12, 'status': 'available'}, {'row': 'B', 'number': 13, 'status': 'available'}, {'row': 'C', 'number': 1, 'status': 'available'}, {'row': 'C', 'number': 2, 'status': 'available'}, {'row': 'C', 'number': 3, 'status': 'available'}, {'row': 'C', 'number': 4, 'status': 'available'}, {'row': 'C', 'number': 5, 'status': 'available'}, {'row': 'C', 'number': 6, 'status': 'available'}, {'row': 'C', 'number': 7, 'status': 'available'}, {'row': 'C', 'number': 8, 'status': 'available'}, {'row': 'C', 'number': 9, 'status': 'available'}, {'row': 'C', 'number': 10, 'status': 'available'}, {'row': 'C', 'number': 11, 'status': 'available'}, {'row': 'C', 'number': 12, 'status': 'available'}, {'row': 'C', 'number': 13, 'status': 'available'}, {'row': 'D', 'number': 1, 'status': 'available'}, {'row': 'D', 'number': 2, 'status': 'available'}, {'row': 'D', 'number': 3, 'status': 'available'}, {'row': 'D', 'number': 4, 'status': 'available'}, {'row': 'D', 'number': 5, 'status': 'available'}, {'row': 'D', 'number': 6, 'status': 'available'}, {'row': 'D', 'number': 7, 'status': 'available'}, {'row': 'D', 'number': 8, 'status': 'available'}, {'row': 'D', 'number': 9, 'status': 'available'}, {'row': 'D', 'number': 10, 'status': 'available'}, {'row': 'D', 'number': 11, 'status': 'available'}, {'row': 'D', 'number': 12, 'status': 'available'}, {'row': 'D', 'number': 13, 'status': 'available'}, {'row': 'E', 'number': 1, 'status': 'available'}, {'row': 'E', 'number': 2, 'status': 'available'}, {'row': 'E', 'number': 3, 'status': 'available'}, {'row': 'E', 'number': 4, 'status': 'available'}, {'row': 'E', 'number': 5, 'status': 'available'}, {'row': 'E', 'number': 6, 'status': 'available'}, {'row': 'E', 'number': 7, 'status': 'available'}, {'row': 'E', 'number': 8, 'status': 'available'}, {'row': 'E', 'number': 9, 'status': 'available'}, {'row': 'E', 'number': 10, 'status': 'available'}, {'row': 'E', 'number': 11, 'status': 'available'}, {'row': 'E', 'number': 12, 'status': 'available'}, {'row': 'E', 'number': 13, 'status': 'available'}, {'row': 'F', 'number': 1, 'status': 'available'}, {'row': 'F', 'number': 2, 'status': 'available'}, {'row': 'F', 'number': 3, 'status': 'available'}, {'row': 'F', 'number': 4, 'status': 'available'}, {'row': 'F', 'number': 5, 'status': 'available'}, {'row': 'F', 'number': 6, 'status': 'available'}, {'row': 'F', 'number': 7, 'status': 'available'}, {'row': 'F', 'number': 8, 'status': 'available'}, {'row': 'F', 'number': 9, 'status': 'available'}, {'row': 'F', 'number': 10, 'status': 'available'}, {'row': 'F', 'number': 11, 'status': 'available'}, {'row': 'F', 'number': 12, 'status': 'available'}, {'row': 'F', 'number': 13, 'status': 'available'}, {'row': 'G', 'number': 1, 'status': 'available'}, {'row': 'G', 'number': 2, 'status': 'available'}, {'row': 'G', 'number': 3, 'status': 'available'}, {'row': 'G', 'number': 4, 'status': 'available'}, {'row': 'G', 'number': 5, 'status': 'available'}, {'row': 'G', 'number': 6, 'status': 'available'}, {'row': 'G', 'number': 7, 'status': 'available'}, {'row': 'G', 'number': 8, 'status': 'available'}, {'row': 'G', 'number': 9, 'status': 'available'}, {'row': 'G', 'number': 10, 'status': 'available'}, {'row': 'G', 'number': 11, 'status': 'available'}, {'row': 'G', 'number': 12, 'status': 'available'}, {'row': 'G', 'number': 13, 'status': 'available'}, {'row': 'H', 'number': 1, 'status': 'available'}, {'row': 'H', 'number': 2, 'status': 'available'}, {'row': 'H', 'number': 3, 'status': 'available'}, {'row': 'H', 'number': 4, 'status': 'available'}, {'row': 'H', 'number': 5, 'status': 'available'}, {'row': 'H', 'number': 6, 'status': 'available'}, {'row': 'H', 'number': 7, 'status': 'available'}, {'row': 'H', 'number': 8, 'status': 'available'}, {'row': 'H', 'number': 9, 'status': 'available'}], 'createdAt': '2025-07-02T03:01:35.857Z', 'updatedAt': '2025-07-02T03:01:36.247Z', '__v': 0, 'id': '6864a10f472fdde84ba2fb57'}, 'seats': [{'row': 'A', 'number': 4, 'type': 'full'}], 'totalPrice': 30, 'status': 'confirmed', 'paymentStatus': 'completed', 'paymentMethod': 'credit_card', 'paymentDate': '2025-07-02T03:01:36.217Z', '_id': '6864a110472fdde84ba2fb60', 'createdAt': '2025-07-02T03:01:36.217Z', 'updatedAt': '2025-07-02T03:01:36.217Z', '__v': 0}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.323129" elapsed="0.000558"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.323884" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.323777" elapsed="0.000134"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.172390" elapsed="0.151562"/>
</kw>
<kw name="Validar se a reserva foi criada corretamente" owner="reservations_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:36.324530" elapsed="0.000377"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.325304" level="INFO">Length is 12.</msg>
<arg>${resp.json()["data"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:36.324991" elapsed="0.000348"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.325706" level="INFO">Length is 24.</msg>
<arg>${resp.json()["data"]["_id"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:36.325416" elapsed="0.000319"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.326115" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.325811" elapsed="0.000333"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.326657" level="INFO">data: {'user': '686467c06671646cb11ac3b0', 'session': {'_id': '6864a10f472fdde84ba2fb57', 'movie': {'_id': '6864a10ff75602e326ad6201', 'title': 'Filme Para Teste', 'poster': 'FilmePoster.png', 'id': '6864a10ff75602e326ad6201'}, 'theater': {'_id': '6864a10f472fdde84ba2fb51', 'name': 'Theater Teste', 'id': '6864a10f472fdde84ba2fb51'}, 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15, 'seats': [{'row': 'A', 'number': 1, 'status': 'available'}, {'row': 'A', 'number': 2, 'status': 'available'}, {'row': 'A', 'number': 3, 'status': 'available'}, {'row': 'A', 'number': 4, 'status': 'occupied'}, {'row': 'A', 'number': 5, 'status': 'available'}, {'row': 'A', 'number': 6, 'status': 'available'}, {'row': 'A', 'number': 7, 'status': 'available'}, {'row': 'A', 'number': 8, 'status': 'available'}, {'row': 'A', 'number': 9, 'status': 'available'}, {'row': 'A', 'number': 10, 'status': 'available'}, {'row': 'A', 'number': 11, 'status': 'available'}, {'row': 'A', 'number': 12, 'status': 'available'}, {'row': 'A', 'number': 13, 'status': 'available'}, {'row': 'B', 'number': 1, 'status': 'available'}, {'row': 'B', 'number': 2, 'status': 'available'}, {'row': 'B', 'number': 3, 'status': 'available'}, {'row': 'B', 'number': 4, 'status': 'available'}, {'row': 'B', 'number': 5, 'status': 'available'}, {'row': 'B', 'number': 6, 'status': 'available'}, {'row': 'B', 'number': 7, 'status': 'available'}, {'row': 'B', 'number': 8, 'status': 'available'}, {'row': 'B', 'number': 9, 'status': 'available'}, {'row': 'B', 'number': 10, 'status': 'available'}, {'row': 'B', 'number': 11, 'status': 'available'}, {'row': 'B', 'number': 12, 'status': 'available'}, {'row': 'B', 'number': 13, 'status': 'available'}, {'row': 'C', 'number': 1, 'status': 'available'}, {'row': 'C', 'number': 2, 'status': 'available'}, {'row': 'C', 'number': 3, 'status': 'available'}, {'row': 'C', 'number': 4, 'status': 'available'}, {'row': 'C', 'number': 5, 'status': 'available'}, {'row': 'C', 'number': 6, 'status': 'available'}, {'row': 'C', 'number': 7, 'status': 'available'}, {'row': 'C', 'number': 8, 'status': 'available'}, {'row': 'C', 'number': 9, 'status': 'available'}, {'row': 'C', 'number': 10, 'status': 'available'}, {'row': 'C', 'number': 11, 'status': 'available'}, {'row': 'C', 'number': 12, 'status': 'available'}, {'row': 'C', 'number': 13, 'status': 'available'}, {'row': 'D', 'number': 1, 'status': 'available'}, {'row': 'D', 'number': 2, 'status': 'available'}, {'row': 'D', 'number': 3, 'status': 'available'}, {'row': 'D', 'number': 4, 'status': 'available'}, {'row': 'D', 'number': 5, 'status': 'available'}, {'row': 'D', 'number': 6, 'status': 'available'}, {'row': 'D', 'number': 7, 'status': 'available'}, {'row': 'D', 'number': 8, 'status': 'available'}, {'row': 'D', 'number': 9, 'status': 'available'}, {'row': 'D', 'number': 10, 'status': 'available'}, {'row': 'D', 'number': 11, 'status': 'available'}, {'row': 'D', 'number': 12, 'status': 'available'}, {'row': 'D', 'number': 13, 'status': 'available'}, {'row': 'E', 'number': 1, 'status': 'available'}, {'row': 'E', 'number': 2, 'status': 'available'}, {'row': 'E', 'number': 3, 'status': 'available'}, {'row': 'E', 'number': 4, 'status': 'available'}, {'row': 'E', 'number': 5, 'status': 'available'}, {'row': 'E', 'number': 6, 'status': 'available'}, {'row': 'E', 'number': 7, 'status': 'available'}, {'row': 'E', 'number': 8, 'status': 'available'}, {'row': 'E', 'number': 9, 'status': 'available'}, {'row': 'E', 'number': 10, 'status': 'available'}, {'row': 'E', 'number': 11, 'status': 'available'}, {'row': 'E', 'number': 12, 'status': 'available'}, {'row': 'E', 'number': 13, 'status': 'available'}, {'row': 'F', 'number': 1, 'status': 'available'}, {'row': 'F', 'number': 2, 'status': 'available'}, {'row': 'F', 'number': 3, 'status': 'available'}, {'row': 'F', 'number': 4, 'status': 'available'}, {'row': 'F', 'number': 5, 'status': 'available'}, {'row': 'F', 'number': 6, 'status': 'available'}, {'row': 'F', 'number': 7, 'status': 'available'}, {'row': 'F', 'number': 8, 'status': 'available'}, {'row': 'F', 'number': 9, 'status': 'available'}, {'row': 'F', 'number': 10, 'status': 'available'}, {'row': 'F', 'number': 11, 'status': 'available'}, {'row': 'F', 'number': 12, 'status': 'available'}, {'row': 'F', 'number': 13, 'status': 'available'}, {'row': 'G', 'number': 1, 'status': 'available'}, {'row': 'G', 'number': 2, 'status': 'available'}, {'row': 'G', 'number': 3, 'status': 'available'}, {'row': 'G', 'number': 4, 'status': 'available'}, {'row': 'G', 'number': 5, 'status': 'available'}, {'row': 'G', 'number': 6, 'status': 'available'}, {'row': 'G', 'number': 7, 'status': 'available'}, {'row': 'G', 'number': 8, 'status': 'available'}, {'row': 'G', 'number': 9, 'status': 'available'}, {'row': 'G', 'number': 10, 'status': 'available'}, {'row': 'G', 'number': 11, 'status': 'available'}, {'row': 'G', 'number': 12, 'status': 'available'}, {'row': 'G', 'number': 13, 'status': 'available'}, {'row': 'H', 'number': 1, 'status': 'available'}, {'row': 'H', 'number': 2, 'status': 'available'}, {'row': 'H', 'number': 3, 'status': 'available'}, {'row': 'H', 'number': 4, 'status': 'available'}, {'row': 'H', 'number': 5, 'status': 'available'}, {'row': 'H', 'number': 6, 'status': 'available'}, {'row': 'H', 'number': 7, 'status': 'available'}, {'row': 'H', 'number': 8, 'status': 'available'}, {'row': 'H', 'number': 9, 'status': 'available'}], 'createdAt': '2025-07-02T03:01:35.857Z', 'updatedAt': '2025-07-02T03:01:36.247Z', '__v': 0, 'id': '6864a10f472fdde84ba2fb57'}, 'seats': [{'row': 'A', 'number': 4, 'type': 'full'}], 'totalPrice': 30, 'status': 'confirmed', 'paymentStatus': 'completed', 'paymentMethod': 'credit_card', 'paymentDate': '2025-07-02T03:01:36.217Z', '_id': '6864a110472fdde84ba2fb60', 'createdAt': '2025-07-02T03:01:36.217Z', 'updatedAt': '2025-07-02T03:01:36.217Z', '__v': 0}</msg>
<arg>data: ${resp.json()["data"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.326275" elapsed="0.000433"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.327069" level="INFO">reserva id: 6864a110472fdde84ba2fb60</msg>
<arg>reserva id: ${resp.json()["data"]["_id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.326784" elapsed="0.000313"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.324220" elapsed="0.002913"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.327651" elapsed="0.000775"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.328775" level="INFO">Status Code: 201</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.328663" elapsed="0.000149"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.327302" elapsed="0.001556"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.329458" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:36.329390" elapsed="0.000214"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.329745" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.329688" elapsed="0.000085"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.329098" elapsed="0.000711"/>
</kw>
<tag>criar_reserva_valida</tag>
<status status="PASS" start="2025-07-02T00:01:35.371691" elapsed="0.958247"/>
</test>
<test id="s1-s3-t2" name="RESERVATIONS-BE-007: Tentar obter reservas sem autenticação" line="19">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:36.330976" elapsed="0.000116"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.330653" elapsed="0.000475"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.331365" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:36.331206" elapsed="0.000267"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.330494" elapsed="0.001022"/>
</kw>
<kw name="Login usuário comum" owner="common">
<kw name="Payload login usuário comum" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:36.332318" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:36.332597" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:36.332197" elapsed="0.000423"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.332873" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:36.332705" elapsed="0.000186"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:36.332927" elapsed="0.000027"/>
</return>
<msg time="2025-07-02T00:01:36.333040" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:36.332016" elapsed="0.001041"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.333390" level="INFO">${dados_login_user} = {'email': 'user@example.com', 'password': 'password123'}</msg>
<var>${dados_login_user}</var>
<arg>${json["user_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.333134" elapsed="0.000275"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.333594" level="INFO">${dados_login_user} = {'email': 'user@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.333489" elapsed="0.000130"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.331836" elapsed="0.001817"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.414266" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk', 'Content-Length': '56'} 
 body=b'{"email": "user@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:36.414338" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-fq6aNp05NK8CF9BOa3CDWtkaExI"', 'Date': 'Wed, 02 Jul 2025 03:01:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3b0","name":"Regular User","email":"user@example.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk"}} 
 </msg>
<msg time="2025-07-02T00:01:36.414437" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:36.333933" elapsed="0.080529"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.414997" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3b0', 'name': 'Regular User', 'email': 'user@example.com', 'role': 'user', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.414614" elapsed="0.000422"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.415269" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.415139" elapsed="0.000162"/>
</kw>
<arg>${dados_login_user}</arg>
<status status="PASS" start="2025-07-02T00:01:36.333742" elapsed="0.081605"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.415705" elapsed="0.000302"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.416313" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:36.416090" elapsed="0.000252"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.416698" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.416457" elapsed="0.000271"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.417027" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.416803" elapsed="0.000253"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.415482" elapsed="0.001609"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.417351" elapsed="0.000495"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.417999" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.417926" elapsed="0.000100"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.417184" elapsed="0.000875"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.418369" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.418127" elapsed="0.000261"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.418581" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:36.418471" elapsed="0.000136"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:36.419161" elapsed="0.000110"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.418850" elapsed="0.000456"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.419533" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:36.419381" elapsed="0.000246"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.418696" elapsed="0.000971"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.331667" elapsed="0.088028"/>
</kw>
<kw name="GET endpoint /reservations/me sem autenticação" owner="reservations_keywords">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.422072" level="INFO">GET Request : url=http://localhost:5000/api/v1/reservations/me 
 path_url=/api/v1/reservations/me 
 headers={} 
 body=None 
 </msg>
<msg time="2025-07-02T00:01:36.422111" level="INFO">GET Response : url=http://localhost:5000/api/v1/reservations/me 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '65', 'ETag': 'W/"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs"', 'Date': 'Wed, 02 Jul 2025 03:01:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Not authorized to access this route"} 
 </msg>
<msg time="2025-07-02T00:01:36.422173" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/reservations/me</arg>
<arg>headers=${EMPTY}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:36.420145" elapsed="0.002045"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.422553" level="INFO">Response: {'success': False, 'message': 'Not authorized to access this route'}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.422281" elapsed="0.000304"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.422761" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.422667" elapsed="0.000120"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.419917" elapsed="0.002904"/>
</kw>
<kw name="Validar se retornou mensagem de erro informando a necessidade de autenticação" owner="reservations_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:36.423172" elapsed="0.000300"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["message"]}</arg>
<arg>Not authorized to access this route</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:36.423557" elapsed="0.000261"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.424127" level="INFO">success: False</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.423896" elapsed="0.000260"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.424458" level="INFO">message: Not authorized to access this route</msg>
<arg>message: ${resp.json()["message"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.424233" elapsed="0.000254"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.422993" elapsed="0.001529"/>
</kw>
<kw name="Validar Status Code &quot;401&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.424834" elapsed="0.000464"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.425480" level="INFO">Status Code: 401</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.425376" elapsed="0.000132"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.424663" elapsed="0.000882"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.426045" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:36.426003" elapsed="0.000087"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.426216" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.426165" elapsed="0.000078"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.425821" elapsed="0.000456"/>
</kw>
<tag>obter_reserva_sem_auth</tag>
<status status="PASS" start="2025-07-02T00:01:36.330142" elapsed="0.096218"/>
</test>
<test id="s1-s3-t3" name="RESERVATIONS-BE-009: Criar reserva com payload inválido" line="25">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:36.428137" elapsed="0.000117"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.427781" elapsed="0.000511"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.428521" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:36.428371" elapsed="0.000232"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.426993" elapsed="0.001651"/>
</kw>
<kw name="Login usuário comum" owner="common">
<kw name="Payload login usuário comum" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:36.429451" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:36.429730" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:36.429326" elapsed="0.000431"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.430049" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:36.429864" elapsed="0.000204"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:36.430103" elapsed="0.000026"/>
</return>
<msg time="2025-07-02T00:01:36.430210" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:36.429148" elapsed="0.001079"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.430571" level="INFO">${dados_login_user} = {'email': 'user@example.com', 'password': 'password123'}</msg>
<var>${dados_login_user}</var>
<arg>${json["user_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.430303" elapsed="0.000286"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.430779" level="INFO">${dados_login_user} = {'email': 'user@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.430672" elapsed="0.000133"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.428966" elapsed="0.001873"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.511054" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk', 'Content-Length': '56'} 
 body=b'{"email": "user@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:36.511102" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-fq6aNp05NK8CF9BOa3CDWtkaExI"', 'Date': 'Wed, 02 Jul 2025 03:01:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3b0","name":"Regular User","email":"user@example.com","role":"user","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk"}} 
 </msg>
<msg time="2025-07-02T00:01:36.511228" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:36.431121" elapsed="0.080126"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.511668" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3b0', 'name': 'Regular User', 'email': 'user@example.com', 'role': 'user', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.511367" elapsed="0.000367"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.511926" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.511821" elapsed="0.000131"/>
</kw>
<arg>${dados_login_user}</arg>
<status status="PASS" start="2025-07-02T00:01:36.430930" elapsed="0.081058"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.512243" elapsed="0.000242"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.512777" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:36.512560" elapsed="0.000245"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.513101" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.512877" elapsed="0.000252"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.513418" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.513200" elapsed="0.000246"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.512087" elapsed="0.001394"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.513728" elapsed="0.000439"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.514314" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.514243" elapsed="0.000096"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.513567" elapsed="0.000804"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.514670" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.514436" elapsed="0.000252"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.514875" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:36.514766" elapsed="0.000133"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:36.515438" elapsed="0.000106"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.515133" elapsed="0.000445"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.515793" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:36.515652" elapsed="0.000225"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.514984" elapsed="0.000932"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.428802" elapsed="0.087140"/>
</kw>
<kw name="Payload criar reserva com dados inválidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:36.516688" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_reservation.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_reservation.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:36.516918" level="INFO">${arquivo} = {
    "reserva_valido": {
        "session": "{{session_id}}",
        "seats": [{
            "row": "A",
            "number": 4,
            "type": "full"
        }],
        "paymentMethod": "cre...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:36.516593" elapsed="0.000349"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.517188" level="INFO">${data} = {'reserva_valido': {'session': '{{session_id}}', 'seats': [{'row': 'A', 'number': 4, 'type': 'full'}], 'paymentMethod': 'credit_card'}, 'reserva_invalido': {'session': 'id-inexistente', 'seats': [{'ro...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:36.517026" elapsed="0.000181"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:36.517241" elapsed="0.000028"/>
</return>
<msg time="2025-07-02T00:01:36.517349" level="INFO">${json} = {'reserva_valido': {'session': '{{session_id}}', 'seats': [{'row': 'A', 'number': 4, 'type': 'full'}], 'paymentMethod': 'credit_card'}, 'reserva_invalido': {'session': 'id-inexistente', 'seats': [{'ro...</msg>
<var>${json}</var>
<arg>json_reservation.json</arg>
<status status="PASS" start="2025-07-02T00:01:36.516429" elapsed="0.000936"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.517691" level="INFO">${dados_reserva_inv} = {'session': 'id-inexistente', 'seats': [{'row': '', 'number': '', 'type': 'none'}], 'paymentMethod': 'tomorrow'}</msg>
<var>${dados_reserva_inv}</var>
<arg>${json["reserva_invalido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.517439" elapsed="0.000270"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.517916" level="INFO">${dados_reserva_inv} = {'session': 'id-inexistente', 'seats': [{'row': '', 'number': '', 'type': 'none'}], 'paymentMethod': 'tomorrow'}</msg>
<arg>${dados_reserva_inv}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.517814" elapsed="0.000128"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.516226" elapsed="0.001750"/>
</kw>
<kw name="POST endpoint /reservations com payload inválido" owner="reservations_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.541892" level="INFO">POST Request : url=http://localhost:5000/api/v1/reservations 
 path_url=/api/v1/reservations 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk', 'Content-Length': '112'} 
 body=b'{"session": "id-inexistente", "seats": [{"row": "", "number": "", "type": "none"}], "paymentMethod": "tomorrow"}' 
 </msg>
<msg time="2025-07-02T00:01:36.541943" level="INFO">POST Response : url=http://localhost:5000/api/v1/reservations 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1850', 'ETag': 'W/"73a-Wp1ADIPIumtANlg2ppmPSdfsd2Y"', 'Date': 'Wed, 02 Jul 2025 03:01:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Resource not found","stack":"CastError: Cast to ObjectId failed for value \"id-inexistente\" (type string) at path \"_id\" for model \"Session\"\n    at SchemaObjectId.cast (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\cast.js:390:32)\n    at Query.cast (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async exports.createReservation (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\src\\controllers\\reservationController.js:137:21)"} 
 </msg>
<msg time="2025-07-02T00:01:36.542030" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/reservations</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:36.518397" elapsed="0.023653"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.542473" level="INFO">Response: {'success': False, 'message': 'Resource not found', 'stack': 'CastError: Cast to ObjectId failed for value "id-inexistente" (type string) at path "_id" for model "Session"\n    at SchemaObjectId.cast (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\cast.js:390:32)\n    at Query.cast (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async exports.createReservation (C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Cinema App API\\cinema-challenge-back\\src\\controllers\\reservationController.js:137:21)'}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.542157" elapsed="0.000359"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.542702" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.542602" elapsed="0.000127"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.518154" elapsed="0.024611"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.543155" elapsed="0.000495"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.543810" level="INFO">Status Code: 400</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.543734" elapsed="0.000105"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.542933" elapsed="0.000941"/>
</kw>
<kw name="Validar se retornar mensagem de erro indicando os problemas no payload" owner="reservations_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:36.544216" elapsed="0.000286"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["message"]}</arg>
<arg>Resource not found</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:36.544585" elapsed="0.000262"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.544986" level="WARN">BUG CONFIRMADO: API retorna 'Resource not found' em vez de validar payload</msg>
<arg>BUG CONFIRMADO: API retorna 'Resource not found' em vez de validar payload</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.544923" elapsed="0.000278"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.545664" level="INFO">success: False</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.545320" elapsed="0.000383"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.546126" level="INFO">message: Resource not found</msg>
<arg>message: ${resp.json()["message"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.545803" elapsed="0.000356"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.546510" level="INFO">stack: CastError: Cast to ObjectId failed for value "id-inexistente" (type string) at path "_id" for model "Session"
    at SchemaObjectId.cast (C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Cinema App API\cinema-challenge-back\node_modules\mongoose\lib\schema\objectId.js:251:11)
    at SchemaType.applySetters (C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Cinema App API\cinema-challenge-back\node_modules\mongoose\lib\schemaType.js:1255:12)
    at SchemaType.castForQuery (C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Cinema App API\cinema-challenge-back\node_modules\mongoose\lib\schemaType.js:1673:17)
    at cast (C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Cinema App API\cinema-challenge-back\node_modules\mongoose\lib\cast.js:390:32)
    at Query.cast (C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Cinema App API\cinema-challenge-back\node_modules\mongoose\lib\query.js:5055:12)
    at Query._castConditions (C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Cinema App API\cinema-challenge-back\node_modules\mongoose\lib\query.js:2351:10)
    at model.Query._findOne (C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Cinema App API\cinema-challenge-back\node_modules\mongoose\lib\query.js:2674:8)
    at model.Query.exec (C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Cinema App API\cinema-challenge-back\node_modules\mongoose\lib\query.js:4604:80)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async exports.createReservation (C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Cinema App API\cinema-challenge-back\src\controllers\reservationController.js:137:21)</msg>
<arg>stack: ${resp.json()["stack"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.546247" elapsed="0.000304"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.546752" level="FAIL">BUG: API não valida payload corretamente - retorna 'Resource not found' em vez de 'Validation failed'</msg>
<arg>BUG: API não valida payload corretamente - retorna 'Resource not found' em vez de 'Validation failed'</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-07-02T00:01:36.546630" elapsed="0.000250">BUG: API não valida payload corretamente - retorna 'Resource not found' em vez de 'Validation failed'</status>
</kw>
<status status="FAIL" start="2025-07-02T00:01:36.544041" elapsed="0.002928">BUG: API não valida payload corretamente - retorna 'Resource not found' em vez de 'Validation failed'</status>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.547480" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:36.547438" elapsed="0.000086"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.547649" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.547598" elapsed="0.000078"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.547252" elapsed="0.000458"/>
</kw>
<tag>bug_conhecido</tag>
<tag>criar_reserva_inv</tag>
<status status="FAIL" start="2025-07-02T00:01:36.426675" elapsed="0.121115">BUG: API não valida payload corretamente - retorna 'Resource not found' em vez de 'Validation failed'</status>
</test>
<doc>Cenários de testes candidatos à automação para o módulo de "Reservations"</doc>
<status status="FAIL" start="2025-07-02T00:01:35.362682" elapsed="1.185432"/>
</suite>
<suite id="s1-s4" name="Sessions Tests" source="C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\tests\sessions_tests.robot">
<test id="s1-s4-t1" name="SESSIONS-BE-003: Criar nova sessão" line="10">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:36.556290" elapsed="0.000124"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.555872" elapsed="0.000582"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.556688" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:36.556534" elapsed="0.000253"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.555679" elapsed="0.001151"/>
</kw>
<kw name="Login usuário admin" owner="common">
<kw name="Payload login usuário admin" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:36.558051" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:36.558269" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:36.557948" elapsed="0.000343"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.558566" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:36.558388" elapsed="0.000251"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:36.558678" elapsed="0.000024"/>
</return>
<msg time="2025-07-02T00:01:36.558786" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:36.557360" elapsed="0.001443"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.559138" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<var>${dados_login_admin}</var>
<arg>${json["admin_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.558879" elapsed="0.000278"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.559345" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_admin}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.559237" elapsed="0.000133"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.557205" elapsed="0.002198"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.639655" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNiMCIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.qMGDY7VhXJ-pJQbQEYVSMkN2x-aobNNJR-No7g2qZyk', 'Content-Length': '57'} 
 body=b'{"email": "admin@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:36.639729" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-NWk0USZWeosu479rQPARqFGPf/g"', 'Date': 'Wed, 02 Jul 2025 03:01:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3af","name":"Admin User","email":"admin@example.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0"}} 
 </msg>
<msg time="2025-07-02T00:01:36.639829" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:36.559676" elapsed="0.080176"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.640378" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3af', 'name': 'Admin User', 'email': 'admin@example.com', 'role': 'admin', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.640002" elapsed="0.000409"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.640614" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.640504" elapsed="0.000137"/>
</kw>
<arg>${dados_login_admin}</arg>
<status status="PASS" start="2025-07-02T00:01:36.559490" elapsed="0.081189"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.640956" elapsed="0.000252"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.641512" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:36.641288" elapsed="0.000254"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.641848" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.641617" elapsed="0.000259"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.642167" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.641949" elapsed="0.000246"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.640792" elapsed="0.001438"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.642490" elapsed="0.000453"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.643101" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.643028" elapsed="0.000099"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.642324" elapsed="0.000836"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.643473" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.643227" elapsed="0.000264"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.643687" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:36.643573" elapsed="0.000139"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:36.644273" elapsed="0.000109"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.643954" elapsed="0.000500"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.644680" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:36.644530" elapsed="0.000245"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.643801" elapsed="0.001014"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.557036" elapsed="0.087805"/>
</kw>
<kw name="Reset movie from database" owner="common">
<kw name="Payload criar filme com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:36.645859" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_movie.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_movie.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:36.646161" level="INFO">${arquivo} = {
    "movie_valido": {
        "title": "Filme Para Teste",
        "synopsis": "Sinopse do Filme",
        "director": "Testador de Filme",
        "genres": [
            "Science Fiction"
        ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:36.645710" elapsed="0.000478"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.646495" level="INFO">${data} = {'movie_valido': {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmeP...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:36.646296" elapsed="0.000219"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:36.646552" elapsed="0.000025"/>
</return>
<msg time="2025-07-02T00:01:36.646662" level="INFO">${json} = {'movie_valido': {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmeP...</msg>
<var>${json}</var>
<arg>json_movie.json</arg>
<status status="PASS" start="2025-07-02T00:01:36.645491" elapsed="0.001188"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.647027" level="INFO">${dados_movie_valido} = {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmePoster.png', 'rele...</msg>
<var>${dados_movie_valido}</var>
<arg>${json["movie_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.646758" elapsed="0.000288"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.647239" level="INFO">${dados_movie_valido} = {'title': 'Filme Para Teste', 'synopsis': 'Sinopse do Filme', 'director': 'Testador de Filme', 'genres': ['Science Fiction'], 'duration': 200, 'classification': 'R', 'poster': 'FilmePoster.png', 'rele...</msg>
<arg>${dados_movie_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.647128" elapsed="0.000139"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.645286" elapsed="0.002015"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.647461" level="INFO">${movie_title} = Filme Para Teste</msg>
<var>${movie_title}</var>
<arg>${dados_movie_valido}[title]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.647370" elapsed="0.000107"/>
</kw>
<kw name="Remove movie from database" owner="database">
<msg time="2025-07-02T00:01:36.692584" level="INFO">Found movie with ID: 6864a10ff75602e326ad6201 and title: Filme Para Teste
Removed 1 movie(s) with title: Filme Para Teste</msg>
<arg>${movie_title}</arg>
<status status="PASS" start="2025-07-02T00:01:36.647549" elapsed="0.045083"/>
</kw>
<kw name="Inserir filme no banco e pegar ID" owner="common">
<kw name="Insert movie from database" owner="database">
<msg time="2025-07-02T00:01:36.721311" level="INFO">Movie inserted with ID: 6864a110f75602e326ad6202</msg>
<msg time="2025-07-02T00:01:36.721382" level="INFO">${movie_id} = 6864a110f75602e326ad6202</msg>
<var>${movie_id}</var>
<arg>${movie_data}</arg>
<status status="PASS" start="2025-07-02T00:01:36.693025" elapsed="0.028378"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.721642" level="INFO">${movie_id} = 6864a110f75602e326ad6202</msg>
<arg>${movie_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.721510" elapsed="0.000165"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.721864" level="INFO">Movie inserted with ID: 6864a110f75602e326ad6202</msg>
<arg>Movie inserted with ID: ${movie_id}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.721770" elapsed="0.000128"/>
</kw>
<return>
<value>${movie_id}</value>
<status status="PASS" start="2025-07-02T00:01:36.721933" elapsed="0.000029"/>
</return>
<msg time="2025-07-02T00:01:36.722056" level="INFO">${movie_id} = 6864a110f75602e326ad6202</msg>
<var>${movie_id}</var>
<arg>${dados_movie_valido}</arg>
<status status="PASS" start="2025-07-02T00:01:36.692774" elapsed="0.029301"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.722293" level="INFO">${movie_id} = 6864a110f75602e326ad6202</msg>
<arg>${movie_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.722169" elapsed="0.000154"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.722516" level="INFO">${movie_title} = Filme Para Teste</msg>
<arg>${movie_title}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.722410" elapsed="0.000135"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.645057" elapsed="0.077527"/>
</kw>
<kw name="Reset theater from database" owner="common">
<kw name="Payload criar cinema com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:36.723592" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:36.723855" level="INFO">${arquivo} = {
    "theater_valido": {
        "name": "Theater Teste",
        "capacity": 100,
        "type": "3D"
    },
    "theater_invalido": {
        "name": "",
        "capacity": 0,
        "type": "ty...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:36.723491" elapsed="0.000386"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.724139" level="INFO">${data} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:36.723970" elapsed="0.000189"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:36.724195" elapsed="0.000022"/>
</return>
<msg time="2025-07-02T00:01:36.724295" level="INFO">${json} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${json}</var>
<arg>json_theater.json</arg>
<status status="PASS" start="2025-07-02T00:01:36.723294" elapsed="0.001017"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.724661" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<var>${dados_theater_valido}</var>
<arg>${json["theater_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.724388" elapsed="0.000292"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.724867" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<arg>${dados_theater_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.724759" elapsed="0.000133"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.723054" elapsed="0.001873"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.725085" level="INFO">${theater_name} = Theater Teste</msg>
<var>${theater_name}</var>
<arg>${dados_theater_valido}[name]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.724992" elapsed="0.000109"/>
</kw>
<kw name="Remove theater from database" owner="database">
<msg time="2025-07-02T00:01:36.770456" level="INFO">Found theater with ID: 6864a10f472fdde84ba2fb51 and name: Theater Teste
Removed 1 theater(s) with name: Theater Teste</msg>
<arg>${theater_name}</arg>
<status status="PASS" start="2025-07-02T00:01:36.725174" elapsed="0.045326"/>
</kw>
<kw name="Criar novo theater" owner="common">
<kw name="Login usuário admin" owner="common">
<kw name="Payload login usuário admin" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:36.771691" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:36.771900" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:36.771576" elapsed="0.000352"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.772185" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:36.772013" elapsed="0.000194"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:36.772240" elapsed="0.000020"/>
</return>
<msg time="2025-07-02T00:01:36.772341" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:36.771342" elapsed="0.001016"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.772713" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<var>${dados_login_admin}</var>
<arg>${json["admin_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.772435" elapsed="0.000295"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.772934" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_admin}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.772813" elapsed="0.000146"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.771117" elapsed="0.001875"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.852764" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0', 'Content-Length': '57'} 
 body=b'{"email": "admin@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:36.852820" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-NWk0USZWeosu479rQPARqFGPf/g"', 'Date': 'Wed, 02 Jul 2025 03:01:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3af","name":"Admin User","email":"admin@example.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0"}} 
 </msg>
<msg time="2025-07-02T00:01:36.852910" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:36.773302" elapsed="0.079633"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.853459" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3af', 'name': 'Admin User', 'email': 'admin@example.com', 'role': 'admin', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.853091" elapsed="0.000408"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.853742" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.853602" elapsed="0.000168"/>
</kw>
<arg>${dados_login_admin}</arg>
<status status="PASS" start="2025-07-02T00:01:36.773080" elapsed="0.080726"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.854094" elapsed="0.000266"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.854674" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:36.854438" elapsed="0.000266"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.855028" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.854780" elapsed="0.000277"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.855359" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.855129" elapsed="0.000259"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.853909" elapsed="0.001514"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.855706" elapsed="0.000501"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.856359" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.856287" elapsed="0.000099"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.855513" elapsed="0.000907"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.856734" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.856486" elapsed="0.000267"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.856952" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:36.856831" elapsed="0.000146"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:36.857569" elapsed="0.000109"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.857246" elapsed="0.000467"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.857942" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:36.857786" elapsed="0.000252"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.857063" elapsed="0.001015"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.770885" elapsed="0.087219"/>
</kw>
<kw name="Payload criar cinema com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:36.858658" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:36.859174" level="INFO">${arquivo} = {
    "theater_valido": {
        "name": "Theater Teste",
        "capacity": 100,
        "type": "3D"
    },
    "theater_invalido": {
        "name": "",
        "capacity": 0,
        "type": "ty...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:36.858566" elapsed="0.000635"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.859442" level="INFO">${data} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:36.859285" elapsed="0.000176"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:36.859495" elapsed="0.000021"/>
</return>
<msg time="2025-07-02T00:01:36.859593" level="INFO">${json} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${json}</var>
<arg>json_theater.json</arg>
<status status="PASS" start="2025-07-02T00:01:36.858381" elapsed="0.001228"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.859977" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<var>${dados_theater_valido}</var>
<arg>${json["theater_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.859714" elapsed="0.000280"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.860184" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<arg>${dados_theater_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.860071" elapsed="0.000137"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.858188" elapsed="0.002052"/>
</kw>
<kw name="POST endpoint /theaters" owner="theaters_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:36.907167" level="INFO">POST Request : url=http://localhost:5000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0', 'Content-Length': '56'} 
 body=b'{"name": "Theater Teste", "capacity": 100, "type": "3D"}' 
 </msg>
<msg time="2025-07-02T00:01:36.907221" level="INFO">POST Response : url=http://localhost:5000/api/v1/theaters 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '226', 'ETag': 'W/"e2-No0lIG7baH8lf8my25dpm0f2/SQ"', 'Date': 'Wed, 02 Jul 2025 03:01:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"name":"Theater Teste","capacity":100,"type":"3D","_id":"6864a110472fdde84ba2fb6c","createdAt":"2025-07-02T03:01:36.882Z","updatedAt":"2025-07-02T03:01:36.882Z","__v":0,"id":"6864a110472fdde84ba2fb6c"}} 
 </msg>
<msg time="2025-07-02T00:01:36.907299" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/theaters</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:36.860527" elapsed="0.046794"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.907790" level="INFO">Response: {'success': True, 'data': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D', '_id': '6864a110472fdde84ba2fb6c', 'createdAt': '2025-07-02T03:01:36.882Z', 'updatedAt': '2025-07-02T03:01:36.882Z', '__v': 0, 'id': '6864a110472fdde84ba2fb6c'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.907433" elapsed="0.000396"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.908047" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.907916" elapsed="0.000164"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.860325" elapsed="0.047792"/>
</kw>
<kw name="Validar se o cinema foi criado corretamente" owner="theaters_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:36.908406" elapsed="0.000294"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.909025" level="INFO">Length is 8.</msg>
<arg>${resp.json()["data"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:36.908779" elapsed="0.000276"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.909354" level="INFO">Length is 24.</msg>
<arg>${resp.json()["data"]["_id"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:36.909127" elapsed="0.000255"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.909703" level="INFO">${theater_id} = 6864a110472fdde84ba2fb6c</msg>
<var>${theater_id}</var>
<arg>${resp.json()["data"]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.909457" elapsed="0.000263"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.909900" level="INFO">${theater_id} = 6864a110472fdde84ba2fb6c</msg>
<arg>${theater_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.909798" elapsed="0.000127"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.910235" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.909993" elapsed="0.000270"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.910578" level="INFO">data: {'name': 'Theater Teste', 'capacity': 100, 'type': '3D', '_id': '6864a110472fdde84ba2fb6c', 'createdAt': '2025-07-02T03:01:36.882Z', 'updatedAt': '2025-07-02T03:01:36.882Z', '__v': 0, 'id': '6864a110472fdde84ba2fb6c'}</msg>
<arg>data: ${resp.json()["data"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.910332" elapsed="0.000274"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.908218" elapsed="0.002422"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:36.910928" elapsed="0.000497"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.911575" level="INFO">Status Code: 201</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:36.911503" elapsed="0.000098"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.910730" elapsed="0.000904"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.770622" elapsed="0.141038"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.722796" elapsed="0.188890"/>
</kw>
<kw name="Payload criar sessão com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:36.912593" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_session.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_session.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:36.912844" level="INFO">${arquivo} = {
    "session_valido": {
        "movie": "{{movie_id}}",
        "theater": "{{theater_id}}",
        "datetime": "2025-07-01T03:49:48.809Z",
        "fullPrice": 30,
        "halfPrice": 15
    },
...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:36.912475" elapsed="0.000394"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.913155" level="INFO">${data} = {'session_valido': {'movie': '{{movie_id}}', 'theater': '{{theater_id}}', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15}, 'session_invalido': {'datetime': 'data-inválida', '...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:36.912985" elapsed="0.000190"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:36.913210" elapsed="0.000022"/>
</return>
<msg time="2025-07-02T00:01:36.913313" level="INFO">${json} = {'session_valido': {'movie': '{{movie_id}}', 'theater': '{{theater_id}}', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15}, 'session_invalido': {'datetime': 'data-inválida', '...</msg>
<var>${json}</var>
<arg>json_session.json</arg>
<status status="PASS" start="2025-07-02T00:01:36.912229" elapsed="0.001101"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.913698" level="INFO">${dados_session_valido} = {'movie': '{{movie_id}}', 'theater': '{{theater_id}}', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15}</msg>
<var>${dados_session_valido}</var>
<arg>${json["session_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:36.913407" elapsed="0.000310"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${dados_session_valido}</arg>
<arg>movie=${filme_id}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:36.913796" elapsed="0.000107"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${dados_session_valido}</arg>
<arg>theater=${cinema_id}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:36.913977" elapsed="0.000097"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:36.914248" level="INFO">${dados_session_valido} = {'movie': '6864a110f75602e326ad6202', 'theater': '6864a110472fdde84ba2fb6c', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15}</msg>
<arg>${dados_session_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:36.914150" elapsed="0.000124"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.911905" elapsed="0.002402"/>
</kw>
<kw name="POST endpoint /sessions" owner="sessions_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.010465" level="INFO">POST Request : url=http://localhost:5000/api/v1/sessions 
 path_url=/api/v1/sessions 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0', 'Content-Length': '150'} 
 body=b'{"movie": "6864a110f75602e326ad6202", "theater": "6864a110472fdde84ba2fb6c", "datetime": "2025-07-01T03:49:48.809Z", "fullPrice": 30, "halfPrice": 15}' 
 </msg>
<msg time="2025-07-02T00:01:37.010549" level="INFO">POST Response : url=http://localhost:5000/api/v1/sessions 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '4754', 'ETag': 'W/"1292-JX4dLdUE8IcYsQSkOZCvmTaAltc"', 'Date': 'Wed, 02 Jul 2025 03:01:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"movie":"6864a110f75602e326ad6202","theater":"6864a110472fdde84ba2fb6c","datetime":"2025-07-01T03:49:48.809Z","fullPrice":30,"halfPrice":15,"seats":[{"row":"A","number":1,"status":"available"},{"row":"A","number":2,"status":"available"},{"row":"A","number":3,"status":"available"},{"row":"A","number":4,"status":"available"},{"row":"A","number":5,"status":"available"},{"row":"A","number":6,"status":"available"},{"row":"A","number":7,"status":"available"},{"row":"A","number":8,"status":"available"},{"row":"A","number":9,"status":"available"},{"row":"A","number":10,"status":"available"},{"row":"A","number":11,"status":"available"},{"row":"A","number":12,"status":"available"},{"row":"A","number":13,"status":"available"},{"row":"B","number":1,"status":"available"},{"row":"B","number":2,"status":"available"},{"row":"B","number":3,"status":"available"},{"row":"B","number":4,"status":"available"},{"row":"B","number":5,"status":"available"},{"row":"B","number":6,"status":"available"},{"row":"B","number":7,"status":"available"},{"row":"B","number":8,"status":"available"},{"row":"B","number":9,"status":"available"},{"row":"B","number":10,"status":"available"},{"row":"B","number":11,"status":"available"},{"row":"B","number":12,"status":"available"},{"row":"B","number":13,"status":"available"},{"row":"C","number":1,"status":"available"},{"row":"C","number":2,"status":"available"},{"row":"C","number":3,"status":"available"},{"row":"C","number":4,"status":"available"},{"row":"C","number":5,"status":"available"},{"row":"C","number":6,"status":"available"},{"row":"C","number":7,"status":"available"},{"row":"C","number":8,"status":"available"},{"row":"C","number":9,"status":"available"},{"row":"C","number":10,"status":"available"},{"row":"C","number":11,"status":"available"},{"row":"C","number":12,"status":"available"},{"row":"C","number":13,"status":"available"},{"row":"D","number":1,"status":"available"},{"row":"D","number":2,"status":"available"},{"row":"D","number":3,"status":"available"},{"row":"D","number":4,"status":"available"},{"row":"D","number":5,"status":"available"},{"row":"D","number":6,"status":"available"},{"row":"D","number":7,"status":"available"},{"row":"D","number":8,"status":"available"},{"row":"D","number":9,"status":"available"},{"row":"D","number":10,"status":"available"},{"row":"D","number":11,"status":"available"},{"row":"D","number":12,"status":"available"},{"row":"D","number":13,"status":"available"},{"row":"E","number":1,"status":"available"},{"row":"E","number":2,"status":"available"},{"row":"E","number":3,"status":"available"},{"row":"E","number":4,"status":"available"},{"row":"E","number":5,"status":"available"},{"row":"E","number":6,"status":"available"},{"row":"E","number":7,"status":"available"},{"row":"E","number":8,"status":"available"},{"row":"E","number":9,"status":"available"},{"row":"E","number":10,"status":"available"},{"row":"E","number":11,"status":"available"},{"row":"E","number":12,"status":"available"},{"row":"E","number":13,"status":"available"},{"row":"F","number":1,"status":"available"},{"row":"F","number":2,"status":"available"},{"row":"F","number":3,"status":"available"},{"row":"F","number":4,"status":"available"},{"row":"F","number":5,"status":"available"},{"row":"F","number":6,"status":"available"},{"row":"F","number":7,"status":"available"},{"row":"F","number":8,"status":"available"},{"row":"F","number":9,"status":"available"},{"row":"F","number":10,"status":"available"},{"row":"F","number":11,"status":"available"},{"row":"F","number":12,"status":"available"},{"row":"F","number":13,"status":"available"},{"row":"G","number":1,"status":"available"},{"row":"G","number":2,"status":"available"},{"row":"G","number":3,"status":"available"},{"row":"G","number":4,"status":"available"},{"row":"G","number":5,"status":"available"},{"row":"G","number":6,"status":"available"},{"row":"G","number":7,"status":"available"},{"row":"G","number":8,"status":"available"},{"row":"G","number":9,"status":"available"},{"row":"G","number":10,"status":"available"},{"row":"G","number":11,"status":"available"},{"row":"G","number":12,"status":"available"},{"row":"G","number":13,"status":"available"},{"row":"H","number":1,"status":"available"},{"row":"H","number":2,"status":"available"},{"row":"H","number":3,"status":"available"},{"row":"H","number":4,"status":"available"},{"row":"H","number":5,"status":"available"},{"row":"H","number":6,"status":"available"},{"row":"H","number":7,"status":"available"},{"row":"H","number":8,"status":"available"},{"row":"H","number":9,"status":"available"}],"_id":"6864a110472fdde84ba2fb71","createdAt":"2025-07-02T03:01:36.979Z","updatedAt":"2025-07-02T03:01:36.979Z","__v":0,"id":"6864a110472fdde84ba2fb71"}} 
 </msg>
<msg time="2025-07-02T00:01:37.010735" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/sessions</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:36.914718" elapsed="0.096043"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.011413" level="INFO">Response: {'success': True, 'data': {'movie': '6864a110f75602e326ad6202', 'theater': '6864a110472fdde84ba2fb6c', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15, 'seats': [{'row': 'A', 'number': 1, 'status': 'available'}, {'row': 'A', 'number': 2, 'status': 'available'}, {'row': 'A', 'number': 3, 'status': 'available'}, {'row': 'A', 'number': 4, 'status': 'available'}, {'row': 'A', 'number': 5, 'status': 'available'}, {'row': 'A', 'number': 6, 'status': 'available'}, {'row': 'A', 'number': 7, 'status': 'available'}, {'row': 'A', 'number': 8, 'status': 'available'}, {'row': 'A', 'number': 9, 'status': 'available'}, {'row': 'A', 'number': 10, 'status': 'available'}, {'row': 'A', 'number': 11, 'status': 'available'}, {'row': 'A', 'number': 12, 'status': 'available'}, {'row': 'A', 'number': 13, 'status': 'available'}, {'row': 'B', 'number': 1, 'status': 'available'}, {'row': 'B', 'number': 2, 'status': 'available'}, {'row': 'B', 'number': 3, 'status': 'available'}, {'row': 'B', 'number': 4, 'status': 'available'}, {'row': 'B', 'number': 5, 'status': 'available'}, {'row': 'B', 'number': 6, 'status': 'available'}, {'row': 'B', 'number': 7, 'status': 'available'}, {'row': 'B', 'number': 8, 'status': 'available'}, {'row': 'B', 'number': 9, 'status': 'available'}, {'row': 'B', 'number': 10, 'status': 'available'}, {'row': 'B', 'number': 11, 'status': 'available'}, {'row': 'B', 'number': 12, 'status': 'available'}, {'row': 'B', 'number': 13, 'status': 'available'}, {'row': 'C', 'number': 1, 'status': 'available'}, {'row': 'C', 'number': 2, 'status': 'available'}, {'row': 'C', 'number': 3, 'status': 'available'}, {'row': 'C', 'number': 4, 'status': 'available'}, {'row': 'C', 'number': 5, 'status': 'available'}, {'row': 'C', 'number': 6, 'status': 'available'}, {'row': 'C', 'number': 7, 'status': 'available'}, {'row': 'C', 'number': 8, 'status': 'available'}, {'row': 'C', 'number': 9, 'status': 'available'}, {'row': 'C', 'number': 10, 'status': 'available'}, {'row': 'C', 'number': 11, 'status': 'available'}, {'row': 'C', 'number': 12, 'status': 'available'}, {'row': 'C', 'number': 13, 'status': 'available'}, {'row': 'D', 'number': 1, 'status': 'available'}, {'row': 'D', 'number': 2, 'status': 'available'}, {'row': 'D', 'number': 3, 'status': 'available'}, {'row': 'D', 'number': 4, 'status': 'available'}, {'row': 'D', 'number': 5, 'status': 'available'}, {'row': 'D', 'number': 6, 'status': 'available'}, {'row': 'D', 'number': 7, 'status': 'available'}, {'row': 'D', 'number': 8, 'status': 'available'}, {'row': 'D', 'number': 9, 'status': 'available'}, {'row': 'D', 'number': 10, 'status': 'available'}, {'row': 'D', 'number': 11, 'status': 'available'}, {'row': 'D', 'number': 12, 'status': 'available'}, {'row': 'D', 'number': 13, 'status': 'available'}, {'row': 'E', 'number': 1, 'status': 'available'}, {'row': 'E', 'number': 2, 'status': 'available'}, {'row': 'E', 'number': 3, 'status': 'available'}, {'row': 'E', 'number': 4, 'status': 'available'}, {'row': 'E', 'number': 5, 'status': 'available'}, {'row': 'E', 'number': 6, 'status': 'available'}, {'row': 'E', 'number': 7, 'status': 'available'}, {'row': 'E', 'number': 8, 'status': 'available'}, {'row': 'E', 'number': 9, 'status': 'available'}, {'row': 'E', 'number': 10, 'status': 'available'}, {'row': 'E', 'number': 11, 'status': 'available'}, {'row': 'E', 'number': 12, 'status': 'available'}, {'row': 'E', 'number': 13, 'status': 'available'}, {'row': 'F', 'number': 1, 'status': 'available'}, {'row': 'F', 'number': 2, 'status': 'available'}, {'row': 'F', 'number': 3, 'status': 'available'}, {'row': 'F', 'number': 4, 'status': 'available'}, {'row': 'F', 'number': 5, 'status': 'available'}, {'row': 'F', 'number': 6, 'status': 'available'}, {'row': 'F', 'number': 7, 'status': 'available'}, {'row': 'F', 'number': 8, 'status': 'available'}, {'row': 'F', 'number': 9, 'status': 'available'}, {'row': 'F', 'number': 10, 'status': 'available'}, {'row': 'F', 'number': 11, 'status': 'available'}, {'row': 'F', 'number': 12, 'status': 'available'}, {'row': 'F', 'number': 13, 'status': 'available'}, {'row': 'G', 'number': 1, 'status': 'available'}, {'row': 'G', 'number': 2, 'status': 'available'}, {'row': 'G', 'number': 3, 'status': 'available'}, {'row': 'G', 'number': 4, 'status': 'available'}, {'row': 'G', 'number': 5, 'status': 'available'}, {'row': 'G', 'number': 6, 'status': 'available'}, {'row': 'G', 'number': 7, 'status': 'available'}, {'row': 'G', 'number': 8, 'status': 'available'}, {'row': 'G', 'number': 9, 'status': 'available'}, {'row': 'G', 'number': 10, 'status': 'available'}, {'row': 'G', 'number': 11, 'status': 'available'}, {'row': 'G', 'number': 12, 'status': 'available'}, {'row': 'G', 'number': 13, 'status': 'available'}, {'row': 'H', 'number': 1, 'status': 'available'}, {'row': 'H', 'number': 2, 'status': 'available'}, {'row': 'H', 'number': 3, 'status': 'available'}, {'row': 'H', 'number': 4, 'status': 'available'}, {'row': 'H', 'number': 5, 'status': 'available'}, {'row': 'H', 'number': 6, 'status': 'available'}, {'row': 'H', 'number': 7, 'status': 'available'}, {'row': 'H', 'number': 8, 'status': 'available'}, {'row': 'H', 'number': 9, 'status': 'available'}], '_id': '6864a110472fdde84ba2fb71', 'createdAt': '2025-07-02T03:01:36.979Z', 'updatedAt': '2025-07-02T03:01:36.979Z', '__v': 0, 'id': '6864a110472fdde84ba2fb71'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.010927" elapsed="0.000544"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.011688" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.011577" elapsed="0.000143"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:36.914485" elapsed="0.097278"/>
</kw>
<kw name="Validar se criou uma nova sessão corretamente" owner="sessions_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:37.012321" elapsed="0.000415"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.013134" level="INFO">Length is 11.</msg>
<arg>${resp.json()["data"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:37.012826" elapsed="0.000344"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.013530" level="INFO">Length is 24.</msg>
<arg>${resp.json()["data"]["movie"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:37.013247" elapsed="0.000313"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.013910" level="INFO">Length is 24.</msg>
<arg>${resp.json()["data"]["theater"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:37.013635" elapsed="0.000304"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.014289" level="INFO">Length is 24.</msg>
<arg>${resp.json()["data"]["_id"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:37.014012" elapsed="0.000306"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.014695" level="INFO">${session_id} = 6864a110472fdde84ba2fb71</msg>
<var>${session_id}</var>
<arg>${resp.json()["data"]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.014394" elapsed="0.000318"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.014925" level="INFO">${session_id} = 6864a110472fdde84ba2fb71</msg>
<arg>${session_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.014826" elapsed="0.000124"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.015318" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.015022" elapsed="0.000324"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.015765" level="INFO">data: {'movie': '6864a110f75602e326ad6202', 'theater': '6864a110472fdde84ba2fb6c', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15, 'seats': [{'row': 'A', 'number': 1, 'status': 'available'}, {'row': 'A', 'number': 2, 'status': 'available'}, {'row': 'A', 'number': 3, 'status': 'available'}, {'row': 'A', 'number': 4, 'status': 'available'}, {'row': 'A', 'number': 5, 'status': 'available'}, {'row': 'A', 'number': 6, 'status': 'available'}, {'row': 'A', 'number': 7, 'status': 'available'}, {'row': 'A', 'number': 8, 'status': 'available'}, {'row': 'A', 'number': 9, 'status': 'available'}, {'row': 'A', 'number': 10, 'status': 'available'}, {'row': 'A', 'number': 11, 'status': 'available'}, {'row': 'A', 'number': 12, 'status': 'available'}, {'row': 'A', 'number': 13, 'status': 'available'}, {'row': 'B', 'number': 1, 'status': 'available'}, {'row': 'B', 'number': 2, 'status': 'available'}, {'row': 'B', 'number': 3, 'status': 'available'}, {'row': 'B', 'number': 4, 'status': 'available'}, {'row': 'B', 'number': 5, 'status': 'available'}, {'row': 'B', 'number': 6, 'status': 'available'}, {'row': 'B', 'number': 7, 'status': 'available'}, {'row': 'B', 'number': 8, 'status': 'available'}, {'row': 'B', 'number': 9, 'status': 'available'}, {'row': 'B', 'number': 10, 'status': 'available'}, {'row': 'B', 'number': 11, 'status': 'available'}, {'row': 'B', 'number': 12, 'status': 'available'}, {'row': 'B', 'number': 13, 'status': 'available'}, {'row': 'C', 'number': 1, 'status': 'available'}, {'row': 'C', 'number': 2, 'status': 'available'}, {'row': 'C', 'number': 3, 'status': 'available'}, {'row': 'C', 'number': 4, 'status': 'available'}, {'row': 'C', 'number': 5, 'status': 'available'}, {'row': 'C', 'number': 6, 'status': 'available'}, {'row': 'C', 'number': 7, 'status': 'available'}, {'row': 'C', 'number': 8, 'status': 'available'}, {'row': 'C', 'number': 9, 'status': 'available'}, {'row': 'C', 'number': 10, 'status': 'available'}, {'row': 'C', 'number': 11, 'status': 'available'}, {'row': 'C', 'number': 12, 'status': 'available'}, {'row': 'C', 'number': 13, 'status': 'available'}, {'row': 'D', 'number': 1, 'status': 'available'}, {'row': 'D', 'number': 2, 'status': 'available'}, {'row': 'D', 'number': 3, 'status': 'available'}, {'row': 'D', 'number': 4, 'status': 'available'}, {'row': 'D', 'number': 5, 'status': 'available'}, {'row': 'D', 'number': 6, 'status': 'available'}, {'row': 'D', 'number': 7, 'status': 'available'}, {'row': 'D', 'number': 8, 'status': 'available'}, {'row': 'D', 'number': 9, 'status': 'available'}, {'row': 'D', 'number': 10, 'status': 'available'}, {'row': 'D', 'number': 11, 'status': 'available'}, {'row': 'D', 'number': 12, 'status': 'available'}, {'row': 'D', 'number': 13, 'status': 'available'}, {'row': 'E', 'number': 1, 'status': 'available'}, {'row': 'E', 'number': 2, 'status': 'available'}, {'row': 'E', 'number': 3, 'status': 'available'}, {'row': 'E', 'number': 4, 'status': 'available'}, {'row': 'E', 'number': 5, 'status': 'available'}, {'row': 'E', 'number': 6, 'status': 'available'}, {'row': 'E', 'number': 7, 'status': 'available'}, {'row': 'E', 'number': 8, 'status': 'available'}, {'row': 'E', 'number': 9, 'status': 'available'}, {'row': 'E', 'number': 10, 'status': 'available'}, {'row': 'E', 'number': 11, 'status': 'available'}, {'row': 'E', 'number': 12, 'status': 'available'}, {'row': 'E', 'number': 13, 'status': 'available'}, {'row': 'F', 'number': 1, 'status': 'available'}, {'row': 'F', 'number': 2, 'status': 'available'}, {'row': 'F', 'number': 3, 'status': 'available'}, {'row': 'F', 'number': 4, 'status': 'available'}, {'row': 'F', 'number': 5, 'status': 'available'}, {'row': 'F', 'number': 6, 'status': 'available'}, {'row': 'F', 'number': 7, 'status': 'available'}, {'row': 'F', 'number': 8, 'status': 'available'}, {'row': 'F', 'number': 9, 'status': 'available'}, {'row': 'F', 'number': 10, 'status': 'available'}, {'row': 'F', 'number': 11, 'status': 'available'}, {'row': 'F', 'number': 12, 'status': 'available'}, {'row': 'F', 'number': 13, 'status': 'available'}, {'row': 'G', 'number': 1, 'status': 'available'}, {'row': 'G', 'number': 2, 'status': 'available'}, {'row': 'G', 'number': 3, 'status': 'available'}, {'row': 'G', 'number': 4, 'status': 'available'}, {'row': 'G', 'number': 5, 'status': 'available'}, {'row': 'G', 'number': 6, 'status': 'available'}, {'row': 'G', 'number': 7, 'status': 'available'}, {'row': 'G', 'number': 8, 'status': 'available'}, {'row': 'G', 'number': 9, 'status': 'available'}, {'row': 'G', 'number': 10, 'status': 'available'}, {'row': 'G', 'number': 11, 'status': 'available'}, {'row': 'G', 'number': 12, 'status': 'available'}, {'row': 'G', 'number': 13, 'status': 'available'}, {'row': 'H', 'number': 1, 'status': 'available'}, {'row': 'H', 'number': 2, 'status': 'available'}, {'row': 'H', 'number': 3, 'status': 'available'}, {'row': 'H', 'number': 4, 'status': 'available'}, {'row': 'H', 'number': 5, 'status': 'available'}, {'row': 'H', 'number': 6, 'status': 'available'}, {'row': 'H', 'number': 7, 'status': 'available'}, {'row': 'H', 'number': 8, 'status': 'available'}, {'row': 'H', 'number': 9, 'status': 'available'}], '_id': '6864a110472fdde84ba2fb71', 'createdAt': '2025-07-02T03:01:36.979Z', 'updatedAt': '2025-07-02T03:01:36.979Z', '__v': 0, 'id': '6864a110472fdde84ba2fb71'}</msg>
<arg>data: ${resp.json()["data"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.015421" elapsed="0.000393"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.016162" level="INFO">_id session: 6864a110472fdde84ba2fb71</msg>
<arg>_id session: ${resp.json()["data"]["_id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.015887" elapsed="0.000304"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.012058" elapsed="0.004170"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.016669" elapsed="0.000508"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.017325" level="INFO">Status Code: 201</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.017254" elapsed="0.000098"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.016421" elapsed="0.000964"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.017834" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:37.017791" elapsed="0.000098"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.018007" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.017958" elapsed="0.000074"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.017576" elapsed="0.000513"/>
</kw>
<tag>criar_sessao_valido</tag>
<status status="PASS" start="2025-07-02T00:01:36.555370" elapsed="0.462850"/>
</test>
<test id="s1-s4-t2" name="SESSIONS-BE-006: Criar sessão com payload inválido" line="19">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:37.019329" elapsed="0.000158"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.018940" elapsed="0.000596"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.019792" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:37.019622" elapsed="0.000270"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.018753" elapsed="0.001180"/>
</kw>
<kw name="Login usuário admin" owner="common">
<kw name="Payload login usuário admin" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:37.020769" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:37.021042" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:37.020664" elapsed="0.000401"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.021314" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:37.021147" elapsed="0.000188"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:37.021373" elapsed="0.000025"/>
</return>
<msg time="2025-07-02T00:01:37.021492" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:37.020503" elapsed="0.001006"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.021834" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<var>${dados_login_admin}</var>
<arg>${json["admin_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.021583" elapsed="0.000268"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.022034" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_admin}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.021930" elapsed="0.000128"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.020311" elapsed="0.001779"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.102003" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NiwiZXhwIjoxNzUxNTExNjk2fQ.vSmeRe7bTHM6PKWi55cGdakQUu_I2-0cnxx8gl6uUl0', 'Content-Length': '57'} 
 body=b'{"email": "admin@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:37.102067" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-knypTMGVA+OeZJF/SSdfkrC9HKs"', 'Date': 'Wed, 02 Jul 2025 03:01:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3af","name":"Admin User","email":"admin@example.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE"}} 
 </msg>
<msg time="2025-07-02T00:01:37.102176" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:37.022365" elapsed="0.079834"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.102715" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3af', 'name': 'Admin User', 'email': 'admin@example.com', 'role': 'admin', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.102339" elapsed="0.000416"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.102995" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.102864" elapsed="0.000165"/>
</kw>
<arg>${dados_login_admin}</arg>
<status status="PASS" start="2025-07-02T00:01:37.022177" elapsed="0.080896"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.103366" elapsed="0.000293"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.103963" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:37.103740" elapsed="0.000253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.104301" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.104069" elapsed="0.000259"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.104622" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.104401" elapsed="0.000251"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.103199" elapsed="0.001490"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.104949" elapsed="0.000448"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.105546" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.105473" elapsed="0.000099"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.104783" elapsed="0.000821"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.105905" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.105669" elapsed="0.000254"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.106112" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:37.106002" elapsed="0.000135"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:37.106698" elapsed="0.000108"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.106380" elapsed="0.000460"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.107064" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:37.106916" elapsed="0.000242"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.106223" elapsed="0.000975"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.020122" elapsed="0.087104"/>
</kw>
<kw name="Payload criar sessão com dados inválidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:37.107921" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_session.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_session.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:37.108188" level="INFO">${arquivo} = {
    "session_valido": {
        "movie": "{{movie_id}}",
        "theater": "{{theater_id}}",
        "datetime": "2025-07-01T03:49:48.809Z",
        "fullPrice": 30,
        "halfPrice": 15
    },
...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:37.107824" elapsed="0.000386"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.108473" level="INFO">${data} = {'session_valido': {'movie': '{{movie_id}}', 'theater': '{{theater_id}}', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15}, 'session_invalido': {'datetime': 'data-inválida', '...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:37.108300" elapsed="0.000194"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:37.108530" elapsed="0.000025"/>
</return>
<msg time="2025-07-02T00:01:37.108634" level="INFO">${json} = {'session_valido': {'movie': '{{movie_id}}', 'theater': '{{theater_id}}', 'datetime': '2025-07-01T03:49:48.809Z', 'fullPrice': 30, 'halfPrice': 15}, 'session_invalido': {'datetime': 'data-inválida', '...</msg>
<var>${json}</var>
<arg>json_session.json</arg>
<status status="PASS" start="2025-07-02T00:01:37.107659" elapsed="0.000992"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.109360" level="INFO">${dados_session_inv} = {'datetime': 'data-inválida', 'fullPrice': 'não-é-número', 'halfPrice': -5}</msg>
<var>${dados_session_inv}</var>
<arg>${json["session_invalido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.108724" elapsed="0.000654"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.109558" level="INFO">${dados_session_inv} = {'datetime': 'data-inválida', 'fullPrice': 'não-é-número', 'halfPrice': -5}</msg>
<arg>${dados_session_inv}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.109458" elapsed="0.000126"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.107448" elapsed="0.002169"/>
</kw>
<kw name="POST endpoint /sessions com dados inválidos" owner="sessions_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.157937" level="INFO">POST Request : url=http://localhost:5000/api/v1/sessions 
 path_url=/api/v1/sessions 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE', 'Content-Length': '95'} 
 body=b'{"datetime": "data-inv\\u00e1lida", "fullPrice": "n\\u00e3o-\\u00e9-n\\u00famero", "halfPrice": -5}' 
 </msg>
<msg time="2025-07-02T00:01:37.158119" level="INFO">POST Response : url=http://localhost:5000/api/v1/sessions 
 status=404, reason=Not Found 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '45', 'ETag': 'W/"2d-76yzoZ3aJF1oDN8vFKpqErDRmpM"', 'Date': 'Wed, 02 Jul 2025 03:01:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Movie not found"} 
 </msg>
<msg time="2025-07-02T00:01:37.158294" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/sessions</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:37.110055" elapsed="0.048265"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.158864" level="INFO">Response: {'success': False, 'message': 'Movie not found'}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.158485" elapsed="0.000414"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.159127" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.159015" elapsed="0.000141"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.109800" elapsed="0.049400"/>
</kw>
<kw name="Validar se retornou mensagem de erro informando sobre os dados inválidos ao criar a sessão" owner="sessions_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:37.159648" elapsed="0.000311"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["message"]}</arg>
<arg>Movie not found</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:37.160073" elapsed="0.000287"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.160690" level="INFO">success: False</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.160448" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.161034" level="INFO">message: Movie not found</msg>
<arg>message: ${resp.json()["message"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.160798" elapsed="0.000265"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.159439" elapsed="0.001661"/>
</kw>
<kw name="Validar Status Code &quot;404&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.161533" elapsed="0.000621"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.162317" level="INFO">Status Code: 404</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.162240" elapsed="0.000103"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.161295" elapsed="0.001083"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.162893" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:37.162838" elapsed="0.000115"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.163106" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.163051" elapsed="0.000083"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.162612" elapsed="0.000557"/>
</kw>
<tag>criar_sessao_invalido</tag>
<status status="PASS" start="2025-07-02T00:01:37.018448" elapsed="0.144807"/>
</test>
<doc>Cenários de testes candidatos à automação para o módulo de "Sessions"</doc>
<status status="PASS" start="2025-07-02T00:01:36.548485" elapsed="0.615152"/>
</suite>
<suite id="s1-s5" name="Theaters Tests" source="C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\tests\theaters_tests.robot">
<test id="s1-s5-t1" name="THEATERS-BE-003: Criar cinema com dados válidos" line="10">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:37.172044" elapsed="0.000126"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.171642" elapsed="0.000567"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.172454" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:37.172290" elapsed="0.000268"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.171451" elapsed="0.001151"/>
</kw>
<kw name="Remover theater do database para o teste" owner="common">
<kw name="Payload criar cinema com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:37.173342" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:37.173561" level="INFO">${arquivo} = {
    "theater_valido": {
        "name": "Theater Teste",
        "capacity": 100,
        "type": "3D"
    },
    "theater_invalido": {
        "name": "",
        "capacity": 0,
        "type": "ty...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:37.173243" elapsed="0.000341"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.173831" level="INFO">${data} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:37.173669" elapsed="0.000180"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:37.173916" elapsed="0.000027"/>
</return>
<msg time="2025-07-02T00:01:37.174027" level="INFO">${json} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${json}</var>
<arg>json_theater.json</arg>
<status status="PASS" start="2025-07-02T00:01:37.173082" elapsed="0.000961"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.174370" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<var>${dados_theater_valido}</var>
<arg>${json["theater_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.174119" elapsed="0.000270"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.174579" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<arg>${dados_theater_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.174468" elapsed="0.000137"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.172907" elapsed="0.001732"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.174795" level="INFO">${theater_name} = Theater Teste</msg>
<var>${theater_name}</var>
<arg>${dados_theater_valido}[name]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.174704" elapsed="0.000107"/>
</kw>
<kw name="Remove theater from database" owner="database">
<msg time="2025-07-02T00:01:37.219339" level="INFO">Found theater with ID: 6864a110472fdde84ba2fb6c and name: Theater Teste
Removed 1 theater(s) with name: Theater Teste</msg>
<arg>${theater_name}</arg>
<status status="PASS" start="2025-07-02T00:01:37.174881" elapsed="0.044506"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.172750" elapsed="0.046689"/>
</kw>
<kw name="Login usuário admin" owner="common">
<kw name="Payload login usuário admin" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:37.220417" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:37.220652" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:37.220276" elapsed="0.000398"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.220947" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:37.220764" elapsed="0.000202"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:37.221003" elapsed="0.000025"/>
</return>
<msg time="2025-07-02T00:01:37.221111" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:37.220055" elapsed="0.001072"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.221473" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<var>${dados_login_admin}</var>
<arg>${json["admin_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.221208" elapsed="0.000283"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.221679" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_admin}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.221571" elapsed="0.000134"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.219863" elapsed="0.001874"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.301972" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE', 'Content-Length': '57'} 
 body=b'{"email": "admin@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:37.302031" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-knypTMGVA+OeZJF/SSdfkrC9HKs"', 'Date': 'Wed, 02 Jul 2025 03:01:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3af","name":"Admin User","email":"admin@example.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE"}} 
 </msg>
<msg time="2025-07-02T00:01:37.302119" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:37.222023" elapsed="0.080118"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.302628" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3af', 'name': 'Admin User', 'email': 'admin@example.com', 'role': 'admin', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.302269" elapsed="0.000392"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.302861" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.302749" elapsed="0.000178"/>
</kw>
<arg>${dados_login_admin}</arg>
<status status="PASS" start="2025-07-02T00:01:37.221826" elapsed="0.081140"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.303245" elapsed="0.000255"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.303802" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:37.303577" elapsed="0.000255"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.304139" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.303906" elapsed="0.000261"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.304459" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.304239" elapsed="0.000249"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.303071" elapsed="0.001451"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.304792" elapsed="0.000469"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.305410" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.305339" elapsed="0.000097"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.304615" elapsed="0.000854"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.305779" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.305535" elapsed="0.000262"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.305990" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:37.305880" elapsed="0.000136"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:37.306588" elapsed="0.000106"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.306271" elapsed="0.000457"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.306944" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:37.306799" elapsed="0.000241"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.306106" elapsed="0.000972"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.219645" elapsed="0.087459"/>
</kw>
<kw name="Payload criar cinema com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:37.307935" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:37.308220" level="INFO">${arquivo} = {
    "theater_valido": {
        "name": "Theater Teste",
        "capacity": 100,
        "type": "3D"
    },
    "theater_invalido": {
        "name": "",
        "capacity": 0,
        "type": "ty...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:37.307782" elapsed="0.000464"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.308563" level="INFO">${data} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:37.308353" elapsed="0.000234"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:37.308629" elapsed="0.000026"/>
</return>
<msg time="2025-07-02T00:01:37.308736" level="INFO">${json} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${json}</var>
<arg>json_theater.json</arg>
<status status="PASS" start="2025-07-02T00:01:37.307565" elapsed="0.001187"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.309094" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<var>${dados_theater_valido}</var>
<arg>${json["theater_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.308828" elapsed="0.000284"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.309295" level="INFO">${dados_theater_valido} = {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}</msg>
<arg>${dados_theater_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.309194" elapsed="0.000126"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.307322" elapsed="0.002033"/>
</kw>
<kw name="POST endpoint /theaters" owner="theaters_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.358629" level="INFO">POST Request : url=http://localhost:5000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE', 'Content-Length': '56'} 
 body=b'{"name": "Theater Teste", "capacity": 100, "type": "3D"}' 
 </msg>
<msg time="2025-07-02T00:01:37.358686" level="INFO">POST Response : url=http://localhost:5000/api/v1/theaters 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '226', 'ETag': 'W/"e2-BBmjQamb5ztFVE+ZqjZSNuO2zXQ"', 'Date': 'Wed, 02 Jul 2025 03:01:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"name":"Theater Teste","capacity":100,"type":"3D","_id":"6864a111472fdde84ba2fb78","createdAt":"2025-07-02T03:01:37.332Z","updatedAt":"2025-07-02T03:01:37.332Z","__v":0,"id":"6864a111472fdde84ba2fb78"}} 
 </msg>
<msg time="2025-07-02T00:01:37.358771" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/theaters</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:37.310156" elapsed="0.048636"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.359208" level="INFO">Response: {'success': True, 'data': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D', '_id': '6864a111472fdde84ba2fb78', 'createdAt': '2025-07-02T03:01:37.332Z', 'updatedAt': '2025-07-02T03:01:37.332Z', '__v': 0, 'id': '6864a111472fdde84ba2fb78'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.358910" elapsed="0.000330"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.359431" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.359327" elapsed="0.000130"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.309525" elapsed="0.049968"/>
</kw>
<kw name="Validar se o cinema foi criado corretamente" owner="theaters_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:37.360229" elapsed="0.000311"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.360864" level="INFO">Length is 8.</msg>
<arg>${resp.json()["data"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:37.360626" elapsed="0.000268"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.361205" level="INFO">Length is 24.</msg>
<arg>${resp.json()["data"]["_id"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:37.360971" elapsed="0.000268"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.361558" level="INFO">${theater_id} = 6864a111472fdde84ba2fb78</msg>
<var>${theater_id}</var>
<arg>${resp.json()["data"]["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.361312" elapsed="0.000264"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.361748" level="INFO">${theater_id} = 6864a111472fdde84ba2fb78</msg>
<arg>${theater_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.361656" elapsed="0.000117"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.362082" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.361842" elapsed="0.000267"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.362417" level="INFO">data: {'name': 'Theater Teste', 'capacity': 100, 'type': '3D', '_id': '6864a111472fdde84ba2fb78', 'createdAt': '2025-07-02T03:01:37.332Z', 'updatedAt': '2025-07-02T03:01:37.332Z', '__v': 0, 'id': '6864a111472fdde84ba2fb78'}</msg>
<arg>data: ${resp.json()["data"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.362181" elapsed="0.000263"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.360045" elapsed="0.002434"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.362931" elapsed="0.000627"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.363752" level="INFO">Status Code: 201</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.363666" elapsed="0.000114"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.362663" elapsed="0.001152"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.364235" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:37.364192" elapsed="0.000152"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.364483" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.364421" elapsed="0.000089"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.364006" elapsed="0.000538"/>
</kw>
<tag>criar_cinema_valido</tag>
<status status="PASS" start="2025-07-02T00:01:37.171113" elapsed="0.193513"/>
</test>
<test id="s1-s5-t2" name="THEATERS-BE-006: Criar cinema com payload inválido" line="18">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:37.365608" elapsed="0.000113"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.365290" elapsed="0.000468"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.366033" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:37.365835" elapsed="0.000335"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.365137" elapsed="0.001079"/>
</kw>
<kw name="Login usuário admin" owner="common">
<kw name="Payload login usuário admin" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:37.366933" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:37.367212" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:37.366808" elapsed="0.000432"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.367562" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:37.367348" elapsed="0.000238"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:37.367630" elapsed="0.000028"/>
</return>
<msg time="2025-07-02T00:01:37.367748" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:37.366668" elapsed="0.001098"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.368101" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<var>${dados_login_admin}</var>
<arg>${json["admin_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.367843" elapsed="0.000276"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.368309" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_admin}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.368201" elapsed="0.000133"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.366522" elapsed="0.001846"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.448202" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE', 'Content-Length': '57'} 
 body=b'{"email": "admin@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:37.448264" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-knypTMGVA+OeZJF/SSdfkrC9HKs"', 'Date': 'Wed, 02 Jul 2025 03:01:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3af","name":"Admin User","email":"admin@example.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE"}} 
 </msg>
<msg time="2025-07-02T00:01:37.448359" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:37.368646" elapsed="0.079736"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.448884" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3af', 'name': 'Admin User', 'email': 'admin@example.com', 'role': 'admin', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.448523" elapsed="0.000395"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.449117" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.449010" elapsed="0.000133"/>
</kw>
<arg>${dados_login_admin}</arg>
<status status="PASS" start="2025-07-02T00:01:37.368456" elapsed="0.080726"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.449445" elapsed="0.000251"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.449999" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:37.449776" elapsed="0.000251"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.450331" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.450102" elapsed="0.000256"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.450649" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.450430" elapsed="0.000247"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.449286" elapsed="0.001427"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.451014" elapsed="0.000464"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.451673" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.451598" elapsed="0.000102"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.450805" elapsed="0.000930"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.452053" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.451804" elapsed="0.000268"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.452266" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:37.452154" elapsed="0.000139"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:37.452850" elapsed="0.000110"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.452539" elapsed="0.000456"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.453215" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:37.453067" elapsed="0.000240"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.452383" elapsed="0.000964"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.366370" elapsed="0.087003"/>
</kw>
<kw name="Payload criar cinema com dados inválidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:37.454311" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_theater.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:37.454613" level="INFO">${arquivo} = {
    "theater_valido": {
        "name": "Theater Teste",
        "capacity": 100,
        "type": "3D"
    },
    "theater_invalido": {
        "name": "",
        "capacity": 0,
        "type": "ty...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:37.454190" elapsed="0.000451"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.454938" level="INFO">${data} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:37.454747" elapsed="0.000210"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:37.454993" elapsed="0.000025"/>
</return>
<msg time="2025-07-02T00:01:37.455100" level="INFO">${json} = {'theater_valido': {'name': 'Theater Teste', 'capacity': 100, 'type': '3D'}, 'theater_invalido': {'name': '', 'capacity': 0, 'type': 'type invalido'}}</msg>
<var>${json}</var>
<arg>json_theater.json</arg>
<status status="PASS" start="2025-07-02T00:01:37.453982" elapsed="0.001135"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.455461" level="INFO">${dados_theater_inv} = {'name': '', 'capacity': 0, 'type': 'type invalido'}</msg>
<var>${dados_theater_inv}</var>
<arg>${json["theater_invalido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.455194" elapsed="0.000286"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.455664" level="INFO">${dados_theater_inv} = {'name': '', 'capacity': 0, 'type': 'type invalido'}</msg>
<arg>${dados_theater_inv}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.455564" elapsed="0.000125"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.453755" elapsed="0.001970"/>
</kw>
<kw name="POST endpoint /theaters com dados inválidos" owner="theaters_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.480111" level="INFO">POST Request : url=http://localhost:5000/api/v1/theaters 
 path_url=/api/v1/theaters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE', 'Content-Length': '52'} 
 body=b'{"name": "", "capacity": 0, "type": "type invalido"}' 
 </msg>
<msg time="2025-07-02T00:01:37.480156" level="INFO">POST Response : url=http://localhost:5000/api/v1/theaters 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '201', 'ETag': 'W/"c9-V/aD8PtpkhlSEhHhNVt5r25aXNU"', 'Date': 'Wed, 02 Jul 2025 03:01:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"message":"Validation failed","errors":{"name":"Theater name is required","capacity":"Capacity must be at least 1","type":"`type invalido` is not a valid enum value for path `type`."}} 
 </msg>
<msg time="2025-07-02T00:01:37.480231" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/theaters</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:37.456203" elapsed="0.024046"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.480649" level="INFO">Response: {'success': False, 'message': 'Validation failed', 'errors': {'name': 'Theater name is required', 'capacity': 'Capacity must be at least 1', 'type': '`type invalido` is not a valid enum value for path `type`.'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.480354" elapsed="0.000410"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.480959" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.480855" elapsed="0.000131"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.455935" elapsed="0.025088"/>
</kw>
<kw name="Validar se retorna mensagem de erro informando os dados inválidos" owner="theaters_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:37.481385" elapsed="0.000316"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["message"]}</arg>
<arg>Validation failed</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:37.481789" elapsed="0.000263"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.482359" level="INFO">Length is 3.</msg>
<arg>${resp.json()["errors"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:37.482131" elapsed="0.000257"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.482692" level="INFO">success: False</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.482464" elapsed="0.000255"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.483017" level="INFO">message: Validation failed</msg>
<arg>message: ${resp.json()["message"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.482790" elapsed="0.000258"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.483345" level="INFO">errors: {'name': 'Theater name is required', 'capacity': 'Capacity must be at least 1', 'type': '`type invalido` is not a valid enum value for path `type`.'}</msg>
<arg>errors: ${resp.json()["errors"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.483118" elapsed="0.000255"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.481205" elapsed="0.002202"/>
</kw>
<kw name="Validar Status Code &quot;400&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.483784" elapsed="0.000506"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.484455" level="INFO">Status Code: 400</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.484373" elapsed="0.000117"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.483572" elapsed="0.000952"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.484905" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:37.484865" elapsed="0.000084"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.485068" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.485018" elapsed="0.000078"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.484692" elapsed="0.000437"/>
</kw>
<tag>criar_cinema_invalido</tag>
<status status="PASS" start="2025-07-02T00:01:37.364845" elapsed="0.120351"/>
</test>
<doc>Cenários de testes candidatos à automação para o módulo de "Theaters"</doc>
<status status="PASS" start="2025-07-02T00:01:37.164131" elapsed="0.321323"/>
</suite>
<suite id="s1-s6" name="Users Tests" source="C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\tests\users_tests.robot">
<test id="s1-s6-t1" name="USER-BE-002: Obter detalhes de usuário por ID" line="10">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:37.493977" elapsed="0.000112"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.493663" elapsed="0.000464"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.494353" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:37.494202" elapsed="0.000242"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.493508" elapsed="0.000977"/>
</kw>
<kw name="Reset user from database" owner="common">
<kw name="Payload registro com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:37.495286" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:37.495550" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:37.495174" elapsed="0.000405"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.495904" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:37.495688" elapsed="0.000240"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:37.495968" elapsed="0.000024"/>
</return>
<msg time="2025-07-02T00:01:37.496076" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:37.495003" elapsed="0.001151"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.496507" level="INFO">${dados_registro_valido} = {'name': 'User Test', 'email': 'userTest@example.com', 'password': 'qatest321'}</msg>
<var>${dados_registro_valido}</var>
<arg>${json["user_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.496241" elapsed="0.000284"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.496720" level="INFO">${dados_registro_valido} = {'name': 'User Test', 'email': 'userTest@example.com', 'password': 'qatest321'}</msg>
<arg>${dados_registro_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.496608" elapsed="0.000139"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.494830" elapsed="0.001951"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.496942" level="INFO">${user_name} = User Test</msg>
<var>${user_name}</var>
<arg>${dados_registro_valido}[name]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.496849" elapsed="0.000109"/>
</kw>
<kw name="Remove user from database" owner="database">
<msg time="2025-07-02T00:01:37.516991" level="INFO">No user found with name: User Test</msg>
<arg>${user_name}</arg>
<status status="PASS" start="2025-07-02T00:01:37.497030" elapsed="0.020006"/>
</kw>
<kw name="Inserir user no banco e pegar ID" owner="common">
<kw name="Insert user from database" owner="database">
<msg time="2025-07-02T00:01:37.735162" level="INFO">User inserted with ID: 6864a111f75602e326ad6203</msg>
<msg time="2025-07-02T00:01:37.735275" level="INFO">${user_id} = 6864a111f75602e326ad6203</msg>
<var>${user_id}</var>
<arg>${user_data}</arg>
<status status="PASS" start="2025-07-02T00:01:37.517393" elapsed="0.217906"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.735601" level="INFO">${user_id} = 6864a111f75602e326ad6203</msg>
<arg>${user_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.735455" elapsed="0.000175"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.735804" level="INFO">User inserted with ID: 6864a111f75602e326ad6203</msg>
<arg>User inserted with ID: ${user_id}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.735717" elapsed="0.000117"/>
</kw>
<return>
<value>${user_id}</value>
<status status="PASS" start="2025-07-02T00:01:37.735866" elapsed="0.000029"/>
</return>
<msg time="2025-07-02T00:01:37.735981" level="INFO">${user_id} = 6864a111f75602e326ad6203</msg>
<var>${user_id}</var>
<arg>${dados_registro_valido}</arg>
<status status="PASS" start="2025-07-02T00:01:37.517168" elapsed="0.218830"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.736177" level="INFO">${user_id} = 6864a111f75602e326ad6203</msg>
<arg>${user_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.736083" elapsed="0.000119"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.494645" elapsed="0.241593"/>
</kw>
<kw name="Login usuário admin" owner="common">
<kw name="Payload login usuário admin" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:37.737260" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:37.737511" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:37.737148" elapsed="0.000385"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.737809" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:37.737621" elapsed="0.000208"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:37.737862" elapsed="0.000022"/>
</return>
<msg time="2025-07-02T00:01:37.737964" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:37.736941" elapsed="0.001040"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.738341" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<var>${dados_login_admin}</var>
<arg>${json["admin_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.738060" elapsed="0.000300"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.738549" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_admin}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.738440" elapsed="0.000135"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.736728" elapsed="0.001881"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.818720" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE', 'Content-Length': '57'} 
 body=b'{"email": "admin@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:37.818776" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-knypTMGVA+OeZJF/SSdfkrC9HKs"', 'Date': 'Wed, 02 Jul 2025 03:01:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3af","name":"Admin User","email":"admin@example.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE"}} 
 </msg>
<msg time="2025-07-02T00:01:37.819042" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:37.738898" elapsed="0.080172"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.819556" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3af', 'name': 'Admin User', 'email': 'admin@example.com', 'role': 'admin', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.819197" elapsed="0.000396"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.819787" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.819681" elapsed="0.000132"/>
</kw>
<arg>${dados_login_admin}</arg>
<status status="PASS" start="2025-07-02T00:01:37.738697" elapsed="0.081153"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.820125" elapsed="0.000260"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.820692" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:37.820465" elapsed="0.000256"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.821030" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.820794" elapsed="0.000264"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.821356" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.821132" elapsed="0.000252"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.819950" elapsed="0.001469"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.821693" elapsed="0.000470"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.822312" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.822241" elapsed="0.000097"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.821511" elapsed="0.000860"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.822683" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.822439" elapsed="0.000262"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.822888" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:37.822780" elapsed="0.000134"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:37.823481" elapsed="0.000108"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.823167" elapsed="0.000456"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.823838" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:37.823694" elapsed="0.000236"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.823000" elapsed="0.000970"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.736488" elapsed="0.087508"/>
</kw>
<kw name="GET endpoint /users/id-user" owner="users_keywords">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.868747" level="INFO">GET Request : url=http://localhost:5000/api/v1/users/6864a111f75602e326ad6203 
 path_url=/api/v1/users/6864a111f75602e326ad6203 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'} 
 body=None 
 </msg>
<msg time="2025-07-02T00:01:37.868802" level="INFO">GET Response : url=http://localhost:5000/api/v1/users/6864a111f75602e326ad6203 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '208', 'ETag': 'W/"d0-S0meAYEPs+4J6gC5t+4SNGdDwLs"', 'Date': 'Wed, 02 Jul 2025 03:01:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"6864a111f75602e326ad6203","name":"User Test","email":"userTest@example.com","role":"user","createdAt":"2025-07-02T03:01:37.710Z","__v":0,"updatedAt":"2025-07-02T03:01:37.710Z"}} 
 </msg>
<msg time="2025-07-02T00:01:37.868881" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/users/${id_user}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:37.824401" elapsed="0.044502"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.869375" level="INFO">Response: {'success': True, 'data': {'_id': '6864a111f75602e326ad6203', 'name': 'User Test', 'email': 'userTest@example.com', 'role': 'user', 'createdAt': '2025-07-02T03:01:37.710Z', '__v': 0, 'updatedAt': '2025-07-02T03:01:37.710Z'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.869021" elapsed="0.000430"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.869678" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.869558" elapsed="0.000147"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.824205" elapsed="0.045537"/>
</kw>
<kw name="Validar se retornou os detalhes do usuário corretamente" owner="users_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:37.870280" elapsed="0.000387"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["data"]["_id"]}</arg>
<arg>${id_user}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:37.870754" elapsed="0.000288"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.871365" level="INFO">Length is 7.</msg>
<arg>${resp.json()["data"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:37.871125" elapsed="0.000270"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.871708" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.871470" elapsed="0.000267"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.872056" level="INFO">data: {'_id': '6864a111f75602e326ad6203', 'name': 'User Test', 'email': 'userTest@example.com', 'role': 'user', 'createdAt': '2025-07-02T03:01:37.710Z', '__v': 0, 'updatedAt': '2025-07-02T03:01:37.710Z'}</msg>
<arg>data: ${resp.json()["data"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.871810" elapsed="0.000275"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.872386" level="INFO">user ID: 6864a111f75602e326ad6203</msg>
<arg>user ID: ${resp.json()["data"]["_id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.872157" elapsed="0.000257"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.869974" elapsed="0.002474"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.872889" elapsed="0.000528"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.873577" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.873497" elapsed="0.000109"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.872647" elapsed="0.000993"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.874148" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:37.874101" elapsed="0.000094"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.874325" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:37.874270" elapsed="0.000081"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.873876" elapsed="0.000509"/>
</kw>
<tag>obter_detalhes_user_por_id</tag>
<status status="PASS" start="2025-07-02T00:01:37.493187" elapsed="0.381267"/>
</test>
<test id="s1-s6-t2" name="USER-BE-003: Excluir usuário por ID" line="17">
<kw name="Iniciar sessão" owner="base" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:37.875408" elapsed="0.000113"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:37.875080" elapsed="0.000476"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:37.875781" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:37.875631" elapsed="0.000244"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.874913" elapsed="0.001002"/>
</kw>
<kw name="Reset user from database" owner="common">
<kw name="Payload registro com dados válidos" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:37.876629" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:37.876868" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:37.876531" elapsed="0.000359"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.877149" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:37.876976" elapsed="0.000193"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:37.877204" elapsed="0.000024"/>
</return>
<msg time="2025-07-02T00:01:37.877314" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:37.876384" elapsed="0.000948"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.877693" level="INFO">${dados_registro_valido} = {'name': 'User Test', 'email': 'userTest@example.com', 'password': 'qatest321'}</msg>
<var>${dados_registro_valido}</var>
<arg>${json["user_valido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.877435" elapsed="0.000276"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.877896" level="INFO">${dados_registro_valido} = {'name': 'User Test', 'email': 'userTest@example.com', 'password': 'qatest321'}</msg>
<arg>${dados_registro_valido}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:37.877790" elapsed="0.000130"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.876230" elapsed="0.001723"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:37.878109" level="INFO">${user_name} = User Test</msg>
<var>${user_name}</var>
<arg>${dados_registro_valido}[name]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:37.878018" elapsed="0.000106"/>
</kw>
<kw name="Remove user from database" owner="database">
<msg time="2025-07-02T00:01:37.931016" level="INFO">Found user with ID: 6864a111f75602e326ad6203 and name: User Test
Removed 1 user(s) with title: User Test</msg>
<arg>${user_name}</arg>
<status status="PASS" start="2025-07-02T00:01:37.878193" elapsed="0.052871"/>
</kw>
<kw name="Inserir user no banco e pegar ID" owner="common">
<kw name="Insert user from database" owner="database">
<msg time="2025-07-02T00:01:38.148501" level="INFO">User inserted with ID: 6864a112f75602e326ad6204</msg>
<msg time="2025-07-02T00:01:38.148586" level="INFO">${user_id} = 6864a112f75602e326ad6204</msg>
<var>${user_id}</var>
<arg>${user_data}</arg>
<status status="PASS" start="2025-07-02T00:01:37.931443" elapsed="0.217162"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.148858" level="INFO">${user_id} = 6864a112f75602e326ad6204</msg>
<arg>${user_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:38.148728" elapsed="0.000158"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.149049" level="INFO">User inserted with ID: 6864a112f75602e326ad6204</msg>
<arg>User inserted with ID: ${user_id}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:38.148966" elapsed="0.000111"/>
</kw>
<return>
<value>${user_id}</value>
<status status="PASS" start="2025-07-02T00:01:38.149109" elapsed="0.000027"/>
</return>
<msg time="2025-07-02T00:01:38.149219" level="INFO">${user_id} = 6864a112f75602e326ad6204</msg>
<var>${user_id}</var>
<arg>${dados_registro_valido}</arg>
<status status="PASS" start="2025-07-02T00:01:37.931206" elapsed="0.218030"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.149405" level="INFO">${user_id} = 6864a112f75602e326ad6204</msg>
<arg>${user_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:38.149314" elapsed="0.000117"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:37.876068" elapsed="0.273396"/>
</kw>
<kw name="Login usuário admin" owner="common">
<kw name="Payload login usuário admin" owner="common">
<kw name="Importar JSON static" owner="common">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-07-02T00:01:38.150435" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json"&gt;C:\Users\raiqu\Desktop\Nero\Estágio\Challenge Final\Challenge Final\Testes automatizados API\support\fixtures\static\json_auth.json&lt;/a&gt;'.</msg>
<msg time="2025-07-02T00:01:38.150709" level="INFO">${arquivo} = {
    "user_login":{
        "email": "user@example.com",
        "password": "password123"
    },
    "admin_login":{
        "email": "admin@example.com",
        "password": "password123"
    },
  ...</msg>
<var>${arquivo}</var>
<arg>C:\\Users\\raiqu\\Desktop\\Nero\\Estágio\\Challenge Final\\Challenge Final\\Testes automatizados API\\support\\common/../../support/fixtures/static/${nome_arquivo}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-07-02T00:01:38.150330" elapsed="0.000401"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.151014" level="INFO">${data} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${data}</var>
<arg>json.loads('''${arquivo}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-02T00:01:38.150819" elapsed="0.000214"/>
</kw>
<return>
<value>${data}</value>
<status status="PASS" start="2025-07-02T00:01:38.151067" elapsed="0.000021"/>
</return>
<msg time="2025-07-02T00:01:38.151165" level="INFO">${json} = {'user_login': {'email': 'user@example.com', 'password': 'password123'}, 'admin_login': {'email': 'admin@example.com', 'password': 'password123'}, 'user_valido': {'name': 'User Test', 'email': 'userTe...</msg>
<var>${json}</var>
<arg>json_auth.json</arg>
<status status="PASS" start="2025-07-02T00:01:38.150152" elapsed="0.001030"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.151537" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<var>${dados_login_admin}</var>
<arg>${json["admin_login"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:38.151258" elapsed="0.000299"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.151743" level="INFO">${dados_login_admin} = {'email': 'admin@example.com', 'password': 'password123'}</msg>
<arg>${dados_login_admin}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:38.151636" elapsed="0.000131"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:38.149959" elapsed="0.001842"/>
</kw>
<kw name="POST endpoint /auth/Login" owner="authentication_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:38.232567" level="INFO">POST Request : url=http://localhost:5000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5NywiZXhwIjoxNzUxNTExNjk3fQ.tDzLAdB2gxZ70_TkdA71Gq0a-zMsdOPDJreKuUI77kE', 'Content-Length': '57'} 
 body=b'{"email": "admin@example.com", "password": "password123"}' 
 </msg>
<msg time="2025-07-02T00:01:38.232645" level="INFO">POST Response : url=http://localhost:5000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '303', 'ETag': 'W/"12f-o3KgKhFDcpN6xOb39sS9tfF/2ak"', 'Date': 'Wed, 02 Jul 2025 03:01:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"_id":"686467c06671646cb11ac3af","name":"Admin User","email":"admin@example.com","role":"admin","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5OCwiZXhwIjoxNzUxNTExNjk4fQ.AYhTTyY7giVkE_s0MizAg-6Tg-4QMnJiJbC63XJkhBs"}} 
 </msg>
<msg time="2025-07-02T00:01:38.232902" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/auth/login</arg>
<arg>json=&amp;{payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:38.152093" elapsed="0.080837"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.233516" level="INFO">Response: {'success': True, 'data': {'_id': '686467c06671646cb11ac3af', 'name': 'Admin User', 'email': 'admin@example.com', 'role': 'admin', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5OCwiZXhwIjoxNzUxNTExNjk4fQ.AYhTTyY7giVkE_s0MizAg-6Tg-4QMnJiJbC63XJkhBs'}}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:38.233108" elapsed="0.000443"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.233770" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:38.233653" elapsed="0.000144"/>
</kw>
<arg>${dados_login_admin}</arg>
<status status="PASS" start="2025-07-02T00:01:38.151888" elapsed="0.081950"/>
</kw>
<kw name="Validar se o login foi realizado com sucesso" owner="authentication_keywords">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:38.234148" elapsed="0.000274"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.234734" level="INFO">Length is 171.</msg>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-02T00:01:38.234502" elapsed="0.000261"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.235082" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:38.234840" elapsed="0.000271"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.235411" level="INFO">token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5OCwiZXhwIjoxNzUxNTExNjk4fQ.AYhTTyY7giVkE_s0MizAg-6Tg-4QMnJiJbC63XJkhBs</msg>
<arg>token: ${resp.json()["data"]["token"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:38.235184" elapsed="0.000256"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:38.233961" elapsed="0.001515"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:38.235756" elapsed="0.000484"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.236391" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:38.236319" elapsed="0.000099"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:38.235573" elapsed="0.000877"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.236766" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5OCwiZXhwIjoxNzUxNTExNjk4fQ.AYhTTyY7giVkE_s0MizAg-6Tg-4QMnJiJbC63XJkhBs</msg>
<var>${auth_token}</var>
<arg>${resp.json()["data"]["token"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T00:01:38.236518" elapsed="0.000266"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.236979" level="INFO">${auth_token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5OCwiZXhwIjoxNzUxNTExNjk4fQ.AYhTTyY7giVkE_s0MizAg-6Tg-4QMnJiJbC63XJkhBs</msg>
<arg>${auth_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-02T00:01:38.236863" elapsed="0.000141"/>
</kw>
<kw name="Iniciar sessão" owner="base">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-07-02T00:01:38.237575" elapsed="0.000109"/>
</kw>
<arg>'${auth_token}' != '${EMPTY}'</arg>
<arg>Set To Dictionary</arg>
<arg>${headers}</arg>
<arg>Authorization=Bearer ${auth_token}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-07-02T00:01:38.237260" elapsed="0.000458"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:38.237941" level="INFO">Creating Session using : alias=Cinema App API, url=http://localhost:5000/api/v1, headers={'accept': 'application/json', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5OCwiZXhwIjoxNzUxNTExNjk4fQ.AYhTTyY7giVkE_s0MizAg-6Tg-4QMnJiJbC63XJkhBs'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=${URL_BASE}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-02T00:01:38.237790" elapsed="0.000253"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:38.237092" elapsed="0.000990"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:38.149705" elapsed="0.088404"/>
</kw>
<kw name="DELETE endpoin /users/id-user" owner="users_keywords">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:38.311003" level="INFO">DELETE Request : url=http://localhost:5000/api/v1/users/6864a112f75602e326ad6204 
 path_url=/api/v1/users/6864a112f75602e326ad6204 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjQ2N2MwNjY3MTY0NmNiMTFhYzNhZiIsImlhdCI6MTc1MTQyNTI5OCwiZXhwIjoxNzUxNTExNjk4fQ.AYhTTyY7giVkE_s0MizAg-6Tg-4QMnJiJbC63XJkhBs', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-07-02T00:01:38.311061" level="INFO">DELETE Response : url=http://localhost:5000/api/v1/users/6864a112f75602e326ad6204 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '41', 'ETag': 'W/"29-acm6zjlFy5zJu9kfItNOkEuApLY"', 'Date': 'Wed, 02 Jul 2025 03:01:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"message":"User removed"} 
 </msg>
<msg time="2025-07-02T00:01:38.311150" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>alias=${ALIAS_BASE}</arg>
<arg>url=/users/${id_user}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-02T00:01:38.238591" elapsed="0.072581"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.311659" level="INFO">Response: {'success': True, 'message': 'User removed'}</msg>
<arg>Response: ${resp.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:38.311294" elapsed="0.000405"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.311931" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<arg>${resp}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-07-02T00:01:38.311828" elapsed="0.000130"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:38.238333" elapsed="0.073660"/>
</kw>
<kw name="Validar se usuário foi removido com sucesso" owner="users_keywords">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["success"]}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:38.312408" elapsed="0.000294"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${resp.json()["message"]}</arg>
<arg>User removed</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-07-02T00:01:38.312786" elapsed="0.000257"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.313356" level="INFO">success: True</msg>
<arg>success: ${resp.json()["success"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:38.313122" elapsed="0.000262"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.313683" level="INFO">message: User removed</msg>
<arg>message: ${resp.json()["message"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:38.313456" elapsed="0.000254"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:38.312220" elapsed="0.001525"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" owner="common" source_name="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" owner="BuiltIn">
<arg>${resp.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-07-02T00:01:38.314193" elapsed="0.000572"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.314927" level="INFO">Status Code: 200</msg>
<arg>Status Code: ${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:38.314849" elapsed="0.000106"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:38.313928" elapsed="0.001063"/>
</kw>
<kw name="Finalizar sessão" owner="base" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-07-02T00:01:38.315421" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-07-02T00:01:38.315378" elapsed="0.000089"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T00:01:38.315588" level="INFO">Sessões encerradas.</msg>
<arg>Sessões encerradas.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T00:01:38.315538" elapsed="0.000077"/>
</kw>
<status status="PASS" start="2025-07-02T00:01:38.315187" elapsed="0.000462"/>
</kw>
<tag>excluir_user_por_id</tag>
<status status="PASS" start="2025-07-02T00:01:37.874669" elapsed="0.441048"/>
</test>
<doc>Cenários de testes candidatos à automação para o módulo de "Users"</doc>
<status status="PASS" start="2025-07-02T00:01:37.485882" elapsed="0.830150"/>
</suite>
<status status="FAIL" start="2025-07-02T00:01:34.078560" elapsed="4.237981"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">bug_conhecido</stat>
<stat pass="1" fail="0" skip="0">criar_cinema_invalido</stat>
<stat pass="1" fail="0" skip="0">criar_cinema_valido</stat>
<stat pass="1" fail="0" skip="0">criar_movie_inv</stat>
<stat pass="0" fail="1" skip="0">criar_reserva_inv</stat>
<stat pass="1" fail="0" skip="0">criar_reserva_valida</stat>
<stat pass="1" fail="0" skip="0">criar_sessao_invalido</stat>
<stat pass="1" fail="0" skip="0">criar_sessao_valido</stat>
<stat pass="1" fail="0" skip="0">excluir_user_por_id</stat>
<stat pass="1" fail="0" skip="0">login_inválido</stat>
<stat pass="1" fail="0" skip="0">login_válido</stat>
<stat pass="1" fail="0" skip="0">obter_detalhes_user_por_id</stat>
<stat pass="1" fail="0" skip="0">obter_reserva_sem_auth</stat>
<stat pass="1" fail="0" skip="0">registro_email_dup</stat>
<stat pass="1" fail="0" skip="0">ver_detalhes_filme</stat>
</tag>
<suite>
<stat name="Tests" id="s1" pass="13" fail="1" skip="0">Tests</stat>
<stat name="Authentication Tests" id="s1-s1" pass="3" fail="0" skip="0">Tests.Authentication Tests</stat>
<stat name="Movie Tests" id="s1-s2" pass="2" fail="0" skip="0">Tests.Movie Tests</stat>
<stat name="Reservations Tests" id="s1-s3" pass="2" fail="1" skip="0">Tests.Reservations Tests</stat>
<stat name="Sessions Tests" id="s1-s4" pass="2" fail="0" skip="0">Tests.Sessions Tests</stat>
<stat name="Theaters Tests" id="s1-s5" pass="2" fail="0" skip="0">Tests.Theaters Tests</stat>
<stat name="Users Tests" id="s1-s6" pass="2" fail="0" skip="0">Tests.Users Tests</stat>
</suite>
</statistics>
<errors>
<msg time="2025-07-02T00:01:36.544986" level="WARN">BUG CONFIRMADO: API retorna 'Resource not found' em vez de validar payload</msg>
</errors>
</robot>
